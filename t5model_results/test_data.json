[
   {
      "source_code": "        debug('table exist -- initialization done');\n        localTableReq = buildTableReq(table.name, table.schema, this);\n        var indexes = compareIndexes(localTableReq, data.Table);\n",
      "target_code": "        debug('table exist -- initialization done');\n        localTableReq = table.buildTableReq(table.name, table.schema);\n        var indexes = compareIndexes(localTableReq, data.Table);\n",
      "predection": "debug('table exist -- initialization done'); localTableReq = buildTableReq(table.name, table.schema); var indexes = compareIndexes(localTableReq, data.Table);",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "            this.cursor = 'pointer';\n            this.offsetY = isNaN(this.offsetY) || (this.offsetY==undefined) || (this.offsetY < 0) ? evt.rawY/2 : this.offsetY;\n        });\n",
      "target_code": "            this.cursor = 'pointer';\n            this.offsetY = isNaN(this.offsetY) || (this.offsetY < 0) ? evt.rawY/2 : this.offsetY;\n        });\n",
      "predection": "this.cursor = 'pointer'; this.offsetY = isNaN(this.offsetY) || (this.offsetY==undefined) || (this.offsetY  0)? evt.rawY/2 : this.offsetY; } );",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "      };\n      this.testProvider.evaluateCodeLens(codeLens, null);\n    },\n",
      "target_code": "      };\n      testContext.testProvider.evaluateCodeLens(codeLens, null);\n    },\n",
      "predection": "} ; testContext.testProvider.evaluateCodeLens(codeLens, null); },",
      "error id": "no-invalid-this",
      "correct": "True"
   },
   {
      "source_code": "\tif (ast instanceof Array) {\n\t\treturn map(ast, bind(this, compile, context)).join('\\n') + '\\n'\n\t} else if (info.expressionTypes[ast.type]) {\n",
      "target_code": "\tif (ast instanceof Array) {\n\t\treturn map(ast, curry(compile, context)).join('\\n') + '\\n'\n\t} else if (info.expressionTypes[ast.type]) {\n",
      "predection": "if (ast instanceof Array) { return map(ast, compile, context).join(' \\ n') +'\\ n' } else if (info.expressionTypes[ast.type]) {",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "    var data = this.get('data');\n    var type = this.get('type').classify();\n    var options = Ember.merge({}, this.get('options'));\n\n    var chart = new Chart(context)[type](data, options);\n",
      "target_code": "    var data = this.get('data');\n    var type = Ember.String.classify(this.get('type'));\n    var options = Ember.merge({}, this.get('options'));\n\n    var chart = new Chart(context)[type](data, options);\n",
      "predection": "var data = this.get('data'); var type = this.get('type').classify(); var options = Ember.merge( { }, this.get('options')); var chart = new Chart(context)[type](data, options);",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "  }\n  delete this.store[resourceName].completedQueries[id];\n}\n",
      "target_code": "  }\n\n  return ejected;\n}\n",
      "predection": "} delete that.store[resourceName].completedQueries[id]; }",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "        }\n\n        navigating = this.pathname;\n\n        var search;\n        if (mode === 'hash') {\n",
      "target_code": "        }\n\n        navigating = this.pathname;\n\n        let search;\n        if (mode === 'hash') {\n",
      "predection": "} var navigating = this.pathname; if (mode === 'hash') {",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "const { writeFileSync } = require('fs')\n\nfunction robotsModule (moduleOptions) {\n  const options = getOptions.call(this, moduleOptions)\n\n  \n",
      "target_code": "const { writeFileSync } = require('fs')\n\nmodule.exports = function (moduleOptions) {\n  const options = getOptions.call(this, moduleOptions)\n\n  \n",
      "predection": "const { writeFileSync } = require('fs') module.exports = function robotsModule (moduleOptions) { const options = getOptions(moduleOptions)",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "  \n  consumer.__kafkaAvro_getReadStream = consumer.getReadStream;\n  consumer.getReadStream = this._getReadStreamWrapper.bind(this, consumer);\n\n  consumer.__kafkaAvro_on = consumer.on;\n",
      "target_code": "  \n\n  consumer.__kafkaAvro_on = consumer.on;\n",
      "predection": "consumer.__kafkaAvro_getReadStream = consumer.getReadStream; consumer.getReadStream = this._getReadStreamWrapper.bind(this, consumer); consumer.__kafkaAvro_on = consumer.on;",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "                else if (doc != null) {\n                    callback.call(this, null, doc);\n                }\n                else {\n",
      "target_code": "                else if (doc != null) {\n                    callback(null, doc);\n                }\n                else {\n",
      "predection": "else if (doc!= null) { callback(null, doc); } else {",
      "error id": "no-invalid-this",
      "correct": "True"
   },
   {
      "source_code": "\nvar undef;\nvar _ = this;\n\n",
      "target_code": "var undef;\n\n",
      "predection": "var undef;",
      "error id": "no-invalid-this",
      "correct": "True"
   },
   {
      "source_code": "        if (key === 13) {\n            this.viewer.raiseEvent( 'selection', fixRect(this.rect) );\n            this.viewer.removeOverlay(this.element);\n        } else if (String.fromCharCode(key) === this.keyboardShortcut) {\n",
      "target_code": "        if (key === 13) {\n            this.viewer.raiseEvent( 'selection', fixRect(this.rect) );\n            this.undraw();\n        } else if (String.fromCharCode(key) === this.keyboardShortcut) {\n",
      "predection": "if (key === 13) { this.viewer.raiseEvent('selection', fixRect(this.rect) ); this.viewer.removeOverlay(this.element); } else if (String.fromCharCode(key) === this.keyboardShortcut) {",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "\t\t\n\t\t_.each(this._orphanRelations.slice(0), function(rel) {\n\t\t\tlet relatedModel = this.getObjectByName(rel.relatedModel);\n\t\t\tif (relatedModel) {\n",
      "target_code": "\t\t\n\t\t_.each(this._orphanRelations.slice(0), (rel) => {\n\t\t\tlet relatedModel = this.getObjectByName(rel.relatedModel);\n\t\t\tif (relatedModel) {\n",
      "predection": "_.each(this._orphanRelations.slice(0), (rel) => { let relatedModel = this.getObjectByName(rel.relatedModel); if (relatedModel) {",
      "error id": "no-invalid-this",
      "correct": "True"
   },
   {
      "source_code": "        \n        if (enableGzip && this.acceptsEncodings('gzip') === 'gzip') {\n          this.remove('Content-Length')\n",
      "target_code": "        \n        if (shouldGzip) {\n          this.remove('Content-Length')\n",
      "predection": "if (enableGzip) { this.remove('Content-Length')",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "\nconst GlobalObject = (this || 0).self || (typeof self !== \"undefined\") ? self : global;\n\n",
      "target_code": "\nconst GlobalObject = (typeof self !== \"undefined\") ? self : global;\n\n",
      "predection": "const GlobalObject = (typeof self!== \"undefined\")? self : global;",
      "error id": "no-invalid-this",
      "correct": "True"
   },
   {
      "source_code": "    else {\n      g.extent = extent.apply(this, arguments);\n      mouseLocation = t.invert(mousePoint = mouse(this));\n      interrupt(this);\n",
      "target_code": "    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n",
      "predection": "else { g.mouse = [p, t.invert(p)]; interrupt(this);",
      "error id": "no-invalid-this",
      "correct": "True"
   },
   {
      "source_code": "        $elemMatch: {\n          userId: this.userId,\n          isAdmin: true,\n",
      "target_code": "        $elemMatch: {\n          userId,\n          isAdmin: true,\n",
      "predection": "$elemMatch: { userId: this.userId, isAdmin: true,",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "\t\treturn $.grep(this._pages, $.proxy(function(page, index) {\n\t\t\treturn current === this._core.maximum() && !this._core.settings.loop\n\t\t\t\t? index === this._pages.length - 1\n\t\t\t\t: page.start <= current && page.end >= current;\n\t\t}, this)).pop();\n",
      "target_code": "\t\treturn $.grep(this._pages, $.proxy(function(page, index) {\n\t\t\treturn page.start <= current && page.end >= current;\n\t\t}, this)).pop();\n",
      "predection": "return $.grep(this._pages, $.proxy(function(page, index) { return current === this._core.maximum()? index === this._pages.length - 1 : page.start = current && page.end >= current; }, this)).pop();",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\tif ((name === '__value') || !(rel = this[name]) ||\n\t\t\t\t\t\t(rel !== this[name.slice(1)])) {\n\t\t\t\t\treturn;\n",
      "target_code": "\t\t\t\tif ((name === '__value') || !(rel = this[name]) ||\n\t\t\t\t\t\t(rel._type_ !== 'relation')) {\n\t\t\t\t\treturn;\n",
      "predection": "if ((name === '__value') ||!(rel = this[name])) { return;",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "        this.attached();\n        this.init();\n\n        this.$trigger('init.uk.component', [name, this]);\n\n",
      "target_code": "        this.attached();\n        this.init();\n\n",
      "predection": "this.attached(); this.$trigger('init.uk.component', [name, this]);",
      "error id": "no-invalid-this",
      "correct": "False"
   },
   {
      "source_code": "        if (!(this.get(\"BIXPIX\") > 0)) {\n          throw \"BLANK is not to be used for BITPIX = \" + (this.get('BITPIX'));\n        }\n",
      "target_code": "        if (!(this.get(\"BIXPIX\") > 0)) {\n          console.warn(\"BLANK is not to be used for BITPIX = \" + (this.get('BITPIX')));\n        }\n",
      "predection": "if (!(this.get(\"BIXPIX\") > 0)) { throw new Error(\"BLANK is not to be used for BITPIX = \" + (this.get('BITPIX'))); }",
      "error id": "no-throw-literal",
      "correct": "False"
   },
   {
      "source_code": "                if (!tileset) {\n                    throw \"melonJS:\" + src + \" TSX tileset not found\";\n                }\n",
      "target_code": "                if (!tileset) {\n                    throw new me.Error(src + \" TSX tileset not found\");\n                }\n",
      "predection": "if (!tileset) { throw new me.Error(\"TSX tileset not found\"); }",
      "error id": "no-throw-literal",
      "correct": "False"
   },
   {
      "source_code": "                if (!existing_type.equals(type)) {\n                    throw (\"compile error: different expressions use \"\n                           + \"conflicting types for '\" + decltype + \" \" + glsl_name\n",
      "target_code": "                if (!existing_type.equals(type)) {\n                    throw new Error(\"compile error: different expressions use \"\n                           + \"conflicting types for '\" + decltype + \" \" + glsl_name\n",
      "predection": "if (!existing_type.equals(type)) { throw new Error(\"compile error: different expressions use \" + \"conflicting types for '\" + decltype + \" \" + glsl_name",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "  if (element === undefined) {\n    throw 'getEnabledElement: parameter element must not be undefined';\n  }\n",
      "target_code": "  if (element === undefined) {\n    throw new Error('getEnabledElement: parameter element must not be undefined');\n  }\n",
      "predection": "if (element === undefined) { throw new Error('getEnabledElement: parameter element must not be undefined'); }",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "    }\n    throw `Can't Find Training to Verify it contains errors. The grid should, but does not, contain a row with this data in it: FirstInput: ${firstInput} -- LastInput: ${lastInput} -- LastResponse: ${lastResponse}`\n  })\n",
      "target_code": "    }\n    throw new Error(`Can't Find Training to Verify it contains errors. The grid should, but does not, contain a row with this data in it: FirstInput: ${firstInput} -- LastInput: ${lastInput} -- LastResponse: ${lastResponse}`)\n  })\n",
      "predection": "} throw new Error(Can \\ 't Find Training to Verify it contains errors. The grid should, but does not, contain a row with this data in it: FirstInput: $ { firstInput } -- LastInput: $ { lastInput } -- LastResponse: $ { lastResponse } ) } )",
      "error id": "no-throw-literal",
      "correct": "False"
   },
   {
      "source_code": "    process.send('kill');\n    throw 'Discord.RSS commands module failed to login after 20 attempts. Terminating.';\n  }\n",
      "target_code": "    process.send('kill');\n    throw new Error('Discord.RSS commands module failed to login after 20 attempts. Terminating.');\n  }\n",
      "predection": "process.send('kill'); throw new Error('Discord.RSS commands module failed to login after 20 attempts. Terminating.'); }",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "        if (!providers[providerName]) {\n            throw 'No such provider (' + providerName + ')';\n        }\n",
      "target_code": "        if (!providers[providerName]) {\n            throw new Error('No such provider (' + providerName + ')');\n        }\n",
      "predection": "if (!providers[providerName]) { throw new Error('No such provider (' + providerName + ')'); }",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "    createIndex() {\n        throw 'Unsupported operation on snapshots';\n    }\n",
      "target_code": "    createIndex() {\n        throw new Error('Unsupported operation on snapshots');\n    }\n",
      "predection": "createIndex() { throw new Error('Unsupported operation on snapshots'); }",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "    console.info('VFS::read()', item);\n    if ( !(item instanceof OFile) ) { throw 'Expects a file-object'; }\n    request(item.path, 'scandir', [item], callback);\n",
      "target_code": "    console.info('VFS::read()', item);\n    if ( !(item instanceof OFile) ) { throw new Error('Expects a file-object'); }\n    request(item.path, 'scandir', [item], callback);\n",
      "predection": "console.info('VFS::read()', item); if (!(item instanceof OFile) ) { throw new Error('Expects a file-object'); } request(item.path,'scandir', [item], callback);",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "  } else {\n    throw `no color space conversion for photometric interpretation ${imageFrame.photometricInterpretation}`;\n  }\n",
      "target_code": "  } else {\n    throw new Error(`No color space conversion for photometric interpretation ${imageFrame.photometricInterpretation}`);\n  }\n",
      "predection": "} else { throw new Error(no color space conversion for photometric interpretation $ { imageFrame.photometricInterpretation } ); }",
      "error id": "no-throw-literal",
      "correct": "False"
   },
   {
      "source_code": "            if (this.name === undefined) {\n                throw 'Ziggy Error: You must provide a route name';\n            } else if (namedRoutes[this.name] === undefined) {\n",
      "target_code": "            if (this.name === undefined) {\n                throw new Error('Ziggy Error: You must provide a route name');\n            } else if (namedRoutes[this.name] === undefined) {\n",
      "predection": "if (this.name === undefined) { throw new Error('Ziggy Error: You must provide a route name'); } else if (namedRoutes[this.name] === undefined) {",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "                if (!(\"WebSocket\" in window)) {\n                    throw \"WebSocket cannot be used - WebSockets are not supported by this browser\";\n                }\n",
      "target_code": "                if (!(\"WebSocket\" in window)) {\n                    throw  SceneJS_errorModule.fatalError(\"WebSocket cannot be used - WebSockets are not supported by this browser\");\n                }\n",
      "predection": "if (!(\"WebSocket\" in window)) { throw new Error(\"WebSocket cannot be used - WebSockets are not supported by this browser\"); }",
      "error id": "no-throw-literal",
      "correct": "False"
   },
   {
      "source_code": "      \n      if (!Form.editors.List.Modal.ModalAdapter) throw 'A ModalAdapter is required';\n\n",
      "target_code": "      \n      if (!Form.editors.List.Modal.ModalAdapter) throw new Error('A ModalAdapter is required');\n\n",
      "predection": "if (!Form.editors.List.Modal.ModalAdapter) throw new Error('A ModalAdapter is required');",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "        let area = baseItem.areas.filter(area => area.id == id)[0];\n        if (!area) throw \"404 ,the area was not found\";\n        return area;\n",
      "target_code": "        let area = baseItem.areas.filter(area => area.id == id)[0];\n        if (!area) throw new Error(\"404 ,the area was not found\");\n        return area;\n",
      "predection": "let area = baseItem.areas.filter(area => area.id == id)[0]; if (!area) throw new Error(\"404,the area was not found\"); return area;",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "        if (!y.type.equals(Shade.Types.float_t)) {\n            throw \"expected float, got \" + y.type.repr() + \"instead\";\n        }\n        return from_vec3(Shade.vec(x, y, 0));\n",
      "target_code": "        if (!y.type.equals(Shade.Types.float_t)) {\n            throw new Error(\"expected float, got \" + y.type.repr() + \"instead\");\n        }\n        return from_vec3(Shade.vec(x, y, 0));\n",
      "predection": "if (!y.type.equals(Shade.Types.float_t)) { throw new Error(\"expected float, got \" + y.type.repr() + \"instead\"); } return from_vec3(Shade.vec(x, y, 0));",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "        if (!this.range.containsRange(fold))\n            throw \"A fold can't intersect already existing fold\" + fold.range + this.range;\n\n        \n",
      "target_code": "        if (!this.range.containsRange(fold))\n            throw new Error(\"A fold can't intersect already existing fold\" + fold.range + this.range);\n\n        \n",
      "predection": "if (!this.range.containsRange(fold)) throw new Error(\"A fold can't intersect already existing fold\" + fold.range + this.range);",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readInt16: position cannot be less than 0';\n    }\n",
      "target_code": "    if (position < 0) {\n      throw new Error('littleEndianByteArrayParser.readInt16: position cannot be less than 0');\n    }\n",
      "predection": "if (position  0) { throw new Error('littleEndianByteArrayParser.readInt16: position cannot be less than 0'); }",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "      \n      throw \" I dont know how change this corpus' public/private setting \";\n    }\n",
      "target_code": "      \n      throw new Error(\" I dont know how change this corpus' public/private setting \");\n    }\n",
      "predection": "throw new Error(\"I dont know how change this corpus' public/private setting \"); }",
      "error id": "no-throw-literal",
      "correct": "False"
   },
   {
      "source_code": "        if (args.length < 2) {\n            throw (\"Connect requires at least 2 arguments\");\n        }\n",
      "target_code": "        if (args.length < 2) {\n            throw new Error(('Connect requires at least 2 arguments'));\n        }\n",
      "predection": "if (args.length  2) { throw new Error(\"Connect requires at least 2 arguments\"); }",
      "error id": "no-throw-literal",
      "correct": "False"
   },
   {
      "source_code": "\t\t\tif (isUndefined(_pageNodeRef.positions)) {\n\t\t\t\tthrow 'Page reference id not found';\n\t\t\t}\n",
      "target_code": "\t\t\tif (isUndefined(_pageNodeRef.positions)) {\n\t\t\t\tthrow new Error('Page reference id not found');\n\t\t\t}\n",
      "predection": "if (isUndefined(_pageNodeRef.positions)) { throw new Error('Page reference id not found'); }",
      "error id": "no-throw-literal",
      "correct": "True"
   },
   {
      "source_code": "    obj['params']   = tab_params;\n    if(id) obj['id'] = new String(id);\n    \n",
      "target_code": "    obj['params']   = tab_params;\n    if(id) obj['id'] = String(id);\n    \n",
      "predection": "obj['params'] = tab_params; if(id) obj['id'] = String(obj['id']);",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "    var format = this.options.format\n    var phoneNumber = new String(this.options.number)\n    var formattedNumber = \"\"\n",
      "target_code": "    var format = this.options.format\n    var phoneNumber = String(this.options.number)\n    var formattedNumber = \"\"\n",
      "predection": "var format = this.options.format var phoneNumber = String(this.options.number) var formattedNumber = \"\"",
      "error id": "no-new-wrappers",
      "correct": "True"
   },
   {
      "source_code": "            var nCols = this.__spCols.getValue();\n            for (var i = 0; i < nCols; ++i) {\n                cols.push(new String(i + 1));\n            }\n",
      "target_code": "            var nCols = this.__spCols.getValue();\n            for (var i = 0; i < nCols; ++i) {\n                cols.push(String(i + 1));\n            }\n",
      "predection": "var nCols = this.__spCols.getValue(); for (var i = 0; i  nCols; ++i) { cols.push(String(i + 1)); }",
      "error id": "no-new-wrappers",
      "correct": "True"
   },
   {
      "source_code": "    setAttr: function ($element, namespace, attr, value) {\n      $element[0].setAttribute(this.dasherize(namespace + attr), new String(value));\n    },\n",
      "target_code": "    setAttr: function ($element, namespace, attr, value) {\n      $element[0].setAttribute(this.dasherize(namespace + attr), String(value));\n    },\n",
      "predection": "setAttr: function ($element, namespace, attr, value) { $element[0].setAttribute(this.dasherize(namespace + attr), String(value)); },",
      "error id": "no-new-wrappers",
      "correct": "True"
   },
   {
      "source_code": "  it('works for String objects', function () {\n    var number = new String('4111111111111111');\n    expect(getCardType(number)[0].type).to.equal('visa');\n",
      "target_code": "  it('works for String objects', function () {\n    var number = new String('4111111111111111'); \n\n    expect(getCardType(number)[0].type).to.equal('visa');\n",
      "predection": "it('works for String objects', function () { var number = String.create('4111111111111111'); expect(getCardType(number)[0].type).to.equal('visa');",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "\nvar JSON = function() {\n  if (!(this instanceof JSON)) return new JSON();\n  ABSTRACT.apply(this, arguments);\n",
      "target_code": "\nvar JSONTYPE = function() {\n  if (!(this instanceof JSONTYPE)) return new JSONTYPE();\n  ABSTRACT.apply(this, arguments);\n",
      "predection": "var JSON = function() { ABSTRACT.apply(this, arguments);",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "    top: function() {\n        return new Number(0);\n    },\n",
      "target_code": "    top: function() {\n        return new objects.Number(0);\n    },\n",
      "predection": "top: function() { return Number(0); },",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "    it('can handle MACSTRING in Central European encoding', function() {\n          \n        var encoding = new String('x-mac-ce');\n        var data = '42 65 74 F5 74 92 70 75 73';\n",
      "target_code": "    it('can handle MACSTRING in Central European encoding', function() {\n        var encoding = 'x-mac-ce';\n        var data = '42 65 74 F5 74 92 70 75 73';\n",
      "predection": "it('can handle MACSTRING in Central European encoding', function() { var encoding = String('x-mac-ce'); var data = '42 65 74 F5 74 92 70 75 73';",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "\nexport default (str) => Object.defineProperty(new String(str), FLAG, { value: true })\n",
      "target_code": "\nexport default SafeString\n",
      "predection": "export default (str) => Object.defineProperty(String(str)), FLAG, { value: true } )",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "  t.notOk(is.hash(false), 'false is not a hash');\n  t.notOk(is.hash(new Boolean()), 'boolean obj is not hash');\n  t.notOk(is.hash(false), 'literal false is not hash');\n",
      "target_code": "  t.notOk(is.hash(false), 'false is not a hash');\n  t.notOk(is.hash(Object(false)), 'boolean obj is not hash');\n  t.notOk(is.hash(false), 'literal false is not hash');\n",
      "predection": "t.notOk(is.hash(false), 'false is not a hash'); t.notOk(is.hash(Boolean), 'boolean obj is not hash'); t.notOk(is.hash(false), 'literal false is not hash');",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "    currentTextToSearch = Normalizer.escapeRegExp(currentTextToSearch);\n    var thisSearchText = new String(currentTextToSearch);\n\n",
      "target_code": "    currentTextToSearch = Normalizer.escapeRegExp(currentTextToSearch);\n    var thisSearchText = String(currentTextToSearch);\n\n",
      "predection": "currentTextToSearch = Normalizer.escapeRegExp(currentTextToSearch); var thisSearchText = String(currentTextToSearch);",
      "error id": "no-new-wrappers",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\tnum\t= $('li.cloneMe').length;\n\t\t\t\tnewNum\t= new Number(num + 1);\n\n",
      "target_code": "\t\t\t\tnum\t= $('li.cloneMe').length;\n\t\t\t\tnewNum\t= (num + 1);\n\n",
      "predection": "num = $('li.cloneMe').length;",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "        now: function() {\n            return new String((new Date()).getTime());\n        }\n",
      "target_code": "        now: function() {\n            return (new Date()).getTime();\n        }\n",
      "predection": "now: function() { return String((new Date()).getTime()); }",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "        \n        header.push(new String(cellValue));\n      }\n",
      "target_code": "        \n        header.push(cellValue.toString());\n      }\n",
      "predection": "header.push([cellValue]); }",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "  }\n  return new String(out.join(''));\n}\n",
      "target_code": "  }\n  return Buffer.from(out.join(''));\n}\n",
      "predection": "} return out.join('') }",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\n\t\t\tobject[property] = new String(propertyValue);\n\n\t\t\tobject[property].toString = function () {\n",
      "target_code": "\t\t\t\n\t\t\tobject[property] = String(propertyValue);\n\n\t\t\tobject[property].toString = function () {\n",
      "predection": "object[property] = String(propertyValue); object[property].toString = function () {",
      "error id": "no-new-wrappers",
      "correct": "True"
   },
   {
      "source_code": "      if (response.statusCode != 200) {\n        reject(new String(response.body));\n        return;\n",
      "target_code": "      if (response.statusCode != 200) {\n        reject(Object.assign(new Error(), response.body));\n        return;\n",
      "predection": "if (response.statusCode!= 200) { reject(response.body); return;",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "    valid(value) {\n      return !isNaN(new Number(value));\n    },\n",
      "target_code": "    valid(value) {\n      return !isNaN(Number(value));\n    },\n",
      "predection": "valid(value) { return!isNaN(Number(value)); },",
      "error id": "no-new-wrappers",
      "correct": "True"
   },
   {
      "source_code": "    this._unreadIcon = NativeImage.createFromPath(UNREAD_ICON_PATH);\n    this._unreadString = new Number(UnreadBadgeStore.count()).toLocaleString();\n    this._baseIcon = NativeImage.createFromPath(BASE_ICON_PATH);\n",
      "target_code": "    this._unreadIcon = NativeImage.createFromPath(UNREAD_ICON_PATH);\n    this._unreadString = UnreadBadgeStore.count().toLocaleString();\n    this._baseIcon = NativeImage.createFromPath(BASE_ICON_PATH);\n",
      "predection": "this._unreadIcon = NativeImage.createFromPath(UNREAD_ICON_PATH); this._unreadString = Number(UnreadBadgeStore.count()).toLocaleString(); this._baseIcon = NativeImage.createFromPath(BASE_ICON_PATH);",
      "error id": "no-new-wrappers",
      "correct": "False"
   },
   {
      "source_code": "function _keyPathNormalize(kp) {\n    return new String(kp).replace(/\\[([^\\[\\]]+)\\]/g, function(m, k) {\n        return '.' + k.replace(/^[\"']|[\"']$/g, '')\n",
      "target_code": "function _keyPathNormalize(kp) {\n    return String(kp).replace(/\\[([^\\[\\]]+)\\]/g, function(m, k) {\n        return '.' + k.replace(/^[\"']|[\"']$/g, '')\n",
      "predection": "function _keyPathNormalize(kp) { return String(kp).replace(/ \\ [([ ^ \\ [ \\ ]]+) \\ ]/g, function(m, k) { return '.' + k.replace(/ ^ [\"']|[\"']$/g, '')",
      "error id": "no-new-wrappers",
      "correct": "True"
   },
   {
      "source_code": "      var ret = []\n      for (var key in obj) {\n        ret.push(optionsPrefix + key + (hasEquals ? '=' : ''))\n",
      "target_code": "      var ret = []\n      Object.keys(obj).forEach((key) => {\n        ret.push(optionsPrefix + key + (hasEquals ? '=' : ''))\n",
      "predection": "var ret = [] for (var key in obj) { if (!obj.hasOwnProperty(key)) continue; ret.push(optionsPrefix + key + (hasEquals? '=' : ''))",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "            var obj = JSON.parse(msg.json);\n            for (var i in obj) {\n                storage.setItem(i, obj[i]);\n            }\n        }\n",
      "target_code": "            var obj = JSON.parse(msg.json);\n            for (var i in obj) {\n                if (obj.hasOwnProperty(i)) {\n                    storage.setItem(i, obj[i]);\n                }\n",
      "predection": "var obj = JSON.parse(msg.json); for (var i in obj) { if (obj.hasOwnProperty(i)) { storage.setItem(i, obj[i]); }",
      "error id": "guard-for-in",
      "correct": "True"
   },
   {
      "source_code": "    \n    for (var i in sequence){\n        var item = sequence[i]\n",
      "target_code": "    \n    for (var i=0; i<sequence.length; i++){\n        var item = sequence[i]\n",
      "predection": "for (var i = 0; i  sequence.length; i++) { var item = sequence[i]",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\t    if ( w.apps[apps[j]] && w.apps[apps[j]].implies ) {\n\t\t\t\t\t\t\tfor ( k in w.apps[apps[j]].implies ) {\n                                                          \n\t\t\t\t\t\t\t\timplied = w.apps[apps[j]].implies[k];\n",
      "target_code": "\t\t\t\t\t    if ( w.apps[apps[j]] && w.apps[apps[j]].implies ) {\n\t\t\t\t\t\t\tfor ( k in w.apps[apps[j]].implies ) {\n                                                          if ( w.apps[apps[j]].implies.hasOwnProperty(k) ) {\n\t\t\t\t\t\t\t\timplied = w.apps[apps[j]].implies[k];\n",
      "predection": "if ( w.apps[apps[j]] && w.apps[apps[j]].implies ) { for ( var k = 0; k  w.apps[apps[j]].implies.length; k++ ) { implied = w.apps[apps[j]].implies[k];",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "            const WLPresets = OHIF.viewer.wlPresets;\n            for (let index in WLPresets) {\n                const currentPreset = WLPresets[index];\n",
      "target_code": "            const WLPresets = OHIF.viewer.wlPresets;\n            for (let index in WLPresets) {\n                if (!WLPresets.hasOwnProperty(index)) continue;\n                const currentPreset = WLPresets[index];\n",
      "predection": "const WLPresets = OHIF.viewer.wlPresets; for (let index = 0; index  WLPresets.length; index++) { const currentPreset = WLPresets[index];",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "\n\t\t\t\t\tfor (var j in styleOptions) {\n\t\t\t\t\t\tvar style = L.extend({}, L.Path.prototype.options, styleOptions[j]);\n",
      "target_code": "\n\t\t\t\t\tfor (var j = 0; j < styleOptions.length; j++) {\n\t\t\t\t\t\tvar style = L.extend({}, L.Path.prototype.options, styleOptions[j]);\n",
      "predection": "for (var j = 0; j  styleOptions.length; j++) { var style = L.extend( { }, L.Path.prototype.options, styleOptions[j]);",
      "error id": "guard-for-in",
      "correct": "True"
   },
   {
      "source_code": "\n            for (var i in body) {\n                if (typeof(body[i]) !== 'string') {\n                    throw new Error(\"An interface definition must be a string, defining the property type.\");\n                }\n",
      "target_code": "\n            for (var i in body) {\n                if (!body.hasOwnProperty(i)) {\n                    continue;\n                }\n",
      "predection": "for (var i in body) { if (body.hasOwnProperty(i)) { if (typeof(body[i])!=='string') { throw new Error(\"An interface definition must be a string, defining the property type.\");",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\tif( !el.data('tip-filtered') ){\n\t\t\t\t\tfor( var i in _p.tip.filters )\n\t\t\t\t\t\tcont = _p.tip.filters[i](cont) || cont\n\t\t\t\t\tel.data({\n",
      "target_code": "\t\t\t\tif( !el.data('tip-filtered') ){\n\t\t\t\t\t_p.tip.filters.forEach(function(filter){\n\t\t\t\t\t\tcont = filter(cont) || cont\n\t\t\t\t\t})\n\t\t\t\t\tel.data({\n",
      "predection": "if(!el.data('tip-filtered') ) { for( var i = 0; i  _p.tip.filters.length; i++ ) cont = _p.tip.filters[i](cont) || cont el.data( {",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "  {\n    for(id in left.project.paths){\n      \n",
      "target_code": "  {\n    for(var id = 0; id < left.project.paths.length; id++){\n      \n",
      "predection": "{ left.project.paths.forEach(function(path) {",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "\t\t\tvar defaultUI;\n\t\t\tfor (var index in data) {\n\t\t\t\t(function(ui) {\n",
      "target_code": "\t\t\tvar defaultUI;\n\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t(function(ui) {\n",
      "predection": "var defaultUI; for (var index = 0; index  data.length; index++) { (function(ui) {",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "            }\n            \n            for (name in files)\n                config[name] = files[name];\n",
      "target_code": "            }\n            \n            Object.keys(files).forEach(function(name) {\n                config[name] = files[name];\n",
      "predection": "} Object.keys(files).forEach(function(name) { config[name] = files[name];",
      "error id": "guard-for-in",
      "correct": "True"
   },
   {
      "source_code": "\t\t\tt._globalOptList = [];\n\t\t\tfor(rid in cl){\n\t\t\t\tdelete t.inner.byId(rid).lazyData;\n",
      "target_code": "\t\t\tt._globalOptList = [];\n\t\t\tarray.forEach(cl, function(rid){\n\t\t\t\tdelete t.inner.byId(rid).lazyData;\n",
      "predection": "t._globalOptList = []; for(rid in cl) { if(!cl.hasOwnProperty(rid)) continue; delete t.inner.byId(rid).lazyData;",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "\n    for (var id in this._variables) {\n        var variable = this._variables[id];\n        \n        if (variable.type === undefined) {\n",
      "target_code": "\n    for (var id in this._variables) {\n        if (this._variables.hasOwnProperty(id)) {\n            var variable = this._variables[id];\n            \n",
      "predection": "for (var id in this._variables) { if (this._variables.hasOwnProperty(id)) { var variable = this._variables[id]; if (variable.type === undefined) {",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "      if (value.groups) {\n        for (i in value.groups) {\n          tempMarkup      = tempMarkup + templateGroup;\n          subDeviceMarkup = '';\n\n",
      "target_code": "      if (value.groups) {\n        for (i in value.groups) {\n          if (value.groups.hasOwnProperty(i)) {\n            tempMarkup      = tempMarkup + templateGroup;\n            subDeviceMarkup = '';\n",
      "predection": "if (value.groups) { for (i in value.groups) { if (value.groups.hasOwnProperty(i)) { tempMarkup = tempMarkup + templateGroup; subDeviceMarkup = '';",
      "error id": "guard-for-in",
      "correct": "True"
   },
   {
      "source_code": "\nfor (let name in IMAGE_SOURCES) {\n  const url = IMAGE_SOURCES[name].image;\n",
      "target_code": "\nObject.keys(IMAGE_SOURCES).forEach((name) => {\n  const url = IMAGE_SOURCES[name].image;\n",
      "predection": "Object.keys(IMAGE_SOURCES).forEach(name => { const url = IMAGE_SOURCES[name].image;",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "\tvar apnKey = null;\n\tfor(var i in pemMessages) {\n\t\tvar message = pemMessages[i];\n\t\tif (!message.type.match(/KEY/)) {\n",
      "target_code": "\tvar apnKey = null;\n\tpemMessages.forEach(function(message) {\n\t\tif (!message.type.match(/KEY/)) {\n",
      "predection": "var apnKey = null; for(var i in pemMessages) { if (pemMessages.hasOwnProperty(i)) { var message = pemMessages[i]; if (!message.type.match(/KEY/)) {",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "          if(twosided){\n            for(index in this.connections.in){\n              var conn = this.connections.in[index];\n\n              if(conn.from == target.nodes[j] && conn.to == this.nodes[i]){\n",
      "target_code": "          if(twosided){\n            for(var k = this.connections.in.length - 1; k >= 0; k--){\n              var conn = this.connections.in[k];\n\n              if(conn.from == target.nodes[j] && conn.to == this.nodes[i]){\n",
      "predection": "if(twosided) { for(var j = this.connections.in.length - 1; j >= 0; j--) { var conn = this.connections.in[j]; if(conn.from == target.nodes[j] && conn.to == this.nodes[i]) {",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "\n      for (var key in data) {\n        var item = data[key];\n        textToInsert[i++] = \"<tr>\";\n",
      "target_code": "\n      for (var r = 0; r < data.length; r++) {\n        var item = data[r];\n        textToInsert[i++] = \"<tr>\";\n",
      "predection": "for (var i = 0; i  data.length; i++) { var item = data[i]; textToInsert[i++] = \"tr>\";",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "function runDefaultsTogether() {\n    for (var j in CONTOLLER_SCRIPTS) {\n        Script.include(CONTOLLER_SCRIPTS[j]);\n    }\n}\n",
      "target_code": "function runDefaultsTogether() {\n    for (var j in CONTOLLER_SCRIPTS) {\n        if (CONTOLLER_SCRIPTS.hasOwnProperty(j)) {\n            Script.include(CONTOLLER_SCRIPTS[j]);\n        }\n",
      "predection": "function runDefaultsTogether() { for (var j in CONTOLLER_SCRIPTS) { if (CONTOLLER_SCRIPTS.hasOwnProperty(j)) { Script.include(CONTOLLER_SCRIPTS[j]); }",
      "error id": "guard-for-in",
      "correct": "True"
   },
   {
      "source_code": "                        if (typeof deps[i] === 'object') {\r\n                            for (var d in deps[i]) {\r\n                                dName = d;\r\n",
      "target_code": "                        if (typeof deps[i] === 'object') {\r\n                            for (var d in deps[i]) {\r\n                                if (!deps[i].hasOwnProperty(d)) continue;\r\n                                dName = d;\r\n",
      "predection": "if (typeof deps[i] === 'object') { for (var d = 0; d  deps[i].length; d++) { dName = d;",
      "error id": "guard-for-in",
      "correct": "False"
   },
   {
      "source_code": "\r\nFont.prototype = new Object;\r\nFont.prototype.constructor = Font;\r\n",
      "target_code": "\r\nFont.prototype = new RefObject;\r\nFont.prototype.constructor = Font;\r\n",
      "predection": "Font.prototype = new RefObject; Font.prototype.constructor = Font;",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "    var regionList = new Array();\n    regionList.map = new Object();\n    for(var regionName in rawObj) {\n",
      "target_code": "    var regionList = new Array();\n    regionList.map = {};\n    for(var regionName in rawObj) {\n",
      "predection": "var regionList = new Array(); regionList.map = { } ; for(var regionName in rawObj) {",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "                var registerIndex = reader.ReadUInt8();\n                var texture = new Object();\n                texture.registerIndex = registerIndex;\n",
      "target_code": "                var registerIndex = reader.ReadUInt8();\n                var texture = {};\n                texture.registerIndex = registerIndex;\n",
      "predection": "var registerIndex = reader.ReadUInt8(); var texture = { } ; texture.registerIndex = registerIndex;",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "var preprocess = originalPreprocess; \nvar subsetPreprocess = new Object;\n\n\n",
      "target_code": "var preprocess = originalPreprocess; \nvar subsetPreprocess = {};\n\n\n",
      "predection": "var preprocess = originalPreprocess; var subsetPreprocess = { } ;",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "    function clear() {\n      storage = new Object();\n    }\n",
      "target_code": "    function clear() {\n      storage = {};\n    }\n",
      "predection": "function clear() { storage = { } ; }",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "\r\n_TextBoxModelChangedEventArgs.prototype = new Object;\r\n_TextBoxModelChangedEventArgs.prototype.constructor = _TextBoxModelChangedEventArgs;\r\n",
      "target_code": "\r\n_TextBoxModelChangedEventArgs.prototype = new RefObject;\r\n_TextBoxModelChangedEventArgs.prototype.constructor = _TextBoxModelChangedEventArgs;\r\n",
      "predection": "_TextBoxModelChangedEventArgs.prototype = new RefObject; _TextBoxModelChangedEventArgs.prototype.constructor = _TextBoxModelChangedEventArgs;",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "        if (useOrderedList) {\n            var listItem = new Object();\n            listItem['value'] = value;\n            listItem['key'] = key;\n            orderedList.push(listItem);\n",
      "target_code": "        if (useOrderedList) {\n            var listItem = new KeyValuePair(key, value);\n            orderedList.push(listItem);\n",
      "predection": "if (useOrderedList) { var listItem = { } ; listItem['value'] = value; listItem['key'] = key; orderedList.push(listItem);",
      "error id": "no-new-object",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tvar mods = new Object();\n\t\t\t\t\tfor (var i in loadDeps) {\n",
      "target_code": "\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tvar mods = {};\n\t\t\t\t\tfor (var i in loadDeps) {\n",
      "predection": "var mods = { } ; for (var i in loadDeps) {",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "    }\n\n    this._last_requests[this._rid] = new Object();\n    this._last_requests[this._rid].xml = reqstr;\n",
      "target_code": "    }\n\n    this._last_requests[this._rid] = {};\n    this._last_requests[this._rid].xml = reqstr;\n",
      "predection": "} this._last_requests[this._rid] = { } ; this._last_requests[this._rid].xml = reqstr;",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "\n    TextCandidate.prototype.__proto__ = new Object();\n\n",
      "target_code": "        this.children = [];\n        this.flags = [];\n    }\n\n",
      "predection": "function TextCandidate () { }",
      "error id": "no-new-object",
      "correct": "False"
   },
   {
      "source_code": "\t\t\n\t\tlet str = new Object(), len = new Object();\n\t\ttry {\n",
      "target_code": "\t\t\n\t\tlet str = {}, len = {};\n\t\ttry {\n",
      "predection": "let str = { }, len = { } ; try {",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "\n                    model = new Object();\n                    model.displayName = displayName;\n",
      "target_code": "\n                    model = {};\n                    model.displayName = displayName;\n",
      "predection": "model = { } ; model.displayName = displayName;",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "\n      _services[service].__mobj = new Object();\n      _services[service].__mobj.name = data[\"result\"][\"name\"];\n      _services[service].__mobj.doc = data[\"result\"][\"doc\"];\n      _services[service].__mobj.functions = new Array();\n",
      "target_code": "\n      var f = data[\"result\"][1][0];\n",
      "predection": "_services[service].__mobj = { } ; _services[service].__mobj.name = data[\"result\"][\"name\"]; _services[service].__mobj.doc = data[\"result\"][\"doc\"]; _services[service].__mobj.functions = new Array();",
      "error id": "no-new-object",
      "correct": "False"
   },
   {
      "source_code": "mw.html_editor.build_dropdown = function (fields_array) {\n    var html_dd = new Object();\n    $(fields_array).each(function () {\n",
      "target_code": "mw.html_editor.build_dropdown = function (fields_array) {\n    var html_dd = {};\n    $(fields_array).each(function () {\n",
      "predection": "mw.html_editor.build_dropdown = function (fields_array) { var html_dd = { } ; $(fields_array).each(function () {",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "\tthis.transferTo = transferTo;\n\tthis.whisperAudio = new Object();\n\tthis.state = \"transferring\"\n",
      "target_code": "\tthis.transferTo = transferTo;\n\tthis.whisperAudio = undefined\n\tthis.state = \"transferring\"\n",
      "predection": "this.transferTo = transferTo; this.whisperAudio = { } ; this.state = \"transferring\"",
      "error id": "no-new-object",
      "correct": "False"
   },
   {
      "source_code": "\n\nvar FCKRegexLib = new Object() ;\n\n\n",
      "target_code": "\n\nvar FCKRegexLib = {\n\n\n",
      "predection": "var FCKRegexLib = { } ;",
      "error id": "no-new-object",
      "correct": "False"
   },
   {
      "source_code": "  content += maybeSourceMap(entry, content)\n\n  const exported = new Object\n\n  if (Module.wrap === moduleWrapESM) {\n",
      "target_code": "  content += maybeSourceMap(entry, content)\n\n  const exported = new ExObject\n\n  if (Module.wrap === moduleWrapESM) {\n",
      "predection": "content += maybeSourceMap(entry, content) const exported = { } if (Module.wrap === moduleWrapESM) {",
      "error id": "no-new-object",
      "correct": "False"
   },
   {
      "source_code": "      $scope.initAds = 1;\n      $scope.dataMap = new Object();\n      $scope.inputClass = {};\n",
      "target_code": "      $scope.initAds = 1;\n      $scope.dataMap = {};\n      $scope.inputClass = {};\n",
      "predection": "$scope.initAds = 1; $scope.dataMap = { } ; $scope.inputClass = { } ;",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "        }\n\n        var parameterObject = new Object();\n\n        if (parameter instanceof SuperMap.AreaSolarRadiationParameter) {\n",
      "target_code": "        }\n\n        var parameterObject = {};\n\n        if (parameter instanceof SuperMap.AreaSolarRadiationParameter) {\n",
      "predection": "} var parameterObject = { } ; if (parameter instanceof SuperMap.AreaSolarRadiationParameter) {",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "AsyncTestCase = function (testSuiteName) {\n    var testSuite = new Object();\n    testSuite.prototype = {};\n",
      "target_code": "AsyncTestCase = function (testSuiteName) {\n    var testSuite = {};\n    testSuite.prototype = {};\n",
      "predection": "AsyncTestCase = function (testSuiteName) { var testSuite = { } ; testSuite.prototype = { } ;",
      "error id": "no-new-object",
      "correct": "True"
   },
   {
      "source_code": "      , d = this.opts.delimiter\n      , newLineCount = 0\n      , _addOutput;\n\n",
      "target_code": "      , d = this.opts.delimiter\n      , newLineCount = 0;\n\n",
      "predection": ", d = this.opts.delimiter, newLineCount = 0;",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": "            , 'docs-server.js'\n            , 'dom-initial.js'\n            , 'components.js'\n",
      "target_code": "            , 'docs-server.js'\n            \n            , 'components.js'\n",
      "predection": ", 'docs-server.js', 'components.js'",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": "    , _ = require('../utils')\n    , tea = require('tea');\n\n",
      "target_code": "    , _ = require('../utils')\n\n",
      "predection": ", _ = require('../utils')",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": "\t\t, ModelList = enyo.ModelList\n\t\t, Source = enyo.Source\n\t\t, oObject = enyo.Object;\n\t\n",
      "target_code": "\t\t, ModelList = enyo.ModelList\n\t\t, Source = enyo.Source;\n\t\n",
      "predection": ", ModelList = enyo.ModelList, Source = enyo.Source;",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": "\n\tfunction addTreeChangesMessages(messages, messagesHash, rootPath, oldValue, newValue) {\n\t\tvar oldIsTree = valueIsTree(oldValue)\n\t\t\t, newIsTree = valueIsTree(newValue);\n\n",
      "target_code": "'use strict';\n\n",
      "predection": "function addTreeChangesMessages(messages, messagesHash, rootPath, oldValue, newValue) { var oldIsTree = valueIsTree(oldValue), newIsTree = valueIsTree(newValue);",
      "error id": "comma-style",
      "correct": "False"
   },
   {
      "source_code": "  , readJson = require(\"read-package-json\")\n  , path = require(\"path\")\n  , npm = require(\"./npm.js\")\n  , asyncMap = require(\"slide\").asyncMap\n\n",
      "target_code": "'use strict'\n\n\n",
      "predection": "var npm = require(\"./npm.js\"), readJson = require(\"read-package-json\"), path = require(\"path\")",
      "error id": "comma-style",
      "correct": "False"
   },
   {
      "source_code": "'use strict';\nvar toInteger = require('./_to-integer')\n  , defined = require('./_defined');\n\n",
      "target_code": "'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\n",
      "predection": "'use strict'; var toInteger = require('./_to-integer'); var defined = require('./_defined');",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": "\nvar AuthorizationError = require('../errors/authorizationerror')\n  , ForbiddenError = require('../errors/forbiddenerror');\n\n\n",
      "target_code": "\nvar AuthorizationError = require('../errors/authorizationerror');\n\n\n",
      "predection": "var AuthorizationError = require('../errors/authorizationerror'); var ForbiddenError = require('../errors/forbiddenerror');",
      "error id": "comma-style",
      "correct": "False"
   },
   {
      "source_code": "        ,   radius         : 140   \n        ,   onMove         : null  \n        }\n",
      "target_code": "        ,   radius         : 140   \n        }\n",
      "predection": ", radius : 140 }",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": "  , graph  = require(\"levelgraph\")\n  , jsonld = require(\"../\")\n  , JSONLD = require(\"jsonld\");\n\ndescribe(\"jsonld.del\", function() {\n",
      "target_code": "  , graph  = require(\"levelgraph\")\n  , jsonld = require(\"../\");\n\ndescribe(\"jsonld.del\", function() {\n",
      "predection": ", graph = require(\"levelgraph\"), jsonld = require(\"../\"); describe(\"jsonld.del\", function() {",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": "\n\nvar utils = require('../utils')\n  , debug = require('debug')('express:router:route')\n  , methods = require('methods')\n",
      "target_code": "\n\nvar debug = require('debug')('express:router:route')\n  , methods = require('methods')\n",
      "predection": "var debug = require('debug')('express:router:route'), methods = require('methods')",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": "  , makeBuild =  require('../lib/make-build')\n  , generated = path.join(__dirname, 'fixtures/generated') \n\n",
      "target_code": "  , makeBuild =  require('../lib/make-build')\n\n",
      "predection": ", makeBuild = require('../lib/make-build')",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": "      type: 'object'\n    , required: false\n    , 'default': {}\n    }\n  });\n",
      "target_code": "      type: 'object'\n    , required: true\n",
      "predection": "type: 'object', required: false, 'default': { } } } );",
      "error id": "comma-style",
      "correct": "False"
   },
   {
      "source_code": "    } else {\n      var protocol = strategies[key].protocol\n        , callback = strategies[key].callback;\n\n",
      "target_code": "    } else {\n      var protocol = strategies[key].protocol;\n      var callback = strategies[key].callback;\n\n",
      "predection": "} else { const protocol = strategies[key].protocol; const callback = strategies[key].callback;",
      "error id": "comma-style",
      "correct": "False"
   },
   {
      "source_code": "var fs = require('fs')\n  , async = require('async')\n  , webshot = require('../lib/webshot');\n\n",
      "target_code": "var webshot = require('../lib/webshot');\n\n",
      "predection": "var fs = require('fs'), async = require('async');",
      "error id": "comma-style",
      "correct": "False"
   },
   {
      "source_code": "\nvar fbp = require('..')\n  , Fiber = require('fibers')\n  , InputPort = require('../core/InputPort')\n",
      "target_code": "\nvar Fiber = require('fibers')\n  , InputPort = require('../core/InputPort')\n",
      "predection": "var Fiber = require('fibers'), InputPort = require('../core/InputPort')",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": " }, {\n    stdin: process.stdin\n  , stdout: process.stdout\n}, function (err) {\n",
      "target_code": "}, {\n    stdin: process.stdin,\n    stdout: process.stdout\n}, function (err) {\n",
      "predection": "}, { stdin: process.stdin, stdout: process.stdout }, function (err) {",
      "error id": "comma-style",
      "correct": "True"
   },
   {
      "source_code": ", '    float dist = distance(gl_PointCoord, vec2(0.5));'\n, '    if (dist > 0.5) discard;'\n, '    gl_FragColor = v_fill;'\n, '}'\n",
      "target_code": ", '    float dist = distance(gl_PointCoord, vec2(0.5));'\n\n, '    gl_FragColor = v_stroke;'\n, '}'\n",
      "predection": ",'float dist = distance(gl_PointCoord, vec2(0.5));','gl_FragColor = v_fill;','} '",
      "error id": "comma-style",
      "correct": "False"
   },
   {
      "source_code": "var streamify = require('./streamify.js')\n  , parallel  = require('../parallel.js')\n  ;\n\n",
      "target_code": "var parallel = require('../parallel.js');\n\n",
      "predection": "var streamify = require('./streamify.js');",
      "error id": "comma-style",
      "correct": "False"
   },
   {
      "source_code": "  , EventEmitterStub = GENTLY.stub('events', 'EventEmitter')\n  , WriteStreamStub = GENTLY.stub('fs', 'WriteStream');\n\n",
      "target_code": "  , EventEmitterStub = GENTLY.stub('events', 'EventEmitter')\n  , FileStub = GENTLY.stub('./file');\n\n",
      "predection": ", EventEmitterStub = GENTLY.stub('events', 'EventEmitter')",
      "error id": "comma-style",
      "correct": "False"
   },
   {
      "source_code": "    this.children.forEach((listener, ee) => {\n      ee.emit.apply(ee, args);\n    });\n",
      "target_code": "    this.children.forEach((listener, ee) => {\n      ee.emit(event, ...args);\n    });\n",
      "predection": "this.children.forEach((listener, ee) => { ee.emit(...args); } );",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "    }\n\n    var children = childrenFromRemainingArguments.apply(null, remainingArguments),\n        jsxElement;\n",
      "target_code": "    }\n\n    var children = childrenFromRemainingArguments(remainingArguments),\n        jsxElement;\n",
      "predection": "} var children = childrenFromRemainingArguments(...restingArguments), jsxElement;",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "    this.entities = [];\n    while (instances--) {\n      this.entities.push(this.create.apply(this, this.args));\n    }\n",
      "target_code": "    this.entities = [];\n    while (this.instances--) {\n      this.entities.push(this.allocate());\n    }\n",
      "predection": "this.entities = []; while (...instances--) { this.entities.push(...this.args); }",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "          \n          \n          var dragOffset = this.getDragImageOffset(node);\n          dataTransfer.setDragImage.apply(dataTransfer, [node].concat(_toConsumableArray(dragOffset)));\n\n",
      "target_code": "'use strict';\n\n",
      "predection": "var dragOffset = this.getDragImageOffset(node); dataTransfer.setDragImage(node,...dragOffset);",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "    triggerEvent = function() {\n        console.log.apply(console, arguments);\n    }\n",
      "target_code": "    triggerEvent = function() {\n        \n    }\n",
      "predection": "triggerEvent = function() { }",
      "error id": "prefer-spread",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t}\n\t\t\tArray.apply(null, new Array(numOfPeers)).forEach(function (val, index) {\n\t\t\t\tif (syncModeArgs.ALL_TO_GROUP.INDICES.indexOf(index) !== -1) {\n",
      "target_code": "\t\t\t}\n\t\t\tArray(...new Array(numOfPeers)).forEach((val, index) => {\n\t\t\t\tif (syncModeArgs.ALL_TO_GROUP.INDICES.indexOf(index) !== -1) {\n",
      "predection": "} Array(...new Array(numOfPeers)).forEach(function (val, index) { if (syncModeArgs.ALL_TO_GROUP.INDICES.indexOf(index)!== -1) {",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "            \n            callback.apply(undefined, arguments);\n        }.bind(this));\n",
      "target_code": "            \n            callback(err);\n        }.bind(this));\n",
      "predection": "callback(err); }.bind(this));",
      "error id": "prefer-spread",
      "correct": "True"
   },
   {
      "source_code": "    consola.debug(`Generating nuxt files`)\n\n    this.plugins.length = 0\n    this.plugins.push.apply(this.plugins, this.normalizePlugins())\n\n    \n",
      "target_code": "    consola.debug(`Generating nuxt files`)\n\n    \n    this.plugins = Array.from(this.normalizePlugins())\n\n    \n",
      "predection": "consola.debug(Generating nuxt files) this.plugins.length = 0 this.plugins.push(...this.normalizePlugins())",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "  init() {\n    this._super.apply(this, arguments);\n\n    const keyboard = this.get('keyboard');\n",
      "target_code": "  init() {\n    this._super(...arguments);\n\n    const keyboard = this.get('keyboard');\n",
      "predection": "init() { this._super(...arguments); const keyboard = this.get('keyboard');",
      "error id": "prefer-spread",
      "correct": "True"
   },
   {
      "source_code": "      }\n      return ParserNode.InternalCall.apply(ParserNode, [\"continue\", this.index, this.scope()].concat(label ? [label] : []));\n    };\n",
      "target_code": "      }\n      return ParserNode.Call(func.index, scope || this.scope(), func, args).reduce(this.parser);\n    };\n",
      "predection": "} return ParserNode.Call(...[\"continue\", this.index, this.scope()].concat(label? [label] : [])); } ;",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "    didTransition() {\n      this._super.apply(this, arguments);\n      let organization = this.modelFor('organizations.organization');\n      this.analytics.track('Billing Viewed', organization);\n",
      "target_code": "    didTransition() {\n      const organization = this.controller.get('organization');\n      this.analytics.track('Billing Viewed', organization);\n",
      "predection": "didTransition() { this._super(...arguments); let organization = this.modelFor('organizations.organization'); this.analytics.track('Billing Viewed', organization);",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "    clearTimeout(this.timeoutID);\n    this.timeoutID = setTimeout.apply(null, arguments);\n  }\n};\n",
      "target_code": "    clearTimeout(this.timeoutID);\n    this.timeoutID = setTimeout(...args);\n  },\n};\n",
      "predection": "clearTimeout(this.timeoutID); this.timeoutID = setTimeout(...arguments); } ; } ;",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "    }\n\n    on() {\n        return this.addListener.apply(this, arguments);\n    }\n",
      "target_code": "    }\n\n    on(prop, ...rest) {\n        return this.addListener(prop, ...rest);\n    }\n",
      "predection": "} on(...args) { return this.addListener(...args); }",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "                case this.ERROR:\n                    _logger.error.apply(_logger, args);\n                    break;\n",
      "target_code": "                case this.ERROR:\n                    _logger.error(message);\n                    break;\n",
      "predection": "case this.ERROR: _logger.error(message); break;",
      "error id": "prefer-spread",
      "correct": "True"
   },
   {
      "source_code": "\nfunction unique() { var array = Array.prototype.concat.apply(Array.prototype, arguments); var result = []; for (var i = 0; i < array.length; i++) { if (result.indexOf(array[i]) === -1) { result.push(array[i]); } } return result; }\n\n",
      "target_code": "  return new Gaze(patterns, opts, done);\n};\nmodule.exports.Gaze = Gaze;\n\n",
      "predection": "function unique() { var result = []; for (var i = 0; i  array.length; i++) { if (result.indexOf(array[i]) === -1) { result.push(array[i]); } } return result; }",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "EventTarget.prototype.addEventListener = function addEventListener() {\n  return this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\n};\n",
      "target_code": "EventTarget.prototype.addEventListener = function addEventListener() {\n  return this._eventEmitter.addListener(...arguments);\n};\n",
      "predection": "EventTarget.prototype.addEventListener = function addEventListener() { return this._eventEmitter.addListener(...arguments); } ;",
      "error id": "prefer-spread",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\tthis.transaction = this.transaction || new sql.Transaction( this.connection );\n\t\t\t\t\tthis.transaction.begin.apply( this.transaction, args );\n\t\t\t\t},\n",
      "target_code": "\t\t\t\t\tthis.transaction = this.transaction || new sql.Transaction( this.connection );\n\t\t\t\t\tthis.transaction.begin( ...args );\n\t\t\t\t},\n",
      "predection": "this.transaction = this.transaction || new sql.Transaction( this.connection ); this.transaction.begin(...args ); },",
      "error id": "prefer-spread",
      "correct": "True"
   },
   {
      "source_code": "      }, function () {\n        defer.reject.apply(defer, arguments);\n      });\n",
      "target_code": "      }, function () {\n        defer.reject(arguments[2]);\n      });\n",
      "predection": "}, function () { defer.reject(...arguments); } );",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "      it (`Input: ${JSON.stringify(...input).slice(0, 66)}\\t Output: ${JSON.stringify(output)}`, () => {\n        expect(program.apply(null, input)).to.deep.equal(output);\n      });\n",
      "target_code": "      it (`Input: ${JSON.stringify(...input).slice(0, 66)}\\t Output: ${JSON.stringify(output)}`, () => {\n        expect(program(...input)).to.deep.equal(output);\n      });\n",
      "predection": "it (Input: $ { JSON.stringify(...input).slice(0, 66) } } t Output: $ { JSON.stringify(output) }, () => { expect(program(...input)).to.deep.equal(output); } );",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "    \n    info() {\n        this._record.apply(this, Array.prototype.unshift.call(arguments, 'info') && arguments);\n    }\n",
      "target_code": "    \n    info(...args) {\n        this._record('info', ...args);\n    }\n",
      "predection": "info(...args) { this._record(...args); }",
      "error id": "prefer-spread",
      "correct": "False"
   },
   {
      "source_code": "\tif (Error.captureStackTrace) {\n\t\tctor = parsed.options.constructorOpt || arguments.callee;\n\t\tError.captureStackTrace(this, ctor);\n",
      "target_code": "\tif (Error.captureStackTrace) {\n\t\tctor = parsed.options.constructorOpt || this.constructor;\n\t\tError.captureStackTrace(this, ctor);\n",
      "predection": "if (Error.captureStackTrace) { ctor = parsed.options.constructorOpt || parsed.options.constructorOpt; Error.captureStackTrace(this, ctor);",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "\n          if (arguments.callee.immediate) {\n            callback.apply(context, arguments.callee.args);\n          }\n",
      "target_code": "\n          if (immediate) {\n            callback.apply(context, args);\n          }\n",
      "predection": "if (options.immediate) { callback.apply(context, options.args); }",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "\t\t\tcatch (e) {\n\t\t\t\talert(arguments.callee.name + \"-> Method callback exception: \" + e);\n\t\t\t}\n\t\t}\n",
      "target_code": "\t\t\tcatch (e) {\n\t\t\t\talert(\"Exception deleting agent \" + objectPath + \" : \" + e);\n\t\t\t}\n\t\t}\n",
      "predection": "catch (e) { alert(\"Exception adding service \" + serviceName + \" : \" + e); } }",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "    {\n      document.removeEventListener('DOMNodeInserted', arguments.callee, false);\n    }\n",
      "target_code": "    {\n      document.removeEventListener('DOMNodeInserted', CustomElements._init_listener, false);\n    }\n",
      "predection": "{ document.removeEventListener('DOMNodeInserted', insertFlag, false); }",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "    function onClick(e, startReceiver) {\n        e.target.removeEventListener(e.type, arguments.callee);\n        e.target.disabled = true;\n",
      "target_code": "    function onClick(e, startReceiver) {\n        e.target.disabled = true;\n",
      "predection": "function onClick(e, startReceiver) { e.target.disabled = true;",
      "error id": "no-caller",
      "correct": "True"
   },
   {
      "source_code": "        \n        this.addListenerOnce(\"appear\", arguments.callee, this);\n        return;\n",
      "target_code": "        \n        this.addListenerOnce(\"appear\", this._updateAllRows, this);\n        return;\n",
      "predection": "this.addListenerOnce(\"appear\", fn, this); return;",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t} else {\n\t\t\t\t\tvar func = arguments.callee.bind(this);\n\t\t\t\t\treturn fileClient.fetchChildren(launchConfDir.ChildrenLocation).then(function(children) {\n",
      "target_code": "\t\t\t\t} else {\n\t\t\t\t\treturn fileClient.fetchChildren(launchConfDir.ChildrenLocation).then(function(children) {\n",
      "predection": "} else { return fileClient.fetchChildren(launchConfDir.ChildrenLocation).then(function(children) {",
      "error id": "no-caller",
      "correct": "True"
   },
   {
      "source_code": "\t\tif (result.length == 0) {\n\t\t\tresult = arguments.callee('');\n\t\t}\n",
      "target_code": "\t\tif (result.length == 0) {\n\t\t\tresult = getShortcutCode('');\n\t\t}\n",
      "predection": "if (result.length == 0) { result = utils.result(''); }",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tunbind(element, \"blur\", arguments.callee);\n\t\t\t\t\t\t});\n",
      "target_code": "\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tunbind(element, \"blur\", focus);\n\t\t\t\t\t\t});\n",
      "predection": "} unbind(element, \"blur\", fn); } );",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\n\t\t\tclip.addEventListener( 'canplaythrough', function(ev){\n\t\t\t\tthis.removeEventListener('canplaythrough', arguments.callee, false);\n\t\t\t\tloadCallback( path, true, ev );\n",
      "target_code": "\t\t\t\n\t\t\tclip.addEventListener( 'canplaythrough', function cb(ev){\n\t\t\t\tclip.removeEventListener('canplaythrough', cb, false);\n\t\t\t\tloadCallback( path, true, ev );\n",
      "predection": "clip.addEventListener( 'canplaythrough', function(ev) { loadCallback( path, true, ev );",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "    } else {\n        for(var i=0; i<bindings.length; i++) {\n            var outFloop = arguments.callee;\n            var currentBindings = bindings[i];\n            var mustAddBindings = true;\n",
      "target_code": "    } else {\n        async.eachSeries(bindings, function(currentBindings,k){\n            var mustAddBindings = true;\n",
      "predection": "} else { for(var i=0; ibindings.length; i++) { var currentBindings = bindings[i]; var mustAddBindings = true;",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "  Error.call(this);\n  Error.captureStackTrace(this, arguments.callee);\n  this.message = msg;\n",
      "target_code": "  Error.call(this);\n\n\n  this.message = msg;\n",
      "predection": "Error.call(this); this.message = msg;",
      "error id": "no-caller",
      "correct": "True"
   },
   {
      "source_code": "\t  parent.addNext(next_section);\n\t  arguments.callee(context, next_section, ptr);\n\t} else { \n",
      "target_code": "\t  parent.addNext(next_section);\n\t  _parse(context, next_section, ptr);\n\t} else { \n",
      "predection": "parent.addNext(next_section); _parse(context, next_section, ptr); } else {",
      "error id": "no-caller",
      "correct": "True"
   },
   {
      "source_code": "    if (x instanceof Runtime.vec)\n        return internal._evalVec(x, y, internal._extVec(alpha, x), arguments.callee);\n\n",
      "target_code": "    if (x instanceof Runtime.vec)\n        return internal._evalVec(x, y, internal._extVec(alpha, x), Builtins.mix);\n\n",
      "predection": "if (x instanceof Runtime.vec) return internal._evalVec(x, y, internal._extVec(alpha, x), Builtins.module);",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "\t\t\tjQuery.support.noCloneEvent = false;\n\t\t\tdiv.detachEvent(\"onclick\", arguments.callee);\n\t\t});\n",
      "target_code": "\t\t\tjQuery.support.noCloneEvent = false;\n\t\t\tdiv.detachEvent(\"onclick\", click);\n\t\t});\n",
      "predection": "jQuery.support.noCloneEvent = false; div.detachEvent(\"onclick\", onCloneEvent); } );",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "\tif ( extra ) {\n\t\targuments.callee( extra, context, results );\n\t}\n",
      "target_code": "\tif ( extra ) {\n\t\tSizzle( extra, context, results );\n\t}\n",
      "predection": "if ( extra ) { _parse( extra, context, results ); }",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "\tif(location.href.match(/^(file|http:\\/\\/(192.168|10)\\.).+\\/tests\\\n\telse if(includePzprFile() && includeDebugFile()){ startPuzzle();}\n\telse{ setTimeout(arguments.callee,0);}\n});\n\n",
      "target_code": "\tif(location.href.match(/^(file|http:\\/\\/(192.168|10)\\.).+\\/tests\\\n\telse if(importData() && includeDebugFile()){ startPuzzle();}\n\telse{ setTimeout(boot,0);}\n}\n\n",
      "predection": "if(location.href.match(/ ^ (file|http: \\ / \\ /(192.168|10) \\.).+ \\ /tests } else if(includePzprFile() && includeDebugFile()) { startPuzzle(); } else { setTimeout(startPuzzle()); } } );",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "  Error.call(this);\n  Error.captureStackTrace(this, arguments.callee);\n  this.code = code;\n",
      "target_code": "  Error.call(this);\n  Error.captureStackTrace(this, this.constructor);\n  this.code = code;\n",
      "predection": "Error.call(this); this.code = code;",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "  Error.call(this);\n  Error.captureStackTrace(this, arguments.callee);\n  this.name = 'ForbiddenError';\n",
      "target_code": "  Error.call(this);\n  Error.captureStackTrace(this, ForbiddenError);\n  this.name = 'ForbiddenError';\n",
      "predection": "Error.call(this); this.name = 'ForbiddenError';",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "\t\t\tcatch (e) {\n\t\t\t\talert(arguments.callee.name + \"-> Method callback exception: \" + e);\n\t\t\t}\n\t\t}\n",
      "target_code": "\t\t\tcatch (e) {\n\t\t\t\talert(\"Exception removing service \" + serviceName + \" : \" + e);\n\t\t\t}\n\t\t}\n",
      "predection": "catch (e) { alert(\"Exception adding service \" + serviceName + \" : \" + e); } }",
      "error id": "no-caller",
      "correct": "False"
   },
   {
      "source_code": "                scrollTimeout = null;\n            }.bind(exports), 200);\n        }\n",
      "target_code": "                scrollTimeout = null;\n            }, 200);\n        }\n",
      "predection": "scrollTimeout = null; }, 200); }",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "      pskl.utils.BlobUtils.dataToBlob(imageData, \"image/gif\", function(blob) {\n        pskl.utils.FileUtils.downloadAsFile(blob, fileName);\n      });\n    }.bind(this));\n  };\n",
      "target_code": "    var fileName = this.piskelController.getPiskel().getDescriptor().name + '.gif';\n    pskl.utils.BlobUtils.dataToBlob(imageData, \"image/gif\", function(blob) {\n      pskl.utils.FileUtils.downloadAsFile(blob, fileName);\n    });\n  };\n",
      "predection": "pskl.utils.BlobUtils.dataToBlob(imageData, \"image/gif\", function(blob) { pskl.utils.FileUtils.downloadAsFile(blob, fileName); } ); } ); } ;",
      "error id": "no-extra-bind",
      "correct": "False"
   },
   {
      "source_code": "                        console.log('IMAP server closed');\n                    }.bind(this));\n\n",
      "target_code": "                        console.log('IMAP server closed');\n                    });\n\n",
      "predection": "console.log('IMAP server closed'); } );",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "          this.updateLinks();\n        }).bind(this))\n        .done();\n",
      "target_code": "          this.updateLinks();\n        })\n        .done();\n",
      "predection": "this.updateLinks(); } ).done();",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "            current_state(data);\n          }.bind(this));\n        }\n",
      "target_code": "            current_state(data);\n          });\n        }\n",
      "predection": "current_state(data); } ); }",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "        test.ok(true);\n        test.done();\n      });\n    }.bind(this));\n\n",
      "target_code": "require(\"./common/bootstrap\");\n\n",
      "predection": "test.ok(true); test.done(); } ); } );",
      "error id": "no-extra-bind",
      "correct": "False"
   },
   {
      "source_code": "    }\n  }.bind(this);\n  closureCompiler.compile(files, options, null, compilerEvent,\n",
      "target_code": "    }\n  };\n  closureCompiler.compile(files, options, null, compilerEvent,\n",
      "predection": "} } ; closureCompiler.compile(files, options, null, compilerEvent,",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "\t\t\treturn menuItem;\n\t\t}).bind(this));\n\n",
      "target_code": "\t\t\treturn menuItem;\n\t\t});\n\n",
      "predection": "return menuItem; } );",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "    --g_numGames;\n    debug(\"removed game: \" + gameId + \", num games = \" + g_numGames);\n    delete g_games[gameId];\n  }.bind(this);\n\n",
      "target_code": "\"use strict\";\n\n",
      "predection": "--g_numGames; debug(\"removed game: \" + gameId + \", num games = \" + g_numGames); delete g_games[gameId]; } ;",
      "error id": "no-extra-bind",
      "correct": "False"
   },
   {
      "source_code": "        done();\n      }.bind(this));\n    });\n",
      "target_code": "        done();\n      });\n    });\n",
      "predection": "done(); } ); } );",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "    return context\n\n  }.bind(context))\n\n  ",
      "target_code": "    return context\n  })\n\n  ",
      "predection": "return context } )",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "      element.value = name;\n    }.bind(this);\n\n",
      "target_code": "      element.value = name;\n    };\n\n",
      "predection": "element.value = name; } ;",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "                );\r\n            }.bind(this));\r\n\r\n            attributes.value = this.state.value;\r\n",
      "target_code": "                );\r\n            });\r\n            attributes.value = this.state.value;\r\n",
      "predection": "); } ); attributes.value = this.state.value;",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "                cb(err);\n            }.bind(this));\n\n",
      "target_code": "                cb(err);\n            });\n\n",
      "predection": "cb(err); } );",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "      return Math.max(0, lag())\n    }.bind(this)\n  })\n",
      "target_code": "      return Math.max(0, lag())\n    }\n  })\n",
      "predection": "return Math.max(0, lag()) } } )",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "        this.state.featureStore.createFeature(feature)\n          .then(function(r) { console.log(r.statusText); }.bind(this))\n          .catch(this.handleError);\n",
      "target_code": "        this.state.featureStore.createFeature(feature)\n          .then(created)\n          .catch(this.handleError);\n",
      "predection": "this.state.featureStore.createFeature(feature).then(function(r) { console.log(r.statusText); } ).catch(this.handleError);",
      "error id": "no-extra-bind",
      "correct": "False"
   },
   {
      "source_code": "                });\n            }.bind(generator));\n        }\n",
      "target_code": "                });\n                return generator;\n            });\n        }\n",
      "predection": "} ); } ); }",
      "error id": "no-extra-bind",
      "correct": "False"
   },
   {
      "source_code": "                        dc.renderAll();\n                    }.bind(self));\n                    \n\n                });\n",
      "target_code": "                        dc.renderAll();\n                    });\n                    \n                    \n                });\n",
      "predection": "dc.renderAll(); } ); } );",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "        this.socket.on(events.CLIENT_APPLE_NOM, function(data) {\n            XSS.game.snakes[data[0]].size = data[1];\n            XSS.game.apples[data[2]].eat();\n        }.bind(this));\n\n",
      "target_code": "        this.socket.on(events.CLIENT_APPLE_NOM, function(data) {\n            XSS.room.game.snakes[data[0]].size = data[1];\n            XSS.room.game.apples[data[2]].eat();\n        });\n\n",
      "predection": "this.socket.on(events.CLIENT_APPLE_NOM, function(data) { XSS.game.snakes[data[0]].size = data[1]; XSS.game.apples[data[2]].eat(); } );",
      "error id": "no-extra-bind",
      "correct": "False"
   },
   {
      "source_code": "      tx.set([node.id, \"url\"], url);\n    }.bind(this));\n  };\n",
      "target_code": "      tx.set([node.id, \"url\"], url);\n    });\n  };\n",
      "predection": "tx.set([node.id, \"url\"], url); } ); } ;",
      "error id": "no-extra-bind",
      "correct": "True"
   },
   {
      "source_code": "  if (input && input.indexOf(\",\") > 0) {\n    \n    var output = new Array();\n    var array = input.split(\",\");\n",
      "target_code": "  if (input && input.indexOf(\",\") > 0) {\n    var output = [];\n    var array = input.split(\",\");\n",
      "predection": "if (input && input.indexOf(\",\") > 0) { var output = []; var array = input.split(\",\");",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "var previousSize; \nvar switchButtons = new Array(); \n\n",
      "target_code": "var previousSize; \nvar switchButtons = []; \n\n",
      "predection": "var previousSize; var switchButtons = [];",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "function Collection() {\n  \n  var items = new Array();\n  \n\n",
      "target_code": "function Collection() {\n  var items = [];\n\n",
      "predection": "function Collection() { var items = [];",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "\nvar customTabs = new Array();\n$(function ()\n",
      "target_code": "\nvar customTabs = [];\n$(function ()\n",
      "predection": "var customTabs = []; $(function ()",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "\t\n\tthis.moofs = new Array();\n\t\n",
      "target_code": "\t\n\tthis.moofs = [];\n\t\n",
      "predection": "this.moofs = [];",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "function cleanUp() {\n    accountarray = new Array();\n    emptyTable();\n",
      "target_code": "function cleanUp() {\n    accountarray = [];\n    emptyTable();\n",
      "predection": "function cleanUp() { accountarray = []; emptyTable();",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "\n    this.highDetail.children = new Array();\n    var self = this;\n",
      "target_code": "\n    this.highDetail.children = [];\n    var self = this;\n",
      "predection": "this.highDetail.children = []; var self = this;",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "        \n        var all_words_array = new Array();\n        valueArray.forEach(function(doc) {\n",
      "target_code": "        \n        var all_words_array = [];\n        valueArray.forEach(function(doc) {\n",
      "predection": "var all_words_array = []; valueArray.forEach(function(doc) {",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "        \n        this.scales = new Array();\n        for(var i = 0; i < confProps.resolutions.length; i++) {\n",
      "target_code": "        \n        this.scales = [];\n        for(var i = 0; i < confProps.resolutions.length; i++) {\n",
      "predection": "this.scales = []; for(var i = 0; i  confProps.resolutions.length; i++) {",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "function switchRegexp(tab) {\n\tvar pickup = new Array();\n\tswitchTo(tab.id);\n",
      "target_code": "function switchRegexp(tab) {\n\tvar pickup = [[],[]];\n\tswitchTo(tab.id);\n",
      "predection": "function switchRegexp(tab) { var pickup = []; switchTo(tab.id);",
      "error id": "no-array-constructor",
      "correct": "False"
   },
   {
      "source_code": "function getRemotes(workspaceDir, fileRoot, req, res, next, rest) {\n\t\tvar remotes = new Array();\n\t\tvar repoPath = rest.replace(\"remote/file/\", \"\");\n",
      "target_code": "function getRemotes(workspaceDir, fileRoot, req, res, next, rest) {\n\t\tvar remotes = [];\n\t\tvar repoPath = rest.replace(\"remote/file/\", \"\");\n",
      "predection": "function getRemotes(workspaceDir, fileRoot, req, res, next, rest) { var remotes = []; var repoPath = rest.replace(\"remote/file/\", \"\");",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "            $form.find(\"input[name='remark']\").val(role.remark);\n            var menuArr = new Array();\n            for (var i = 0; i < role.menuIds.length; i++) {\n",
      "target_code": "            $form.find(\"input[name='remark']\").val(role.remark);\n            var menuArr = [];\n            for (var i = 0; i < role.menuIds.length; i++) {\n",
      "predection": "$form.find(\"input[name='remark']\").val(role.remark); var menuArr = []; for (var i = 0; i  role.menuIds.length; i++) {",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "    this.addFindState = function(screenX, screenY, searchStr, wrapped, point, range, selection, direction) {\n        var state = new Array();\n        state[\"screenx\"] = screenX;\n",
      "target_code": "    this.addFindState = function(screenX, screenY, searchStr, wrapped, point, range, selection, direction) {\n        var state = [];\n        state[\"screenx\"] = screenX;\n",
      "predection": "this.addFindState = function(screenX, screenY, searchStr, wrapped, point, range, selection, direction) { var state = []; state[\"screenx\"] = screenX;",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "var game_metrics = null;\nvar game_streamout = new Array();\nvar game_quit = false;\n",
      "target_code": "var game_metrics = null;\nvar game_streamout = [];\nvar game_quit = false;\n",
      "predection": "var game_metrics = null; var game_streamout = []; var game_quit = false;",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "        if (typeof inputs[keyCode] === 'undefined') {\n          inputs[keyCode] = new Array()\n        }\n",
      "target_code": "        if (typeof inputs[keyCode] === 'undefined') {\n          inputs[keyCode] = []\n        }\n",
      "predection": "if (typeof inputs[keyCode] === 'undefined') { inputs[keyCode] = [] }",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "    let match = null;\n    let matches = new Array();\n    while (match = this.exec(string)) {\n",
      "target_code": "    let match = null;\n    let matches = [];\n    while (match = this.exec(string)) {\n",
      "predection": "let match = null; let matches = []; while (match = this.exec(string)) {",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "        }\n        var qualitesList = new Array();\n        var tagsList = getTags(videoSources, \"-quality\");\n",
      "target_code": "        }\n        var qualitesList = [];\n        var tagsList = getTags(videoSources, \"-quality\");\n",
      "predection": "} var qualitesList = []; var tagsList = getTags(videoSources, \"-quality\");",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "                var str = 'div.' + variables.get.typeOfBranch() + 'Branch:visible';\n                var temp = new Array();\n                $.each($(str).get(), function(i, item) {\n",
      "target_code": "                var str = 'div.' + variables.get.typeOfBranch() + 'Branch:visible';\n                var temp = [];\n                $.each($(str).get(), function(i, item) {\n",
      "predection": "var str = 'div.' + variables.get.typeOfBranch() + 'Branch:visible'; var temp = []; $.each($(str).get(), function(i, item) {",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "                }\r\n                window.intervalList = new Array();\r\n            };\r\n",
      "target_code": "                }\r\n                window.intervalList = [];\r\n            };\r\n",
      "predection": "} window.intervalList = []; } ;",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "\t    });\n\n\t    var options = this.options\n\t    this.options.markers = new Array();\n\n\t    \n",
      "target_code": "\t    });\n\n\t    var options = this.options;\n\t    this.options.markers = [];\n\n\t    \n",
      "predection": "} ); var options = this.options; this.options.markers = [];",
      "error id": "no-array-constructor",
      "correct": "True"
   },
   {
      "source_code": "\t\tHistory.forward = function(queue){\n\t\t\tHistory.debug('History.forward: called', arguments);\n\n",
      "target_code": "\t\tHistory.forward = function(queue){\n\t\t\t\n\n",
      "predection": "History.forward = function(queue) {",
      "error id": "prefer-rest-params",
      "correct": "True"
   },
   {
      "source_code": "\t\t\tthrow new TypeError(\"'f' is not of type 'Foobar'\");\n\t\t}\n\t\tlet __ks__;\n\t\tlet x = arguments.length > 1 && (__ks__ = arguments[++__ks_i]) !== void 0 && __ks__ !== null ? __ks__ : f.foobar();\n\t}\n",
      "target_code": "\t\t\tthrow new TypeError(\"'f' is not of type 'Foobar'\");\n\t\t}\n\t\tif(x === void 0 || x === null) {\n\t\t\tx = f.foobar();\n\t\t}\n\t}\n",
      "predection": "throw new TypeError(\"'f' is not of type 'Foobar'\"); } let x = arguments.length > 1 && (__ks__ = arguments[++__ks_i])!== void 0 && __ks__!== null? __ks__ : f.foobar(); }",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "                if(initialize === undefined) {\n                    delete arguments[i].prototype.initialize;\n                } else {\n",
      "target_code": "                if(initialize === undefined) {\n                    delete Type.prototype.initialize;\n                } else {\n",
      "predection": "if(initialize === undefined) { args[i].prototype.initialize = false; } else {",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "    }, {\n        key: 'katakanize',\n        value: function katakanize(str) {\n            var toWide = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\n",
      "target_code": "\"use strict\";\n\n",
      "predection": "'use strict';",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "  }\n\n  componentDidMount() {\n    super.componentDidMount(...arguments);\n    CosmosPackagesStore.fetchAvailablePackages();\n",
      "target_code": "  }\n\n  componentDidMount(...args) {\n    super.componentDidMount(...args);\n    CosmosPackagesStore.fetchAvailablePackages();\n",
      "predection": "} componentDidMount(...args) { super.componentDidMount(...args); CosmosPackagesStore.fetchAvailablePackages();",
      "error id": "prefer-rest-params",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\treturn function(){\n\t\t\t\t\t\treturn op(functions[0].apply(this,arguments),functions[1].apply(this,arguments));\n\t\t\t\t\t};\n",
      "target_code": "\t\t\t\t\treturn function(){\n\t\t\t\t\t\treturn !!fn.apply(this,arguments);\n\t\t\t\t\t};\n",
      "predection": "return function() { return...functions[0].apply(this,arguments); } ;",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "    }\n    insert(records) {\n        let returnResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        return __awaiter(this, void 0, void 0, function* () {\n",
      "target_code": "    }\n    insert(records, returnResult = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n",
      "predection": "} insert(records,...args) { let returnResult = args.length > 1 && args[1]!== undefined? args[1] : true; return __awaiter(this, void 0, void 0, function* () {",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "\n      obj[association.accessors[method]] = function() {\n        return association[realMethod](this, ...Array.from(arguments));\n      };\n",
      "target_code": "\n      obj[association.accessors[method]] = function(...args) {\n        return association[realMethod](this, ...args);\n      };\n",
      "predection": "obj[association.accessors[method]] = function(...args) { return association[realMethod](this,...args); } ;",
      "error id": "prefer-rest-params",
      "correct": "True"
   },
   {
      "source_code": "    var passThroughProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _displayName = arguments[3];\n\n",
      "target_code": "    var passThroughProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n",
      "predection": "var passThroughProps = arguments.length > 2 && arguments[2]!== undefined? arguments[2] : { } ;",
      "error id": "prefer-rest-params",
      "correct": "True"
   },
   {
      "source_code": "  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n",
      "target_code": "  var cb = arguments[arglm1]\n  \n  var k1 = ''\n",
      "predection": "var cb = arguments[arglm1] var cb0 = arguments[arglm2] var k1 = ''",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "\nfunction extractFunctions() {\n  const functions = slice.call(arguments).reduce((result, arg) => {\n    if (isFunction(arg)) {\n",
      "target_code": "\nfunction extractFunctions(...args) {\n  const functions = args.reduce((result, arg) => {\n    if (isFunction(arg)) {\n",
      "predection": "function extractFunctions(...functions) { functions.reduce((result, arg) => { if (isFunction(arg)) {",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "            },\n            jsEvaluate: function() {\n                return evaluator.evaluate.apply( evaluator, arguments );\n            }\n",
      "target_code": "            },\n            jsEvaluate( ...args ) {\n                return evaluator.evaluate( ...args );\n            }\n",
      "predection": "}, jsEvaluate(...args ) { return evaluator.evaluate(...args ); }",
      "error id": "prefer-rest-params",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\tjson: true\n\t\t\t}, arguments);\n\t\t};\n",
      "target_code": "\t\t\t\tjson: true\n\t\t\t}, key);\n\t\t};\n",
      "predection": "json: true } ); } ;",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "    constructor = constructor || function () { };\n    var i, len;\n    for (i = 1, len = arguments.length; i < len; i++) {\n        initializeProperties(constructor.prototype, arguments[i]);\n    }\n",
      "target_code": "        return defineClass(constructor, instanceMembers, staticMembers);\n    }\n",
      "predection": "constructor = constructor || function () { } ; var args; for (var i = 1, len = args.length; i  len; i++) { initializeProperties(args[i]); }",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "\n        constructor: function PageableCollection() {\n            PageableCollection.__super__.constructor.apply(this, arguments);\n        },\n",
      "target_code": "\n        constructor: function PageableCollection(...args) {\n            PageableCollection.__super__.constructor.apply(this, args);\n        },\n",
      "predection": "constructor: function PageableCollection(...args) { PageableCollection.__super__.constructor.apply(this, args); },",
      "error id": "prefer-rest-params",
      "correct": "True"
   },
   {
      "source_code": "    {\n        return super.add(...arguments)\n    }\n",
      "target_code": "    {\n        options = options || {}\n        super(options)\n        this.empty = true\n    }\n",
      "predection": "{ return super.add(typeof id!== 'undefined' && typeof id!== 'undefined' && typeof id!== 'undefined') }",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "        value: function(isFirstTime) {\n            this._callSuperMethod(AbstractComponentActionDelegate, 'enterDocument', arguments);\n            if (this.validationController && !this._hasContextObjectListener) {\n",
      "target_code": "        value: function(isFirstTime) {\n            this.super();\n            \n            if (this.validationController && !this._hasContextObjectListener) {\n",
      "predection": "value: function(isFirstTime) { if (this.validationController &&!this._hasContextObjectListener) {",
      "error id": "prefer-rest-params",
      "correct": "False"
   },
   {
      "source_code": "    constructor(){\n        super(...arguments);\n        super.addMixedIn('Source');\n",
      "target_code": "    constructor(){\n        super();\n        \n        super.addMixedIn('Source');\n",
      "predection": "constructor() { super(); super.addMixedIn('Source');",
      "error id": "prefer-rest-params",
      "correct": "True"
   },
   {
      "source_code": "class MesosSummaryStore extends GetSetBaseStore {\n  constructor() {\n    super(...arguments);\n\n",
      "target_code": "class MesosSummaryStore extends GetSetBaseStore {\n  constructor(...args) {\n    super(...args);\n\n",
      "predection": "class MesosSummaryStore extends GetSetBaseStore { constructor(...args) { super(...args);",
      "error id": "prefer-rest-params",
      "correct": "True"
   },
   {
      "source_code": "                            \n                            notify.call(stateStore, arguments[1], lastState.name, nextState.name);\n\n                        }\n",
      "target_code": "                            \n                            notify.call(stateStore, eventName, lastState.name, nextState.name);\n                        }\n",
      "predection": "notify.call(stateStore, eventName, lastState.name, nextState.name); }",
      "error id": "prefer-rest-params",
      "correct": "True"
   },
   {
      "source_code": "            extensions.concat(excluded),\n            function*(filePath, ev, match) {\n                if (!options.excludedWatchPatterns.some(regex => regex.test(filePath))) {\n",
      "target_code": "            extensions.concat(excluded),\n            async function(filePath, ev, match) {\n                if (!options.excludedWatchPatterns.some(regex => regex.test(filePath))) {\n",
      "predection": "extensions.concat(excluded), async function(filePath, ev, match) { if (!options.excludedWatchPatterns.some(regex => regex.test(filePath))) {",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "    const app = new Koa();\n\n    app.use(function *(ctx){\n      assert.deepEqual(ctx.state, {});\n",
      "target_code": "    const app = new Koa();\n\n    app.use(function(ctx){\n      assert.deepEqual(ctx.state, {});\n",
      "predection": "const app = new Koa(); app.use(function(ctx) { assert.deepEqual(ctx.state, { } );",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "\n    it('should return the data from the message response', function * () {\n      this.plugin.sendRequest = (msg) => {\n",
      "target_code": "\n    it('should return the data from the message response', async function () {\n      this.plugin.sendRequest = (msg) => {\n",
      "predection": "it('should return the data from the message response', async function () { this.plugin.sendRequest = (msg) => {",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "\t\ttasks: {\n\t\t\ta: function * (f, opts) {\n\t\t\t\tyield Promise.delay(2);\n",
      "target_code": "\t\ttasks: {\n\t\t\t* a(f, opts) {\n\t\t\t\tyield Promise.delay(2);\n",
      "predection": "tasks: { * a(f, opts) { yield Promise.delay(2);",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "        };\n\n\n        this.onComplete(function*() {\n            \n",
      "target_code": "        };\n\n\n        this.onComplete(async function() {\n            \n",
      "predection": "} ; this.onComplete(async function() {",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "\nstdlib.collect = function*(ctx, val, iter){\n    if(!types.isFunction(iter)){\n",
      "target_code": "\nstdlib.collect = async function(ctx, val, iter){\n    if(!types.isFunction(iter)){\n",
      "predection": "stdlib.collect = async function(ctx, val, iter) { if(!types.isFunction(iter)) {",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "  })\n\n  tman.it('POST /log, 200', function *() {\n    var token = app.signToken(user)\n",
      "target_code": "  })\n\n  tman.it('POST /log, 200', function * () {\n    var token = app.signToken(user)\n",
      "predection": "} ) tman.it('POST /log, 200', function * () { var token = app.signToken(user)",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "\n    *upattr(data, create) {\n        \n",
      "target_code": "\n    async upattr(data, create) {\n        \n",
      "predection": "* upattr(data, create) {",
      "error id": "generator-star-spacing",
      "correct": "False"
   },
   {
      "source_code": "\nmodule.exports = coroutine(function*(hash, all, changeTypes) {\n  const related = all.filter(item => {\n",
      "target_code": "\nmodule.exports = async (hash, all, changeTypes) => {\n  const related = all.filter(item => {\n",
      "predection": "module.exports = async function(hash, all, changeTypes) { const related = all.filter(item => {",
      "error id": "generator-star-spacing",
      "correct": "False"
   },
   {
      "source_code": "\n  tman.it('Request with unrecognized method', function *() {\n    var token = app.signToken(user)\n",
      "target_code": "\n  tman.it('Request with unrecognized method', function * () {\n    var token = app.signToken(user)\n",
      "predection": "tman.it('Request with unrecognized method', function * () { var token = app.signToken(user)",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "  BIP39.prototype.asyncFromRandom = function (bits) {\n    return asink(function *() {\n      if (!bits) {\n",
      "target_code": "  BIP39.prototype.asyncFromRandom = function (bits) {\n    return asink(function * () {\n      if (!bits) {\n",
      "predection": "BIP39.prototype.asyncFromRandom = function (bits) { return asink(function * () { if (!bits) {",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "Builder.prototype.build = function (configpath, options, fn) {\n\tco(function * (configpath, options) {\n\t\ttry {\n",
      "target_code": "Builder.prototype.build = function (configpath, options, fn) {\n\tco(function* (configpath, options) {\n\t\ttry {\n",
      "predection": "Builder.prototype.build = function (configpath, options, fn) { co(function* (configpath, options) { try {",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "  BIP39.prototype.asyncToSeed = function (passphrase) {\n    return asink(function *() {\n      if (passphrase === undefined) {\n",
      "target_code": "  BIP39.prototype.asyncToSeed = function (passphrase) {\n    return asink(function * () {\n      if (passphrase === undefined) {\n",
      "predection": "BIP39.prototype.asyncToSeed = function (passphrase) { return asink(function * () { if (passphrase === undefined) {",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "  describe('when dealing with multiple instances', function () {\n    it('makes a plan', Bluebird.coroutine(function * () {\n      const plan = yield migration(function up (migration) {\n        const person1 = migration.editContentType('person', {\n",
      "target_code": "  describe('when dealing with multiple instances', function () {\n    it('makes a plan', Bluebird.coroutine(function* () {\n      const plan = yield migration(function up(migration) {\n        const person1 = migration.editContentType('person', {\n",
      "predection": "describe('when dealing with multiple instances', function () { it('makes a plan', Bluebird.coroutine(function* () { const plan = yield migration(function up(migration) { const person1 = migration.editContentType('person', {",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "\n        it(\"should append to Table \", function*() {\n            const tableModel=new Array(4);\n",
      "target_code": "\n        it(\"should append to Table \", function(done) {\n            const tableModel=new Array(4);\n",
      "predection": "it(\"should append to Table \", function(done) { const tableModel=new Array(4);",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "\n  return co(function*() {\n    let res = yield request(options)\n    if (res.statusCode !== 200) {\n",
      "target_code": "\n  return co(function* fn() {\n    const res = yield request(options)\n    if (res.statusCode !== 200) {\n",
      "predection": "return co(function* () { let res = yield request(options) if (res.statusCode!== 200) {",
      "error id": "generator-star-spacing",
      "correct": "False"
   },
   {
      "source_code": "  return userMap;\n}\n\nfunction *_addStar(modName, username) {\n  yield ModuleStar.add(modName, username);\n",
      "target_code": "  return userMap;\n}\n\nfunction* _addStar(modName, username) {\n  yield ModuleStar.add(modName, username);\n",
      "predection": "return userMap; } function* _addStar(modName, username) { yield ModuleStar.add(modName, username);",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "\n  changeTitle: task(function * () {\n    const learnerGroup = this.learnerGroup;\n",
      "target_code": "\n  changeTitle: task(function* () {\n    const learnerGroup = this.learnerGroup;\n",
      "predection": "changeTitle: task(function* () { const learnerGroup = this.learnerGroup;",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "}\n\nfunction *get_wlfra_result(query) {\n\tvar url = 'http:\n",
      "target_code": "}\n\nfunction get_wlfra_result(query) {\n\tvar url = 'http:\n",
      "predection": "} function get_wlfra_result(query) { var url = 'http:",
      "error id": "generator-star-spacing",
      "correct": "True"
   },
   {
      "source_code": "\nfunction *googleCallback() {\n  if (this.query.error) {\n",
      "target_code": "\nasync function googleCallback() {\n  if (this.query.error) {\n",
      "predection": "function googleCallback() { if (this.query.error) {",
      "error id": "generator-star-spacing",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n",
      "target_code": "\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n",
      "predection": "super(); return this; }",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "\n\t\tthis.actOnTargetsIfStateMatches = function (event) {\n\t\t\tlet state = event.detail.state;\n",
      "target_code": "\n\t\tthis.actOnTargetsIfStateMatches = (function (event) {\n\t\t\tlet state = event.detail.state;\n",
      "predection": "this.actOnTargetsIfStateMatches = function (event) { let state = event.detail.state;",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "class defaultController extends controller {\n    constructor() {\n\n        this.indexAction = this.indexAction.bind(this);\n    }\n",
      "target_code": "    constructor() {\n        super();\n\n        this.indexAction = this.indexAction.bind(this);\n    }\n",
      "predection": "class defaultController extends controller { constructor(controller) { super(); this.indexAction = this.indexAction.bind(this); }",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "  constructor(location, binding, initializer) {\n    this.location = location;\n    this.binding = binding;\n    this.initializer = initializer;\n",
      "target_code": "  constructor(location, binding, initializer) {\n    super(location);\n    this.binding = binding;\n    this.initializer = initializer;\n",
      "predection": "constructor(location, binding, initializer) { super(location); this.binding = binding; this.initializer = initializer;",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "    this.configs = {};\n    this.container = this.setupContainer(this.container);\n    this.serializerFactory = new SerializerFactory(this.container);\n  }\n\n",
      "target_code": "    this.configs = {};\n",
      "predection": "this.configs = { } ; this.container = this.setupContainer(this.container); }",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "  constructor(appName, appVersion, appId, appInstallerId, screenName, experiment) {\n    this.type = 'screenview';\n    super({\n      an: appName,\n",
      "target_code": "  constructor(appName, appVersion, appId, appInstallerId, screenName, experiment) {\n    super('screenview', {\n      an: appName,\n",
      "predection": "constructor(appName, appVersion, appId, appInstallerId, screenName, experiment) { super('screenview', { an: appName,",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "        this.props = props;\n        this._vdom = createElement(h(this.tagName));\n        document.body.appendChild(this._vdom);\n        this._boundRender = () => {\n",
      "target_code": "        this.props = props;\n        this._boundRender = () => {\n",
      "predection": "this.props = props; this._vdom = createElement(h(this.tagName)); this.document.body.appendChild(this._vdom); this._boundRender = () => {",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "\n  constructor(project, url) {\n    this.project_ = project;\n    this.url_ = url;\n",
      "target_code": "\n  constructor(url) {\n    this.url_ = url;\n",
      "predection": "constructor(project, url) { super(); this.project_ = project; this.url_ = url;",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "  constructor() {\n    if (!(this instanceof Marker)) return new Marker();\n\n    super();\n",
      "target_code": "  constructor() {\n    super();\n",
      "predection": "constructor() { super();",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "  constructor(innerVisitor, ...args) {\n    this.innerVisitor = innerVisitor;\n    super();\n",
      "target_code": "  constructor(innerVisitor, ...args) {\n    super();\n",
      "predection": "constructor(innerVisitor,...args) { super();",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "\n  this.loop = false;\n  this.isPlaying = false;\n  this.isPaused = true;\n\n",
      "target_code": "\n    this.loop = false;\n    this.isPlaying = false;\n    this.isPaused = true;\n\n",
      "predection": "this.loop = false;",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "        this.body = validator(options, 'body') || null;\n        this.params = validator(options, 'params') || {};\n        this.urlParams = validator(options, 'params') || {};\n        this.method = validator(options, 'method') || 'get';\n",
      "target_code": "        this.body = validator(options, 'body') || null;\n        this.params = validator(options, 'params') || {};\n        this.urlParams = validator(options, 'urlParams') || {};\n        this.method = validator(options, 'method') || 'get';\n",
      "predection": "this.body = validator(options, 'body') || null; this.params = validator(options, 'params') || { } ; this.urlParams = validator(options, 'urlParams') || { } ; this.method = validator(options,'method') || 'get';",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "  constructor(player, loader) {\n    this.player = player\n    this.options = player.options\n",
      "target_code": "  constructor(player, loader) {\n    super()\n    this.player = player\n    this.options = player.options\n",
      "predection": "constructor(player, loader) { super() this.player = player this.options = player.options",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "\t    this.aft_bb = aft_bb;\n        this.isLoop = true;\n        super(label);\n    }\n",
      "target_code": "\t    this.aft_bb = aft_bb;\n        this.isLoop = true;\n    }\n",
      "predection": "this.aft_bb = aft_bb; }",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "    this.timeOffset = 0;\n\n    this.parentDiv = this.createDiv();\n\n    this.serverReady = false;\n",
      "target_code": "    this.timeOffset = 0;\n\n    this.serverReady = false;\n",
      "predection": "this.timeOffset = 0; this.serverReady = false;",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "\nclass RouteError extends Error {\n  constructor(method) {\n    this.message = `Route is not defined or is not allowed.\n    Before using @${method} method - add route url with @route method`;\n",
      "target_code": "  constructor(method) {\n    super();\n    \n    this.message = `Route is not defined or is not allowed.\n    Before using @${method} method - add route url with @route method`;\n",
      "predection": "constructor(method) { super(); this.message = Route is not defined or is not allowed. Before using @$ { method } method - add route url with @route method;",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "  constructor(timeline) {\n    this.timeline = timeline;\n    this.layers = timeline.layers;\n\n    this.interactionsGroup = timeline.interactionsGroup;\n    this.currentLayer = null;\n",
      "target_code": "  constructor(timeline) {\n    super(timeline);\n\n    this.currentLayer = null;\n",
      "predection": "constructor(timeline) { super(timeline); this.currentLayer = null;",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "        this.childElementContainer = this.element;\n        this._containerElement = containerElement;\n        this._containerElement.append( this.element );\n    }\n",
      "target_code": "        this.childElementContainer = this.element;\n        this._containerElement = containerElement;\n        this._containerElement.append(this.element);\n    }\n",
      "predection": "this.childElementContainer = this.element; this._containerElement = containerElement; }",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "class TuyaCloudRequestError extends Error {\n  constructor(options) {\n    this.code = options.code;\n    this.message = options.message;\n  }\n",
      "target_code": "    throw err;\n  }\n",
      "predection": "constructor(options) { super(); this.code = options.code; this.message = options.message; }",
      "error id": "no-this-before-super",
      "correct": "False"
   },
   {
      "source_code": "    constructor(rootPattern, referencer, callback) {\n        super(this);\n        this.referencer = referencer;\n",
      "target_code": "    constructor(rootPattern, referencer, callback) {\n        super();\n        this.referencer = referencer;\n",
      "predection": "constructor(rootPattern, referencer, callback) { super(); this.referencer = referencer;",
      "error id": "no-this-before-super",
      "correct": "True"
   },
   {
      "source_code": "\nArray.prototype.paginate = function(skip, take) {\n\tvar arr = [];\n\tvar self = this;\n\tfor (var i = 0, length = self.length; i < length; i++) {\n",
      "target_code": "\ncommon.page = '';\n",
      "predection": "define(Array, 'paginate', function(array, skip, take) { var arr = []; var self = this; for (var i = 0, length = self.length; i  length; i++) {",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "AFRAME.BRUSHES = {};\n\nNumber.prototype.toNumFixed = function (num) {\n  return parseFloat(this.toFixed(num));\n}\n\n",
      "target_code": "AFRAME.BRUSHES = {};\n\nAFRAME.registerBrush = function (name, definition, options) {\n  var proto = {};\n\n",
      "predection": "AFRAME.BRUSHES = { } ;",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\nObject.defineProperty(Object.prototype, \"merge\", {\n    value: function() {\n",
      "target_code": "\nObject.defineProperty(Object, \"merge\", {\n    value: function() {\n",
      "predection": "Object.defineProperty(Object.prototype, \"splice\", { value: function() {",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "if(typeof require !== 'undefined' && typeof exports !== 'undefined') {\n\tArray.prototype.toBuffer = function() {\n\t\treturn Buffer.concat(this[0]);\n\t};\n\tvar fs = require('fs');\n",
      "target_code": "if(typeof require !== 'undefined' && typeof exports !== 'undefined') {\n\tvar fs = require('fs');\n",
      "predection": "if(typeof require!== 'undefined' && typeof exports!== 'undefined') { var fs = require('fs');",
      "error id": "no-extend-native",
      "correct": "True"
   },
   {
      "source_code": "var REGWS = /[\\s]/g; \n\nString.prototype.rmWs = function() {\n\t\n\tif ( typeof this != 'undefined' )\n\t\t\n",
      "target_code": "var REGWS = /[\\s]/g; \n\nfunction rmWs(str) {\n\t\n",
      "predection": "var REGWS = /[ \\ s]/g; function rmWs() { if ( typeof this!= 'undefined' )",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\nArray.prototype.sum = function() {\n    return this.reduce(function(e1, e2) { return e1 + e2; }, 0);\n};\n\n",
      "target_code": "import U from \"src/util/util.js\";\n\n",
      "predection": "define(Array,'sum', function() { return this.reduce(function(e1, e2) { return e1 + e2; }, 0); } ;",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\nArray.prototype.remove = function (element) {\n    let index = this.findIndex(e => e === element);\n    if (index >= 0) {\n        this.splice(index, 1);\n",
      "target_code": "\n        target.remove = function (element) {\n            let index = this.findIndex(e => e === element);\n            if (index >= 0) {\n                this.splice(index, 1);\n",
      "predection": "define(Array,'remove', function (element) { let index = this.findIndex(e => e === element); if (index >= 0) { this.splice(index, 1);",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\n\t\t\tString.prototype.replaceAll = function (find, replace) {\n\t\t\t    var str = this;\n\t\t\t    return str.replace(new RegExp(find, 'g'), replace);\n\t\t\t};\n",
      "target_code": "\t\t\t\n\t\t\tString.prototype.replaceAll = String.prototype.replaceAll || function (find, replace) {\n\t\t\t\tvar str = this;\n\t\t\t\treturn str.replace(new RegExp(find, 'g'), replace);\n\t\t\t};\n",
      "predection": "newString.replaceAll = function (find, replace) { var str = this; return str.replace(new RegExp(find, 'g'), replace); } ;",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\nFloat32Array.prototype.xtract_get_data_frames = function (frame_size, hop_size, copy) {\n    if (typeof frame_size !== \"number\") {\n",
      "target_code": "\nFloat64Array.prototype.xtract_get_data_frames = Float32Array.prototype.xtract_get_data_frames = function (frame_size, hop_size, copy) {\n    if (typeof frame_size !== \"number\") {\n",
      "predection": "Float32Array.prototype.xtract_get_data_frames = function (frame_size, hop_size, copy) { if (typeof frame_size!== \"number\") {",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\nArray.prototype.compact = function() {\n    var results = [];\n",
      "target_code": "\ndefine(Array, 'compact', function() {\n    var results = [];\n",
      "predection": "define(Array, 'compact', function() { var results = [];",
      "error id": "no-extend-native",
      "correct": "True"
   },
   {
      "source_code": "\n\n\nString.prototype.toSingular = function () { return this.replace(/ies$/,'y').replace(/s$/,''); }\n\ndefine('Mobile/SalesLogix/Application', ['Sage/Platform/Mobile/Application'], function() {\n",
      "target_code": "\n\n\n\ndefine('Mobile/SalesLogix/Application', ['Sage/Platform/Mobile/Application'], function() {\n",
      "predection": "define('Mobile/SalesLogix/Application', ['Sage/Platform/Mobile/Application'], function() {",
      "error id": "no-extend-native",
      "correct": "True"
   },
   {
      "source_code": "\n  String.prototype.classify = function() {\n    return classify(this);\n",
      "target_code": "\n  StringPrototype.classify = function() {\n    return classify(this);\n",
      "predection": "qx.lang.String.classify = function() { return classify(this);",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\n  String.prototype.underscore = function() {\n    return underscore(this);\n",
      "target_code": "\n  StringPrototype.underscore = function() {\n    return underscore(this);\n",
      "predection": "qx.lang.String.underscore = function() { return underscore(this);",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "  var nblas = require('nblas');\n\n  Function.prototype.construct = function (args) {\n    var object = Object.create(this.prototype);\n    this.apply(object, args);\n    return object;\n",
      "target_code": "  var nblas = require('nblas');\n\n  ",
      "predection": "var nblas = require('nblas'); Function.prototype.__defineProperty__(\"construct\", function (args) { var object = Object.create(this.prototype); this.apply(object, args); return object;",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\n    Array.prototype.tap = function(fn, debugOnly) {\n        if (!debugOnly || exports.debug) {\n",
      "target_code": "\n    function tap(collection, fn, debugOnly) {\n        if (!debugOnly || exports.debug) {\n",
      "predection": "Array.prototype.__defineProperty__(\"tap\", function(fn, debugOnly) { if (!debugOnly || exports.debug) {",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\n  String.prototype.camelize = function() {\n    return camelize(this);\n",
      "target_code": "\n  StringPrototype.camelize = function() {\n    return camelize(this);\n",
      "predection": "StringPrototype.camelize = function() { return camelize(this);",
      "error id": "no-extend-native",
      "correct": "True"
   },
   {
      "source_code": "}\nif (!Array.prototype.reduceRight || !reduceRightCoercesToObject) {\n    Array.prototype.reduceRight = function reduceRight(fun ) {\n        var object = toObject(this),\n",
      "target_code": "}\nif (!ArrayPrototype.reduceRight || !reduceRightCoercesToObject) {\n    ArrayPrototype.reduceRight = function reduceRight(fun ) {\n        var object = toObject(this),\n",
      "predection": "} if (!prototypeOfArray.reduceRight ||!reduceRightCoercesToObject) { prototypeOfArray.reduceRight = function reduceRight(fun ) { var object = toObject(this),",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\nString.prototype.supplant = function (o) {\n    'use strict';\n",
      "target_code": "\nfunction supplant (str, o) {\n    'use strict';\n",
      "predection": "qx.lang.String.supplant = function (String.prototype, o) { 'use strict';",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "\nString.prototype.toDash = function() {\n    return this.replace(/([A-Z])/g, function($1) {\n        return \"-\" + $1.toLowerCase();\n    });\n",
      "target_code": "\nvar Csster = {\n",
      "predection": "qx.lang.String.toDash = function() { return this.replace(/([A-Z])/g, function($1) { return \"-\" + $1.toLowerCase(); } );",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "class MyError extends Error { }\nRegExp.prototype.exec = () => { throw new MyError() };\nassertEquals(null, \"foo\".match(/bar/));\n",
      "target_code": "class MyError extends Error { }\n",
      "predection": "class MyError extends Error { } RegExp.prototype.exec = () => { throw new MyError() } ; assertEquals(null, \"foo\".match(/bar/));",
      "error id": "no-extend-native",
      "correct": "False"
   },
   {
      "source_code": "                }\n                sumary.xErrAvg /= values.length;\n                sumary.yErrAvg /= values.length;\n                \n",
      "target_code": "                }\n                summary.xErrAvg /= values.length;\n                summary.yErrAvg /= values.length;\n                \n",
      "predection": "} sumary.xErrAvg /= values.length; sumary.yErrAvg /= values.length;",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t);\n\n\t\t\tPotree.workerPool.returnWorker(workerPath, worker);\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n",
      "target_code": "\t\t\t);\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n",
      "predection": "); THREE.workerPool.returnWorker(workerPath, worker); var geometry = new THREE.BufferGeometry();",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "  let curNode = node;\n  while (curNode && curNode.parentNode && curNode.parentNode !== document.body) {\n    curNode = curNode.parentNode;\n",
      "target_code": "  let curNode = node;\n  while (curNode && curNode.parentNode && curNode.parentNode !== documentBody) {\n    curNode = curNode.parentNode;\n",
      "predection": "let curNode = node; while (curNode && curNode.parentNode && curNode.parentNode!== doc.body) { curNode = curNode.parentNode;",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "\ndescribe('#hasTree', function() {\n    it('has a tree', function () {\n",
      "target_code": "\n    it('has a tree', function () {\n",
      "predection": "it('has a tree', function () {",
      "error id": "no-undef",
      "correct": "True"
   },
   {
      "source_code": "      columns: ['cartodb_id', 'title']\n    });\n    this.view = new cdb.geo.ui.Widget.List.Content({\n      showScroll: true,\n",
      "target_code": "      columns: ['cartodb_id', 'title']\n    });\n    this.view = new WidgetListContent({\n      showScroll: true,\n",
      "predection": "columns: ['cartodb_id', 'title'] } ); this.view = new WidgetList.Content( { showScroll: true,",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "    log.remove(log.transports.Console);\n    log.add(log.transports.Console, {\n        colorize: true\n    });\n\n",
      "target_code": "    log.remove(log.transports.Console);\n\n    \n",
      "predection": "log.remove(log.transports.Console); log.add(log.transports.Console, { colorize: true } );",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "        \n        var serverConfig = self.robeDb.db.driver._native.serverConfig;\n\n        var masterServer = _.find(serverConfig.servers || [], function (s) {\n",
      "target_code": "        \n        var serverConfig = _.get(self.robeDb.db, \"driver._native.serverConfig\", {});\n\n        var masterServer = _.find(serverConfig.servers || [], function (s) {\n",
      "predection": "var serverConfig = db.driver._native.serverConfig; var masterServer = _.find(serverConfig.servers || [], function (s) {",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "            body: params\n        };\n        return route.call(route,clone(_message));\n    }else{\n",
      "target_code": "            body: params\n        });\n        return route.call(route,_message);\n    }else{\n",
      "predection": "body: params } ; return _route.clone(_message); } else {",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "    });\n\n    _.set(controller, 'onPopoverDestroy', (fcEvent) => {\n      _.set(fcEvent, 'editable', true);\n      _.set(fcEvent, 'scope.isPopoverOpen', false);\n\n      const isConditionInEdition = _.some(controller.timeCondition.conditions, {\n",
      "target_code": "    });\n\n    set(controller, 'onPopoverDestroy', (fcEvent) => {\n      set(fcEvent, 'editable', true);\n      set(fcEvent, 'scope.isPopoverOpen', false);\n\n      const isConditionInEdition = some(controller.timeCondition.conditions, {\n",
      "predection": "} ); set(controller, 'onPopoverDestroy', (fcEvent) => { set(fcEvent, 'editable', true); set(fcEvent,'scope.isPopoverOpen', false); const isConditionInEdition = _.some(controller.timeCondition.conditions, {",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "\t\t\n\t\tvar pieceAnimation = dojo.animateProperty({\n\t\t\tnode: piece,\n",
      "target_code": "\t\t\n\t\tvar pieceAnimation = baseFx.animateProperty({\n\t\t\tnode: piece,\n",
      "predection": "var pieceAnimation = dojo.animateProperty( { node: piece,",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "\t\t\n\t\tthis.cache.event = $.extend({}, event);\n\t\tthis.cache.target = event ? $(event.target) : [undefined];\n",
      "target_code": "\t\t\n\t\tthis.cache.event = cloneEvent(event);\n\t\tthis.cache.target = event ? $(event.target) : [undefined];\n",
      "predection": "this.cache.event = this.$.extend( { }, event); this.cache.target = event? $(event.target) : [undefined];",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "SimpleSchema.extendOptions = function(options) {\n  _.extend(extendedOptions, options);\n};\n",
      "target_code": "SimpleSchema.extendOptions = function(options) {\n  _.extend(schemaDefinition, options);\n};\n",
      "predection": "SimpleSchema.extendOptions = function(options) { extend(extendedOptions, options); } ;",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "                    \n                    _log.error(\"[Properties] \" + error + \" result: \" + p);\n                    return undefined;\n",
      "target_code": "                    \n                    _log.error(\"[Properties] \" + error);\n                    return undefined;\n",
      "predection": "return undefined;",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "Bytearray.prototype.__div__ = function(other) {\n    throw new batavia.builtins.NotImplementedError(\"Bytearray.__div__ has not been implemented\");\n};\n",
      "target_code": "Bytearray.prototype.__div__ = function(other) {\n    throw new exceptions.NotImplementedError(\"Bytearray.__div__ has not been implemented\");\n};\n",
      "predection": "Bytearray.prototype.__div__ = function(other) { throw new Error(\"Bytearray.__div__ has not been implemented\"); } ;",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "    if (clientId) {\n      this.$auth.setClientId(this.name, clientId, cookieOptions)\n    }\n",
      "target_code": "    if (clientId) {\n      this.$auth.setClientId(this.name, clientId)\n    }\n",
      "predection": "if (clientId) { this.$auth.setClientId(this.name, clientId) }",
      "error id": "no-undef",
      "correct": "True"
   },
   {
      "source_code": "    {\n        this.$container = $(this.container);\n        this.$selector = $(this.selector);\n",
      "target_code": "    {\n\n        this.$selector = $(this.selector);\n",
      "predection": "{ this.$selector = $(this.selector);",
      "error id": "no-undef",
      "correct": "True"
   },
   {
      "source_code": "    NL.triggerMapMoveEnd();\n\n    NL.respondLast200(NL.json.MapWmsLayers.records.regular);\n    var layers = NL.vw.MAP.getWmsLayers();\n",
      "target_code": "    NL.triggerMapMoveEnd();\n\n    NL.respondLast200(fx.regular);\n    var layers = NL.vw.MAP.getWmsLayers();\n",
      "predection": "NL.triggerMapMoveEnd(); NL.respondLast200(regular); var layers = NL.vw.MAP.getWmsLayers();",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "\n            GEPPETTO.on(Events.Experiment_stop, function (options) {\n            \tself.updateStatus();\n",
      "target_code": "\n            GEPPETTO.on(GEPPETTO.Events.Experiment_stop, function (options) {\n            \tself.updateStatus();\n",
      "predection": "GEPPETTO.on(GEPPETTO.Events.Experiment_stop, function () { self.updateStatus();",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "\n})(typeof(window) === 'undefined' ? module.exports : (window.json = window.json || {}));\n",
      "target_code": "\n})(typeof module === 'object' && module && module.exports ? module.exports : window);\n",
      "predection": "} )( { }, typeof(window) === 'undefined'? module.exports : (window.json = window.json || { } ));",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "\n\tMatrix2D.prototype.identity = function() {\n\t\tthis.alpha = this.a = this.d = 1;\n",
      "target_code": "\n\tp.identity = function() {\n\t\tthis.alpha = this.a = this.d = 1;\n",
      "predection": "Matrix2D.prototype.identity = function() { this.alpha = this.a = this.d = 1;",
      "error id": "no-undef",
      "correct": "False"
   },
   {
      "source_code": "    initSystemJs(config);\n    expect(config.files[0].pattern).toMatch(/[\\/\\\\]typescript[\\/\\\\].*?[\\/\\\\]typescript\\.js$/);\n    expect(config.files[1].pattern).toMatch(/[\\/\\\\]es6-module-loader\\.src\\.js$/);\n",
      "target_code": "    initSystemJs(config);\n    expect(config.files[0].pattern).toMatch(/[\\/\\\\]typescript\\.js$/);\n    expect(config.files[1].pattern).toMatch(/[\\/\\\\]es6-module-loader\\.src\\.js$/);\n",
      "predection": "initSystemJs(config); expect(config.files[0].pattern).toMatch(/[ \\ / \\ \\ ]typescript[ \\ / \\ \\ ].*?[ \\ / \\ \\ ]typescript \\.js$/); expect(config.files[1].pattern).toMatch(/[ \\ / \\ \\ ]es6-module-loader \\.src \\.js$/);",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "\tadjusted_scale\t: this.adjusted_scale,\n\tasset_swf_v\t: \"http:\\/\\/c2.glitch.bz\\/items\\/2012-04\\/potoxin-1334267317.swf\",\n\tadmin_props\t: false,\n",
      "target_code": "\tadjusted_scale\t: this.adjusted_scale,\n\tasset_swf_v\t: \"\\/c2.glitch.bz\\/items\\/2012-04\\/potoxin-1334267317.swf\",\n\tadmin_props\t: false,\n",
      "predection": "adjusted_scale : this.adjusted_scale, asset_swf_v : \" \\ /c2.glitch.bz \\ /items \\ /2012-04 \\ /potoxin-1334267317.swf\", admin_props : false,",
      "error id": "no-useless-escape",
      "correct": "True"
   },
   {
      "source_code": "}\n\nconst tagquery = str => { return /\\#/.test(str) }\n\nfunction CachedInput () {\n",
      "target_code": "}\n\nconst tagquery = str => { return /#/.test(str) }\n\nfunction CachedInput () {\n",
      "predection": "} const tagquery = str => { return /#/.test(str) } function CachedInput () {",
      "error id": "no-useless-escape",
      "correct": "True"
   },
   {
      "source_code": "      (node.text = node.textContent)\n        .match (/[^{\\}]+(?=})/g)\n        .map   (insert (node))\n",
      "target_code": "      (node.text = node.textContent)\n\n        .match (/[^{]+(?=})/g)\n        .map   (insert (node))\n",
      "predection": "(node.text = node.textContent).match (/[ ^ { ]+(?=)/g).map (insert (node))",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "  _.each(files, function (path) {\n    var name = path.replace(/[a-z0-9\\/_\\.]*themes\\\n    list.push(name);\n",
      "target_code": "  _.each(files, function (path) {\n    var name = path.replace(/[a-z0-9/_.]*themes\\\n    list.push(name);\n",
      "predection": "_.each(files, function (path) { var name = path.replace(/[a-z0-9/_.]*themes \\ list.push(name);",
      "error id": "no-useless-escape",
      "correct": "True"
   },
   {
      "source_code": "        newCell.setAttribute(\"role\",\"rowcell\");\n        newCell.title = v.replace(/\\</g,'\\<').replace(/\\>/g,'\\>');\n        if(oThis.options.showTree && this.firstColumn){\n",
      "target_code": "        newCell.setAttribute(\"role\",\"rowcell\");\n        \n        if(oThis.options.showTree && this.firstColumn){\n",
      "predection": "newCell.setAttribute(\"role\",\"rowcell\"); newCell.title = v.replace(//g,'').replace(/>/g,'>'); if(oThis.options.showTree && this.firstColumn) {",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "  livelySystem, searchTerm,\n  excludedModules = [/systemjs-plugin-babel|.*\\.min\\.js|.*browserified[^\\/]+js/],\n  excludedPackages = [],\n",
      "target_code": "  livelySystem, searchTerm,\n  excludedModules = [/systemjs-plugin-babel|.*\\.min\\.js|.*browserified[^/]+js/],\n  excludedPackages = [],\n",
      "predection": "livelySystem, searchTerm, excludedModules = [/systemjs-plugin-babel|.* \\.min \\.js|.*browserified[ ^ /]+js/], excludedPackages = [],",
      "error id": "no-useless-escape",
      "correct": "True"
   },
   {
      "source_code": "\tadjusted_scale\t: this.adjusted_scale,\n\tasset_swf_v\t: \"http:\\/\\/c2.glitch.bz\\/items\\/2012-04\\/parsnip-1334213162.swf\",\n\tadmin_props\t: false,\n",
      "target_code": "\tadjusted_scale\t: this.adjusted_scale,\n\tasset_swf_v\t: \"\\/c2.glitch.bz\\/items\\/2012-04\\/parsnip-1334213162.swf\",\n\tadmin_props\t: false,\n",
      "predection": "adjusted_scale : this.adjusted_scale, asset_swf_v : \" \\ /c2.glitch.bz \\ /items \\ /2012-04 \\ /parsnip-1334213162.swf\", admin_props : false,",
      "error id": "no-useless-escape",
      "correct": "True"
   },
   {
      "source_code": "                        })),\n                        m(`a.w-button.btn.btn-terciary${args.isDark ? '.btn-terciary-negative' : ''}.btn-small[href=\\'javascript:void(0);\\']`, {\n                            onclick: h.analytics.event({\n",
      "target_code": "                        })),\n                        m(`button.w-button.btn.btn-terciary${args.isDark ? '.btn-terciary-negative' : ''}.btn-small`, {\n                            onclick: h.analytics.event({\n",
      "predection": "} )), m(a.w-button.btn.btn-terciary$ { args.isDark? '.btn-terciary-negative' : '' }.btn-small[href='javascript:void(0);'], { onclick: h.analytics.event( {",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "                title = title.replace(/.*\\:/,\"\");\n                title = title.replace(/.*\\:/,\"\");\n                var description = '';\n",
      "target_code": "                title = title.replace(/.*\\:/,\"\");\n                var description = '';\n",
      "predection": "title = title.replace(/.*:/,\"\"); title = title.replace(/.*:/,\"\"); var description = '';",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "\tadjusted_scale\t: this.adjusted_scale,\n\tasset_swf_v\t: \"http:\\/\\/c2.glitch.bz\\/items\\/2012-02\\/furniture_bookcase-1329271640.swf\",\n\tadmin_props\t: true,\n",
      "target_code": "\tadjusted_scale\t: this.adjusted_scale,\n\tasset_swf_v\t: \"\\/c2.glitch.bz\\/items\\/2012-02\\/furniture_bookcase-1329271640.swf\",\n\tadmin_props\t: true,\n",
      "predection": "adjusted_scale : this.adjusted_scale, asset_swf_v : \" \\ /c2.glitch.bz \\ /items \\ /2012-02 \\ /furniture_bookcase-1329271640.swf\", admin_props : true,",
      "error id": "no-useless-escape",
      "correct": "True"
   },
   {
      "source_code": "\n    src.push('\\",
      "target_code": "\n    src.push('');\n    src.push('var w' + k + ' = c;');\n",
      "predection": "src.push(' \\ /* k ='+ k +'* \\ /');",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "    \n    var attribution_regex = /by ([\\w\\-]+)/;\n    $('#changelog h3.change').each(function() { \n",
      "target_code": "    \n    var attribution_regex = /by (\\S+)/;\n    $('#changelog h3.change').each(function() { \n",
      "predection": "var attribution_regex = /by ([ \\ w-]+)/; $('#changelog h3.change').each(function() {",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "test('innerConcat errors', t => {\n  const err = /MockCrock.concat\\: /\n\n  const outer = bindFunc(x => innerConcat(Mock, Mock.of(Last(4)))(x))\n",
      "target_code": "test('innerConcat errors', t => {\n  const err = /MockCrock.concat:/\n\n  const outer = bindFunc(x => innerConcat(Mock, Mock.of(Last(4)))(x))\n",
      "predection": "test('innerConcat errors', t => { const err = /MockCrock.concat : / const outer = bindFunc(x => innerConcat(Mock, Mock.of(Last(4)))(x))",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "\n            var re = new RegExp('^'.inputKey + '\\..*', 'g');\n            if (key.match(re) || key === inputKey) {\n",
      "target_code": "\n            var re = new RegExp('^'.inputKey + '\\\\..*', 'g');\n            if (key.match(re) || key === inputKey) {\n",
      "predection": "var re = new RegExp(' ^ '.inputKey +'\\ \\..*', 'g'); if (key.match(re) || key === inputKey) {",
      "error id": "no-useless-escape",
      "correct": "True"
   },
   {
      "source_code": "    \n    parser.addHandler(\"year\", /(?!^)[(\\[]?((?:19[0-9]|20[012])[0-9])[)\\]]?/, { type: \"integer\" });\n    \n",
      "target_code": "    \n    parser.addHandler(\"year\", /(?!^)[([]?((?:19[0-9]|20[012])[0-9])[)\\]]?/, { type: \"integer\" });\n\n    \n",
      "predection": "parser.addHandler(\"year\", /(?! ^ )[( \\ []?((?:19[0-9]|20[012])[0-9])[) \\ ]]?/, { type: \"integer\" } );",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\tif (!version) {\n\t\t\t\t\t\tvar m = entry.entryName.match(/^mobilesdk\\/[^\\/]+\\/([^\\/]+)\\/(version\\.txt|manifest\\.json)$/);\n\t\t\t\t\t\tif (m) {\n",
      "target_code": "\t\t\t\t\tif (!version) {\n\t\t\t\t\t\tvar m = entry.entryName.match(/^mobilesdk\\/[^/]+\\/([^/]+)\\/(version\\.txt|manifest\\.json)$/);\n\t\t\t\t\t\tif (m) {\n",
      "predection": "if (!version) { var m = entry.entryName.match(/ ^ mobilesdk \\ /[ ^ /]+ \\ /([ ^ /]+) \\ /(version \\.txt|manifest \\.json)$/); if (m) {",
      "error id": "no-useless-escape",
      "correct": "True"
   },
   {
      "source_code": "\t\n\tlet regex = /(.+)\\s?[\\-\u00e2\u20ac\u201c:]\\s?(.+)/;\n\tlet match = regex.exec(metadata.title);\n",
      "target_code": "\t\n\tlet regex = /(.+)\\s?[\u00e2\u20ac\u201c:]\\s?(.+)/;\n\tlet match = regex.exec(metadata.title);\n",
      "predection": "let regex = /(.+) \\ s?[-\u00e2\u20ac\u201c:] \\ s?(.+)/; let match = regex.exec(metadata.title);",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "          const matchConditionalComment = node.nodeValue.match(\n            /^\\[if\\s*([^\\]]*)\\]\\>([\\s\\S]*)<!\\[endif\\]$/\n          );\n",
      "target_code": "          const matchConditionalComment = node.nodeValue.match(\n            /^\\[if\\s*([^\\]]*)\\]>([\\s\\S]*)<!\\[endif\\]$/\n          );\n",
      "predection": "const matchConditionalComment = node.nodeValue.match( / ^ \\ [if \\ s*([ ^ ]]*) \\ ] \\ >([ \\ s \\ S]*)! \\ [endif \\ ]$/ );",
      "error id": "no-useless-escape",
      "correct": "False"
   },
   {
      "source_code": "          json: _.omit(W3C_CAPS, ['capabilities.alwaysMatch.platformName']),\n        }).should.eventually.be.rejectedWith(/\\'platformName\\' can\\'t be blank/);\n      });\n",
      "target_code": "          json: _.omit(W3C_CAPS, ['capabilities.alwaysMatch.platformName']),\n        }).should.eventually.be.rejectedWith(/'platformName' can't be blank/);\n      });\n",
      "predection": "json: _.omit(W3C_CAPS, ['capabilities.alwaysMatch.platformName']), } ).should.eventually.be.rejectedWith(/'platformName' can't be blank/); } );",
      "error id": "no-useless-escape",
      "correct": "True"
   },
   {
      "source_code": "        share_link: share_link,\n        build_url, build_url,\n        imageFile: \"cid:\" + imagefilename,\n",
      "target_code": "        share_link: share_link,\n        build_url: build_url,\n        dash_board:dash_board,\n        imageFile: \"cid:\" + imagefilename,\n",
      "predection": "share_link: share_link, imageFile: \"cid:\" + imagefilename,",
      "error id": "no-dupe-keys",
      "correct": "False"
   },
   {
      "source_code": "    '&frasl;': '\\u2044',\n    '&euro;': '\\u20ac',\n    '&image;': '\\u2111',\n",
      "target_code": "    '&frasl;': '\\u2044',\n    '&image;': '\\u2111',\n",
      "predection": "'&frasl;':'\\ u2044', '&image;':'\\ u2111',",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "            keyCode,\n            charCode: keyCode,\n            keyCode: keyCode\n          });\n",
      "target_code": "            keyCode,\n            charCode: keyCode\n          });\n",
      "predection": "keyCode, charCode: keyCode } );",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "            title: taskData.title,\n            url: taskData.url,\n            userId: userData ? userData.id : null\n",
      "target_code": "            title: taskData.title,\n            userId: userData ? userData.id : null\n",
      "predection": "title: taskData.title, userId: userData? userData.id : null",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "\t\t\ttxid: txId,\n\t\t\tchannel_id,channel_id\n\t\t};\n",
      "target_code": "\t\t\ttxid: txId,\n\t\t\tchannel_id: channel_id\n\t\t};\n",
      "predection": "txid: txId, channel_id: channel_id } ;",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "      transparent: true,\n      alphaTest: 0.5,\n      side: THREE.DoubleSide,\n    });\n",
      "target_code": "      transparent: true,\n      alphaTest: 0.5\n    });\n",
      "predection": "transparent: true, alphaTest: 0.5 } );",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "            left: 0,\n            display: 'block',\n            'z-index': '1000'\n",
      "target_code": "            left: 0,\n            'z-index': '1000'\n",
      "predection": "left: 0, 'z-index': '1000'",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "    righthanded: 'top left',\n    allowedLocations: ['top left', 'top center', 'top right'],\n    allowedSiblings: [\n",
      "target_code": "    righthanded: 'top left',\n    allowedSiblings: [\n",
      "predection": "righthanded: 'top left', allowedSiblings: [",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "    catch( err ) {\n\n        let resultObj = { success: false, err: { message: err.message, message: err.stacktrace } };\n\n        console.log( JSON.stringify( resultObj ) );\n        process.exit( 1 );\n",
      "target_code": "    catch( err ) {\n",
      "predection": "catch( err ) { let resultObj = { success: false, err: { message: err.message, message: err.stacktrace } } ; process.exit( 1 );",
      "error id": "no-dupe-keys",
      "correct": "False"
   },
   {
      "source_code": "        studyInstanceUID: dataSet.string('x0020000d'),\n        seriesInstanceUID: dataSet.string('x0020000e'),\n        seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),\n",
      "target_code": "        studyInstanceUID: dataSet.string('x0020000d'),\n        seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),\n",
      "predection": "studyInstanceUID: dataSet.string('x0020000d'), studyIndex: dataSet.string('x0020000e'), seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),",
      "error id": "no-dupe-keys",
      "correct": "False"
   },
   {
      "source_code": "\t\"Location\": \"Location\",\r\n\t\"Navigation Text\": \"Navigation Text\",\r\n\t\"Content\": \"Content\",\r\n",
      "target_code": "\t\"Location\": \"Location\",\r\n\t\"Content\": \"Content\",\r\n",
      "predection": "\"Location\": \"Location\", \"Content\": \"Content\",",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "\n  resetCounter: on(keyPress('5'), function() {\n    this.set('counter', 5);\n",
      "target_code": "\n  setCounterTo5: on(keyPress('5'), function() {\n    this.set('counter', 5);\n",
      "predection": "resetCounter: on(keyPress('5'), function() { this.set('counter', 5);",
      "error id": "no-dupe-keys",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\tdefaultMouseAction: 'zoom',\n\t\t\t\tdefaultMouseAction: 'rangeX',\n\t\t\t\tdefaultWheelAction: 'none',\n",
      "target_code": "\t\t\t\tdefaultMouseAction: 'zoom',\n\n\t\t\t\tdefaultWheelAction: 'none',\n",
      "predection": "defaultMouseAction: 'zoom', defaultWheelAction: 'none',",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "  },\n  \"jsvtags\": {\n    \"title\": \"JsViews template tags\",\n",
      "target_code": "  },\n  \"jsvtemplatetags\": {\n    \"title\": \"JsViews template tags\",\n",
      "predection": "}, \"jsvtags\": { \"title\": \"JsViews template tags\",",
      "error id": "no-dupe-keys",
      "correct": "False"
   },
   {
      "source_code": "    },\n    template: templateSettings,\n    template: {\n      couchdb:{\n        src: 'assets/index.underscore',\n",
      "target_code": "    },\n\n    template: templateSettings,\n\n    \n",
      "predection": "}, template: { couchdb: { src: 'assets/index.underscore',",
      "error id": "no-dupe-keys",
      "correct": "False"
   },
   {
      "source_code": "      border: '1px solid #cecece',\n      size: '8px',\n      size: '20px'\n    },\n",
      "target_code": "      border: '1px solid #cecece',\n      size: '20px'\n    },\n",
      "predection": "border: '1px solid #cecece', size: '8px' },",
      "error id": "no-dupe-keys",
      "correct": "False"
   },
   {
      "source_code": "    return callback(event, chart);\n  },\n  register: function(type, label) {\n    this.registeredCharts.push(type + ':' + label);\n",
      "target_code": "    return callback(event, chart);\n  },\n  registerChart: function(type, label) {\n    this.registeredCharts.push(type + ':' + label);\n",
      "predection": "return callback(event, chart); }, label: function(type) { this.registeredCharts.push(type + ':' + label);",
      "error id": "no-dupe-keys",
      "correct": "False"
   },
   {
      "source_code": "    sequence: DS.attr('number'),\n    style: DS.attr('string'),\n    tab_text: DS.attr('string'),\n",
      "target_code": "    sequence: DS.attr('number'),\n    tab_text: DS.attr('string'),\n",
      "predection": "sequence: DS.attr('number'), tab_text: DS.attr('string'),",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "                    onAddSeries: onAddSeries,\n                    handleConfigTrack, handleConfigTrack,\n                    handleResizeTrack: handleResizeTrack,\n",
      "target_code": "                    onAddSeries: onAddSeries,\n                    handleConfigTrack: handleConfigTrack,\n                    editable: editable,\n                    handleResizeTrack: handleResizeTrack,\n",
      "predection": "onAddSeries: onAddSeries, handleConfigTrack: handleConfigTrack, handleResizeTrack: handleResizeTrack,",
      "error id": "no-dupe-keys",
      "correct": "False"
   },
   {
      "source_code": "            geometryType:   'esriGeometryPolygon',\n            geometry:       JSON.stringify( esriFeature.geometry ),\n            tolerance:      0\n        }\n",
      "target_code": "            geometryType:   'esriGeometryPolygon',\n            geometry:       JSON.stringify( esriFeature.geometry )\n        }\n",
      "predection": "geometryType: 'esriGeometryPolygon', geometry: JSON.stringify( esriFeature.geometry ) }",
      "error id": "no-dupe-keys",
      "correct": "True"
   },
   {
      "source_code": "      const address = alias.resolve(name)\n      console.log(address)\n      if (!address) {\n",
      "target_code": "      const address = alias.resolve(name)\n\n      if (!address) {\n",
      "predection": "const address = alias.resolve(name) if (!address) {",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "const appDir = process.argv[3]\nconsole.log('=====ARGS======', appDir);\n\n\n\n",
      "target_code": "const appDir = process.argv[3]\n\n\n",
      "predection": "const appDir = process.argv[3]",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "            } catch (err) {\n                console.error(err);\n                throw new Error('Could not load ' + this.audioEngine +\n",
      "target_code": "            } catch (err) {\n                throw new Error('Could not load ' + this.audioEngine +\n",
      "predection": "} catch (err) { throw new Error('Could not load'+ this.audioEngine +",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "            count++;\n            console.log(\"EventData \",count);\n            request.get(options, function(error, response, body) {\n",
      "target_code": "            count++;\n            request.get(options, function(error, response, body) {\n",
      "predection": "count++; request.get(options, function(error, response, body) {",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "    d3.select(\"#reset-tree-depth\").on(\"click\", function() {\n        console.log(\"lol\")\n        updateMaxDepthInput(forest.trees[currentTreeId], true);\n",
      "target_code": "    d3.select(\"#reset-tree-depth\").on(\"click\", function() {\n        updateMaxDepthInput(forest.trees[currentTreeId], true);\n",
      "predection": "d3.select(\"#reset-tree-depth\").on(\"click\", function() { updateMaxDepthInput(forest.trees[currentTreeId], true);",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "            catch (error) {\n                console.error(error.message);\n            }\n            \n",
      "target_code": "            catch (error) {\n                core.setFailed(error.message);\n            }\n            \n",
      "predection": "catch (error) { throw new Error(error.message); }",
      "error id": "no-console",
      "correct": "False"
   },
   {
      "source_code": "    }).setCallback(function(error) {\n      console.log('Zone inner_zone ended, back in %s. Error: ', zone.name, error);\n    });\n",
      "target_code": "    }).setCallback(function(error) {\n      tap.log('Zone inner_zone ended, back in %s. Error: ', zone.name, error);\n    });\n",
      "predection": "} ).setCallback(function(error) { debug('Zone inner_zone ended, back in %s. Error: ', zone.name, error); } );",
      "error id": "no-console",
      "correct": "False"
   },
   {
      "source_code": "            }\n            console.log(position);\n            switch (val) {\n",
      "target_code": "            }\n            switch (val) {\n",
      "predection": "} switch (val) {",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "    $scope.apps = res;\n    console.log(\"Apps: \", $scope.apps);\n  });\n",
      "target_code": "    $scope.apps = res;\n\n  });\n",
      "predection": "$scope.apps = res; } );",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "  ], (err) => {\n    console.log(\"ERROR\");\n    console.log(err);\n    appUtils.response('IMPORT LAB', res, err);\n",
      "target_code": "  ], (err) => {\n    appUtils.response('IMPORT LAB', res, err);\n",
      "predection": "], (err) => { appUtils.response('IMPORT LAB', res, err);",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "        var upper = this.model.interpolate(bounds[1]/n).toPrecision(2);\n\n        console.log(lower, upper);\n\n        bounds[0] && this.model.set('lower', lower);\n",
      "target_code": "        var upper = this.model.interpolate(bounds[1]/n).toPrecision(2);\n\n        bounds[0] && this.model.set('lower', lower);\n",
      "predection": "var upper = this.model.interpolate(bounds[1]/n).toPrecision(2); bounds[0] && this.model.set('lower', lower);",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "    \n    console.log('Compiling...');\n    $('#outputTab').val('Compiling...');\n",
      "target_code": "    \n    $('#outputTab').val('Compiling...');\n",
      "predection": "$('#outputTab').val('Compiling...');",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "        exited = true;\n        console.log(`Exiting with code: ${exitCode}`);\n        process.exit(exitCode);\n",
      "target_code": "        exited = true;\n        \n        process.exit(exitCode);\n",
      "predection": "exited = true; process.exit(exitCode);",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "    }).catch((err) => {\n      console.log(err);\n    });\n",
      "target_code": "    }).catch((err) => {\n      logger.error(err);\n    });\n",
      "predection": "} ).catch((err) => { console.log(err); } );",
      "error id": "no-console",
      "correct": "False"
   },
   {
      "source_code": "      if (!r.addDomain.ok) {\n        console.log('error adding domain: ', r.addDomain.error)\n        return\n",
      "target_code": "      if (!r.addDomain.ok) {\n        log.error('error adding domain: ', r.addDomain.error)\n        return\n",
      "predection": "if (!r.addDomain.ok) { return",
      "error id": "no-console",
      "correct": "False"
   },
   {
      "source_code": "          initStoreState = dva._store.getState()\n          console.log('> server render has finished')\n        } else {\n",
      "target_code": "          initStoreState = dva._store.getState()\n          \n        } else {\n",
      "predection": "initStoreState = dva._store.getState() } else {",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "    game.loop.code.push(ln);\n    console.log('>>> '+ln);\n  });\n",
      "target_code": "    game.loop.code.push(ln);\n  });\n",
      "predection": "game.loop.code.push(ln); } );",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "  send: function (event) {\n    console.log(event);\n    this.io.sockets.emit(event);\n",
      "target_code": "  send: function (event) {\n    this.io.sockets.emit(event);\n",
      "predection": "send: function (event) { this.io.sockets.emit(event);",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "console.log(\"INFO\\t: loading images service\");\nvar child_process = require('child_process');\n",
      "target_code": "\nvar child_process = require('child_process');\n",
      "predection": "var child_process = require('child_process');",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "    ipcRenderer.send('shutdown');\n    console.log(\"Closing...\");\n    ipcRenderer.removeAllListeners();\n",
      "target_code": "    ipcRenderer.send('shutdown');\n    ipcRenderer.removeAllListeners();\n",
      "predection": "ipcRenderer.send('shutdown'); ipcRenderer.removeAllListeners();",
      "error id": "no-console",
      "correct": "True"
   },
   {
      "source_code": "        spec = parts[3].split('?')[0];\n    }\n    else if (parts[0] = '#spec'){\n        spec = parts[2].split('?')[0];\n",
      "target_code": "        spec = parts[3].split('?')[0];\n    }\n    else if (parts[0] == '#spec'){\n        spec = parts[2].split('?')[0];\n",
      "predection": "spec = parts[3].split('?')[0]; } else if (parts[0] === '#spec') { spec = parts[2].split('?')[0];",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\n\t\t\tif ( true )\n\t\t\t\tNewPath = '/games';\n",
      "target_code": "\t\t\t\n\t\t\tif ( node['games'] > 0 )\n\t\t\t\tNewPath = '/games';\n",
      "predection": "if ( NewPath ) NewPath = '/games';",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "      gl[\"bindTexture\"](gl[\"TEXTURE_2D\"], null);\n    } else if (true) {\n      boundTextures[unit] = finalTexture;\n",
      "target_code": "      gl[\"bindTexture\"](gl[\"TEXTURE_2D\"], null);\n    } else if (!boundTextures[unit] || boundTextures[unit].name !== finalTexture.name) {\n      boundTextures[unit] = finalTexture;\n",
      "predection": "gl[\"bindTexture\"](gl[\"TEXTURE_2D\"], null); } else { boundTextures[unit] = finalTexture;",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "\t});\r\n\r\nif(true) {\r\n\r\n\tit(\"3. INNER JOIN on stream\", function(done){\r\n",
      "target_code": "\t});\r\n\r\n\r\n\r\n\tit(\"3. INNER JOIN on stream\", function(done){\r\n",
      "predection": "} ); it(\"3. INNER JOIN on stream\", function(done) {",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "            _.each(this.sharedstrings, function (stringObj, index) {\n                \n                if (true) {\n                    stringObj.sharedIndex = index;\n",
      "target_code": "            _.each(this.sharedstrings, function (stringObj, index) {\n                if (_(stringObj.t).stringValue() && _(_(stringObj.t).stringValue()).hasVariable()) {\n                    stringObj.sharedIndex = index;\n",
      "predection": "_.each(this.sharedstrings, function (stringObj, index) { if (_.isString(stringObj)) { stringObj.sharedIndex = index;",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "  function soonButNotYet(obs, f) {\n    if (false && rootEvent) {\n      whenDoneWith(dummyObs, f);\n",
      "target_code": "  function soonButNotYet(obs, f) {\n    if (rootEvent) {\n      whenDoneWith(dummyObs, f);\n",
      "predection": "function soonButNotYet(obs, f) { if (rootEvent) { whenDoneWith(dummyObs, f);",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "      const model = get(this, 'authConfig');\n      const accessMode = get(model, 'id') === 'github' || 'googleoauth' ? 'restricted' : 'unrestricted';\n\n      setProperties(model, {\n",
      "target_code": "      const model = get(this, 'authConfig');\n      const accessMode = get(model, 'id') === 'github' || get(model, 'id') === 'googleoauth' ? 'restricted' : 'unrestricted';\n\n      setProperties(model, {\n",
      "predection": "const model = get(this, 'authConfig'); const accessMode = get(model, 'id') === 'github'; setProperties(model, {",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "\t\t\tvar code = this.expression.charCodeAt(this.pos);\n\t\t\tif (false) {}\n\t\t\telse if (code === 111) { \n\t\t\t\tif (this.expression.charCodeAt(this.pos + 1) !== 114) { \n",
      "target_code": "\t\t\tvar code = this.expression.charCodeAt(this.pos);\n\t\t\tif (code === 111) { \n\t\t\t\tif (this.expression.charCodeAt(this.pos + 1) !== 114) { \n",
      "predection": "var code = this.expression.charCodeAt(this.pos); if (code === 111) { if (this.expression.charCodeAt(this.pos + 1)!== 114) {",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "\n        if (msgType = 'shortvideo') {\n            atts.push({\n",
      "target_code": "\n        if (msgType === 'shortvideo') {\n            atts.push({\n",
      "predection": "if (msgType ==='shortvideo') { atts.push( {",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "\nif (false) test('multi bundle', function (t) {\n    t.plan(8);\n",
      "target_code": "\ntest('multi bundle', function (t) {\n    t.plan(8);\n",
      "predection": "test('multi bundle', function (t) { t.plan(8);",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "    const params = this.getParams(),\n      scene = !!'physics'\n      ? new Physijs.Scene(\n",
      "target_code": "    const params = this.getParams(),\n      scene = Physijs.default !== false\n      ? new Physijs.Scene(\n",
      "predection": "const params = this.getParams(), scene =!!'physics'? new Physijs.Scene(",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "    let child = parent[this.fieldName];\n    if (true || child !== null && !(child instanceof ASTNode)) {\n      throw new Error(`Expected the optional field '${this.fieldName}' of '${parent.type}' to contain an ASTNode or null.`);\n",
      "target_code": "    let child = parent[this.fieldName];\n    if (child !== null && !(child instanceof ASTNode)) {\n      throw new Error(`Expected the optional field '${this.fieldName}' of '${parent.type}' to contain an ASTNode or null.`);\n",
      "predection": "let child = parent[this.fieldName]; if (child!== null &&!(child instanceof ASTNode)) { throw new Error(Expected the optional field '$ { this.fieldName }'of '$ { parent.type }'to contain an ASTNode or null.);",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "      )\n      if (true) {\n        if (switcher.sync) {\n",
      "target_code": "      )\n      if (needUpdate) {\n        if (switcher.sync) {\n",
      "predection": ") if (switcher.sync) {",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "\n                  if(data.user.dataLists = [\"1\"]){\n                    data.user.dataLists = [];\n",
      "target_code": "\n                  if(data.user.dataLists == [\"1\"]){\n                    data.user.dataLists = [];\n",
      "predection": "if(data.user.dataLists == [\"1\"]) { data.user.dataLists = [];",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\t\t\tentity = this.allEntities[i];\n\t\t\t\t\t\t\tif(entity.alwaysOn || entity.checkCollision || true){\n\t\t\t\t\t\t\t\tentity.checkCollision = false;  \n",
      "target_code": "\t\t\t\t\t\t\tentity = this.allEntities[i];\n\t\t\t\t\t\t\tif(entity.alwaysOn || entity.checkCollision || check(entity.getAABB(), aabbLogic)){\n\t\t\t\t\t\t\t\tentity.checkCollision = false;  \n",
      "predection": "entity = this.allEntities[i]; if(entity.alwaysOn || entity.checkCollision) { entity.checkCollision = false;",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "\n\t\t\t\t\tif (true || options.debug) {\n\t\t\t\t\t\tdata.debug = steal.toJSON(deepExtendWithoutBody(currentData));\n",
      "target_code": "\n\t\t\t\t\tif ( options.debug ) {\n\t\t\t\t\t\tdata.debug = steal.toJSON(deepExtendWithoutBody(currentData));\n",
      "predection": "if (options.debug) { data.debug = steal.toJSON(deepExtendWithoutBody(currentData));",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "            });\n            if (config.NODE_ENV !== \"test\" && false) {\n                for (var i = 0; i < capacity; i++) {\n",
      "target_code": "            });\n            if (config.NODE_ENV !== \"test\") {\n                for (var i = 0; i < capacity; i++) {\n",
      "predection": "} ); if (config.NODE_ENV!== \"test\") { for (var i = 0; i  capacity; i++) {",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "        \n        if (true) {\n          \n",
      "target_code": "        \n        if (this.checkDate()) {\n          \n",
      "predection": "if (Object.prototype.hasOwnProperty.call(this, object)) {",
      "error id": "no-constant-condition",
      "correct": "False"
   },
   {
      "source_code": "\t\n\tif(1 == 1) {\n\t\tHTTP.request({\n",
      "target_code": "\t\n\tif(UTIL.isStale(_params.url, _params.cache)) {\n\t\tHTTP.request({\n",
      "predection": "if(UTIL.isStale(_params.url, _params.cache)) { HTTP.request( {",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "\t\tif ( window.Blob === undefined  ) throw \"This browser does not support Blob!\";\n\t\tif ( ! typeof window.URL.createObjectURL === 'function'  ) throw \"This browser does not support Object creation from URL!\";\n\n",
      "target_code": "\t\tif ( window.Blob === undefined  ) throw \"This browser does not support Blob!\";\n\t\tif ( typeof window.URL.createObjectURL !== 'function'  ) throw \"This browser does not support Object creation from URL!\";\n\n",
      "predection": "if ( window.Blob === undefined ) throw \"This browser does not support Blob!\"; if ( typeof window.URL.createObjectURL!== 'function' ) throw \"This browser does not support Object creation from URL!\";",
      "error id": "no-constant-condition",
      "correct": "True"
   },
   {
      "source_code": "                break;\n            case 2:\n                justify = 'start';\n                break;\n",
      "target_code": "                break;\n",
      "predection": "break;",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "    return value;\n  case 'undefined':\n    return 'undefined';\n  case 'movieclip':\n",
      "target_code": "    return value;\n  case 'movieclip':\n",
      "predection": "return value; case'movieclip':",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "\n            case '<=':\n                if(L < R) {\n            } else {\n",
      "target_code": "\n            case '>':\n                if(L > R) {\n            } else {\n",
      "predection": "if(L  R) { } else {",
      "error id": "no-duplicate-case",
      "correct": "False"
   },
   {
      "source_code": "                obj = notlike(filter.value);\n                break;\n            case '<':\n            case 'lt':\n                obj = lessThan(filter.value);\n                break;\n",
      "target_code": "                obj = notlike(filter.value);\n                break;\n            case 'between':\n                obj = between(filter.value);\n                break;\n",
      "predection": "obj = notlike(filter.value); break; case '': case 'lt': obj = lessThan(filter.value); break;",
      "error id": "no-duplicate-case",
      "correct": "False"
   },
   {
      "source_code": "            case localeTypes.transport:\n            case localeTypes.transport:\n                res.addResource(resourceNames.water, 5);\n",
      "target_code": "            case localeTypes.transport:\n                res.addResource(resourceNames.water, 5);\n",
      "predection": "case localeTypes.transport: res.addResource(resourceNames.water, 5);",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "\t\t\to = oo.join(\"\"); break;\n\t\tcase 'wstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\n",
      "target_code": "\t\t\to = oo.join(\"\"); break;\n\t\tcase '_wstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\n",
      "predection": "o = oo.join(\"\"); break; case 'wstr': size = 0; o = \"\"; while((w=__readUInt16LE(this,this.l +size))!==0) { oo.push(_getchar(w));size+=2; }",
      "error id": "no-duplicate-case",
      "correct": "False"
   },
   {
      "source_code": "      atomSymbolKind = atomTypes.ATOM_SUGGESTION_METHOD;\n      break;\n    case SuggestionKind.Variable:\n      atomSymbolKind = atomTypes.ATOM_SUGGESTION_VARIABLE;\n      break;\n  }\n",
      "target_code": "      atomSymbolKind = atomTypes.ATOM_SUGGESTION_METHOD;\n      break;\n    case SuggestionKind.Snippet:\n      atomSymbolKind = atomTypes.ATOM_SUGGESTION_SNIPPET;\n      break;\n  }\n",
      "predection": "atomSymbolKind = atomTypes.ATOM_SUGGESTION_METHOD; break; case SuggestionKind.Variable: atomSymbolKind = atomTypes.ATOM_SUGGESTION_VARIABLE; break; }",
      "error id": "no-duplicate-case",
      "correct": "False"
   },
   {
      "source_code": "                    $f.prop('checked', defaultVal);\r\n                    break;\r\n                case ft.bool:\r\n                    $f.prop('checked', defaultVal);\r\n",
      "target_code": "                    $f.prop('checked', defaultVal);\r\n",
      "predection": "$f.prop('checked', defaultVal); break; case ft.bool: $f.prop('checked', defaultVal);",
      "error id": "no-duplicate-case",
      "correct": "False"
   },
   {
      "source_code": "          break;\n\n          case key + '_FETCH_ERROR':\n          case key + '_UPDATE_ERROR':\n\n            \n",
      "target_code": "          break;\n\n          case UPPER_CASE_KEY(key) + '_FETCH_ERROR':\n          case UPPER_CASE_KEY(key) + '_UPDATE_ERROR':\n\n            \n",
      "predection": "break; case key + '_FETCH_ERROR': case key + '_UPDATE_ERROR':",
      "error id": "no-duplicate-case",
      "correct": "False"
   },
   {
      "source_code": "      return Object.assign({}, state, {loadingTags: true});\n\n    case types.RECEIVE_ALL_TAGS:\n      return Object.assign({}, state, {loadingTags: false, tags: action.tags});\n",
      "target_code": "      return Object.assign({}, state, {loadingTags: true});\n\n    case types.RECEIVE_ALL_TAGS_USER_DETAIL:\n      return Object.assign({}, state, {loadingTags: false, tags: action.tags});\n",
      "predection": "return Object.assign( { }, state, { loadingTags: true } ); case types.RECEIVE_ALL_TAGS_USER_DETAIL: return Object.assign( { }, state, { loadingTags: false, tags: action.tags } );",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "    case 'gravity':\n    case 'background':\n    case 'fill':\n",
      "target_code": "    case 'gravity':\n    case 'fill':\n",
      "predection": "case 'gravity': case 'fill':",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "    case ANDROID_TV:\n    case ANDROID_TV:\n    case ANDROID_WEAR:\n",
      "target_code": "    case ANDROID_TV:\n    case ANDROID_WEAR:\n",
      "predection": "case ANDROID_TV: case ANDROID_WEAR:",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\tsamplerTypeKey = 'RedVideoTexture';\n\t\t\t\tbreak\n\t\t\tcase 'samplerVideo' :\n\t\t\t\tsamplerTypeKey = 'RedVideoTexture';\n",
      "target_code": "\t\t\t\tsamplerTypeKey = 'RedVideoTexture';\n",
      "predection": "samplerTypeKey = 'RedVideoTexture';",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "              break;\n            case \"beforeEdit\":\n              if (this.vGrid.vGridConfig.eventFormatHandler) {\n",
      "target_code": "              break;\n            case \"afterEdit\":\n              if (this.vGrid.vGridConfig.eventFormatHandler) {\n",
      "predection": "break; case \"beforeEdit\": if (this.vGrid.vGridConfig.eventFormatHandler) {",
      "error id": "no-duplicate-case",
      "correct": "False"
   },
   {
      "source_code": "                } break;\n                case StretchMode.KEEP_ASPECT_CENTERED: {\n                    \n                } break;\n",
      "target_code": "                } break;\n",
      "predection": "} break;",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "                break;\n            case 2:\n                this.power = 10;\n",
      "target_code": "                break;\n            case 3:\n                this.power = 10;\n",
      "predection": "break; case 3: this.power = 10;",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "      }\n      case 'collectedFees':\n      case 'payout':\n",
      "target_code": "      }\n      case 'payout':\n",
      "predection": "} case 'payout':",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "            map = 'M/D/YY h:i:s K'; \n            break;\n        case FieldType.dateTimeUsAM_PM:\n            map = 'M/D/YY h:i:s K';\n            break;\n        case FieldType.dateUtc:\n",
      "target_code": "            map = 'M/D/YY h:i:s K'; \n            break;\n        case FieldType.dateUtc:\n",
      "predection": "map = 'M/D/YY h:i:s K'; break; case FieldType.dateUtc:",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "      pointDrawingMethod = Graph3d.prototype._redrawDotGraphPoint;\n      break;\n    case Graph3d.STYLE.DOT:\n      pointDrawingMethod = Graph3d.prototype._redrawDotLineGraphPoint;\n",
      "target_code": "      pointDrawingMethod = Graph3d.prototype._redrawDotGraphPoint;\n      break;\n    case Graph3d.STYLE.DOTLINE:\n      pointDrawingMethod = Graph3d.prototype._redrawDotLineGraphPoint;\n",
      "predection": "pointDrawingMethod = Graph3d.prototype._redrawDotGraphPoint; break; case Graph3d.STYLE.LENGTH: pointDrawingMethod = Graph3d.prototype._redrawDotLineGraphPoint;",
      "error id": "no-duplicate-case",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\t\toRB.setTextDirection(sNewValue);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"textDirection\":\n\t\t\t\t\t\toRB.setTextDirection(sNewValue);\n",
      "target_code": "\t\t\t\t\t\toRB.setTextDirection(sNewValue);\n",
      "predection": "oRB.setTextDirection(sNewValue);",
      "error id": "no-duplicate-case",
      "correct": "True"
   },
   {
      "source_code": "                this.sound.currentTime = time;\n            } catch(e) {}\n            return this;\n",
      "target_code": "                this.sound.currentTime = time;\n            });\n            return this;\n",
      "predection": "this.sound.currentTime = time; } return this;",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "    }\n    catch (e) { }\n\n    this.client.set(cacheKey, stringifiedEnvelope, function (err, result) {\n\n",
      "target_code": "    }\n\n    this.client.set(cacheKey, stringifiedEnvelope, function (err) {\n\n",
      "predection": "} this.client.set(cacheKey, stringifiedEnvelope, function (err, result) {",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "        responseItem = getSingleValue(getValueForKey(\"response\", multistatus));\n    } catch (e) {}\n    if (responseItem) {\n",
      "target_code": "        responseItem = getSingleValue(getValueForKey(\"response\", multistatus));\n    } catch (e) {  }\n    if (responseItem) {\n",
      "predection": "responseItem = getSingleValue(getValueForKey(\"response\", multistatus)); } if (responseItem) {",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "                    ws.send('reload');\n                } catch (e) {\n                }\n",
      "target_code": "                    ws.send('reload');\n                } catch (e) {\n                    log.debug(e);\n                }\n",
      "predection": "ws.send('reload'); } catch (e) { console.log(e); }",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "\n    getData(url, opts, function (err, data) {\n      if (err) {\n      } else if (data.mainImage) {\n        wikiImage.innerHTML = Templates['wikiImage'](data);\n",
      "target_code": "\n    getData(url, opts, function (_err, data) {\n      if (data.mainImage) {\n        wikiImage.innerHTML = Templates['wikiImage'](data);\n",
      "predection": "getData(url, opts, function (err, data) { wikiImage.innerHTML = Templates['wikiImage'](data);",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "        }\n    }\n    catch (e) {\n\n    }\n\n",
      "target_code": "        }\n    }\n    catch (e) {\n        \n    }\n\n",
      "predection": "} } catch (e) { console.log(e.message); }",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "      }\n    } catch(e) {}\n  });\n",
      "target_code": "      }\n    } catch(e) {} \n  });\n",
      "predection": "} } catch(e) { console.log(e); } } );",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "\tif(serverID == null){serverID = 0};\n\ttry{ specHelper.fs.unlinkSync(specHelper.params[serverID].cache.cacheFolder + specHelper.params[serverID].cache.cacheFile); }catch(e){ }\n\tspecHelper.startServer(serverID, function(api){\n",
      "target_code": "\tif(serverID == null){serverID = 0};\n\tspecHelper.startServer(serverID, function(api){\n",
      "predection": "if(serverID == null) { serverID = 0 } ; specHelper.startServer(serverID, function(api) {",
      "error id": "no-empty",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\t$toast.style.pointerEvents = 'none';\n\t\t\tif(isMobile || window.innerWidth <= mobileWidth){\n\n",
      "target_code": "\t\t\t\t\t$toast.style.pointerEvents = 'none';\n\t\t\tif(ISMOBILE || window.innerWidth <= MOBILEWIDTH){\n\n",
      "predection": "$toast.style.pointerEvents = 'none';",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "      }\n    }, initialValidation);\n  } else {\n\n  }\n",
      "target_code": "      }\n    }, initialValidation)\n  }\n",
      "predection": "} }, initialValidation); }",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "\n    } catch(e) {}\n  }\n",
      "target_code": "\n      resp.end(JSON.stringify(data));\n    });\n  }\n",
      "predection": "} catch(e) { console.log(e); } }",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\t\tresult = confirm('Login to GitHub to save your work under your username.');\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t}\n",
      "target_code": "\t\t\t\t\t\tresult = confirm('Login to GitHub to save your work under your username.');\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\topen('/github-login', 'popup', 'width=1015,height=500');\n\t\t\t\t\t\t}\n",
      "predection": "result = confirm('Login to GitHub to save your work under your username.'); if (result) { return; }",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "          document.execCommand('copy');\n        } catch (err) {}\n        this.maskCore.backspace();\n",
      "target_code": "          document.execCommand('copy');\n        } catch (err) {} \n        this.maskCore.backspace();\n",
      "predection": "document.execCommand('copy'); } catch (err) { } this.maskCore.backspace();",
      "error id": "no-empty",
      "correct": "True"
   },
   {
      "source_code": "            (m) => {\n                try {\n                    globals.resourceWrongVersion = true;\n                }catch(e){}\n            }\n",
      "target_code": "                    globals.monitor.processFXServerHitch(m[1])\n                }catch(e){}\n            }\n",
      "predection": "(m) => { globals.resourceWrongVersion = true; }",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "  try {\n    return require(path.resolve(name));\n  } catch(err) {}\n}\n",
      "target_code": "  try {\n    return require.resolve(path.resolve(name));\n  } catch (err) {}\n}\n",
      "predection": "try { return require(path.resolve(name)); } catch(err) { } }",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "        ];\n\n    } else if(platform === 'windows') {\n\n    } else if(platform === 'linux') {\n        return [];\n",
      "target_code": "        ];\n\n    } else if(platform === 'windows') {\n\n        const home = process.env.HOME || process.env.USERPROFILE;\n        return [\n",
      "predection": "]; } else if(platform === 'linux') { return [];",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "        \n        if (modelData.skins.length > 0) {\r\n            \r\n        }\r\n",
      "target_code": "        \n        if (modelData.skins.length > 0) {\r\n\n        }\r\n",
      "predection": "if (modelData.skins.length > 0) { }",
      "error id": "no-empty",
      "correct": "True"
   },
   {
      "source_code": "    ENV.APP.rootElement = '#ember-testing';\n  }\n\n  if (environment === 'production') {\n\n  }\n\n",
      "target_code": "    ENV.APP.rootElement = '#ember-testing';\n  }\n\n  if (environment === 'production') {\n    ENV.baseURL = '/ember-social';\n  }\n\n",
      "predection": "ENV.APP.rootElement = '#ember-testing'; } if (environment === 'production') { ENV.baseURL = '/ember-select' }",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "                var selected = '';\n                if (this.singlevalue()) {\n                    \n                }\n",
      "target_code": "                var selected = '';\n                if (this.singlevalue()) {\n                    selected = [elem.attr('value')];\n                }\n",
      "predection": "var selected = ''; if (this.singlevalue()) { selected = this.singlevalue(); }",
      "error id": "no-empty",
      "correct": "False"
   },
   {
      "source_code": "            expression.and(\"CCF > 0\");\n        } else {\n\n        }\n",
      "target_code": "            expression.and(\"CCF > 0\");\n        }\n",
      "predection": "expression.and(\"CCF > 0\"); }",
      "error id": "no-empty",
      "correct": "True"
   },
   {
      "source_code": "                success: function(data) {\n                    sakai_global.data.search.getMyContacts();;\n                },\n",
      "target_code": "                success: function(data) {\n                    sakai_global.data.search.getMyContacts();\n                },\n",
      "predection": "success: function(data) { sakai_global.data.search.getMyContacts(); },",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "            }\n        };\n        return number;\n",
      "target_code": "            }\n        }\n        return number;\n",
      "predection": "} } return number;",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "    this[slot].hasReading = false;\n  };\n}\n",
      "target_code": "    this[slot].hasReading = false;\n  }\n};\n",
      "predection": "this[slot].hasReading = false; } }",
      "error id": "no-extra-semi",
      "correct": "False"
   },
   {
      "source_code": "  return format(specifier);\n};\n",
      "target_code": "  return format(specifier);\n}\n",
      "predection": "return format(specifier); }",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "function simplify(node) {\n    return simplifiers[node.type](node);\n};\n\n",
      "target_code": "function simplify(node) {\n    return removeEmpty(simplifiers[node.type](node));\n}\n\n",
      "predection": "function simplify(node) { return simplifyrs[node.type](node); }",
      "error id": "no-extra-semi",
      "correct": "False"
   },
   {
      "source_code": "        }\n    };\n    return acc;\n",
      "target_code": "        }\n    }\n    return acc;\n",
      "predection": "} } return acc;",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "        return new FrameData(size.width, size.height, taskID, frame, startFrame, stopFrame);\n    };\n\n",
      "target_code": "        return new FrameData(size.width, size.height, taskID, frame, startFrame, stopFrame);\n    }\n\n",
      "predection": "return new FrameData(size.width, size.height, taskID, frame, startFrame, stopFrame); }",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "                    d3.selectAll(\".network-title\")\n                        .style(\"stroke-width\", 1.4/scrolLevel)\n                        .attr(\"rx\", 3/scrolLevel + \"px\")\n                };\n\n",
      "target_code": "                    d3.selectAll(\".network-title\")\n                        .style(\"stroke-width\", 1.4/scrollLevel)\n                        .attr(\"rx\", 3/scrollLevel + \"px\")\n                }\n\n",
      "predection": "d3.selectAll(\".network-title\").style(\"stroke-width\", 1.4/scrolLevel).attr(\"rx\", 3/scrolLevel + \"px\") }",
      "error id": "no-extra-semi",
      "correct": "False"
   },
   {
      "source_code": "        let zeroDesc = selectAttr('m:phantPr[last()]/m:zeroDesc[last()]', 'm:val', src)\n                        .toLowerCase() || false;;\n        if (zeroDesc) zeroDesc = forceFalse(zeroDesc);\n",
      "target_code": "        let zeroDesc = selectAttr('m:phantPr[last()]/m:zeroDesc[last()]', 'm:val', src)\n                        .toLowerCase() || false;\n        if (zeroDesc) zeroDesc = forceFalse(zeroDesc);\n",
      "predection": "let zeroDesc = selectAttr('m:phantPr[last()]/m:zeroDesc[last()]','m:val', src).toLowerCase() || false; if (zeroDesc) zeroDesc = forceFalse(zeroDesc);",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "\t\tevent.currentTarget.value = '';\n\t};\n}\n",
      "target_code": "\t\tevent.currentTarget.value = '';\n\t}\n}\n",
      "predection": "event.currentTarget.value = ''; } }",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "                })(current_fileObject);\n                reader.readAsText(current_fileObject)\n            };\n            var onLoadHandler = function(e, theFile, processedCount, uploadedFiles) {\n",
      "target_code": "                })(current_fileObject);\n                reader.readAsText(current_fileObject);\n            }\n            var onLoadHandler = function(e, theFile, processedCount, uploadedFiles) {\n",
      "predection": "} )(current_fileObject); reader.readAsText(current_fileObject); } var onLoadHandler = function(e, theFile, processedCount, uploadedFiles) {",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "    return distance;\n};\n",
      "target_code": "    return distance;\n}\n",
      "predection": "return distance; }",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "          return key;\n        };\n      });\n",
      "target_code": "          return key;\n        }\n      });\n",
      "predection": "return key; } } );",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "                }\r\n                ;\r\n                return _this.find({ where: where });\r\n",
      "target_code": "                }\r\n                return _this.find({ where: where });\r\n",
      "predection": "} return _this.find( { where: where } );",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "  this.router = new Router();\n};\n\n",
      "target_code": "  this.router = new Router();\n}\n\n",
      "predection": "this.router = new Router(); }",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "  }\n};\n\nfunction isSupportedFileType(fileTypeString) {\n",
      "target_code": "  }\n}\n\nfunction isSupportedFileType(fileTypeString) {\n",
      "predection": "} } function isSupportedFileType(fileTypeString) {",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "                _api_filter = 0;\n            };\n        }\n",
      "target_code": "                _api_filter = 0;\n            }\n        }\n",
      "predection": "_api_filter = 0; } }",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": ";var Plates = (typeof process !== 'undefined' && typeof process.title !== 'undefined') ? exports : {};\n\n!function(exports) {\n",
      "target_code": "var Plates = (typeof process !== 'undefined' && typeof process.title !== 'undefined') ? exports : {};\n\n!function(exports) {\n",
      "predection": "var Plates = (typeof process!== 'undefined' && typeof process.title!== 'undefined')? exports : { } ;!function(exports) {",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "                          save(index + 1, data);\n                      })\n                    };\n\n",
      "target_code": "                          save(index + 1, data);\n                      });\n                    }\n\n",
      "predection": "save(index + 1, data); } ); }",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "        window.location.replace(url + \"?\" + new_params.join(\"&\"));\n    };\n\n    function generate_header() {\n",
      "target_code": "        window.location.replace(url + \"?\" + new_params.join(\"&\"));\n    }\n\n    function generate_header() {\n",
      "predection": "window.location.replace(url + \"?\" + new_params.join(\"&\")); } function generate_header() {",
      "error id": "no-extra-semi",
      "correct": "True"
   },
   {
      "source_code": "\tif (comd === 'status') {\n\t\tvar msg = data.msg;\n\t\tvar server = msg.body;\n\t\tvar rows = [];\n",
      "target_code": "\tif (comd === 'status') {\n\t\tvar msg = data.statusInfo;\n\t\tvar server = msg.body;\n\t\tvar rows = [];\n",
      "predection": "if (comd ==='status') { msg = data.msg; server = msg.body; var rows = [];",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "        var item = [];\n        for (var i = 0; i< this_keys.length; i++) {\n            var tags2 = [];\n",
      "target_code": "        var item = [];\n        for (var i3 = 0; i3 < this_keys.length; i3++) {\n            var tags2 = [];\n",
      "predection": "var item = []; for (i = 0; i  this_keys.length; i++) { var tags2 = [];",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "        }).done(function(data) {\n            var data = JSON.parse(data);\n            if (data.status == \"ok\") {\n",
      "target_code": "        }).done(function(data) {\n            if (data.status == \"ok\") {\n",
      "predection": "} ).done(function(data) { data = JSON.parse(data); if (data.status == \"ok\") {",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "    d = (d<1000) ? d.toFixed(0)+' m' : (d/1000).toFixed(2)+' km';\n    var t = f.get('durationT')/60;\n    console.log(f.get('duration'),t)\n",
      "target_code": "    d = (d<1000) ? d.toFixed(0)+' m' : (d/1000).toFixed(2)+' km';\n    t = f.get('durationT')/60;\n    console.log(f.get('duration'),t)\n",
      "predection": "d = (d1000)? d.toFixed(0)+' m' : (d/1000).toFixed(2)+' km'; t = f.get('durationT')/60; console.log(f.get('duration'),t)",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "\n  var self = this\n  self.client = WebDriver.remote(options)\n",
      "target_code": "\n  self.client = WebDriver.remote(options)\n",
      "predection": "self.client = WebDriver.remote(options)",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "\nmodel.Model.prototype.static = function(name, func) {\n  var args = pineapple.utils.makeArray(arguments)\n    , func\n\n",
      "target_code": "\nvar ModelError  = require('./ModelError').ModelError\n\n",
      "predection": "model.Model.prototype.static = function(name, func) { var args = pineapple.utils.makeArray(arguments);",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "            \n            var ia = aindex[ka];\n            \n",
      "target_code": "            \n            ia = aindex[ka];\n            \n",
      "predection": "ia = aindex[ka];",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "        {\n            var child = this.children[i];\n            child._renderWebGL(renderSession);\n        }\n",
      "target_code": "        {\n            this.children[i]._renderWebGL(renderSession);\n        }\n",
      "predection": "{ child = this.children[i]; child._renderWebGL(renderSession); }",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "\nvar tone_analyzer = watson.tone_analyzer({\n  username: tone_analyzer.username || '',\n  password: tone_analyzer.password || '',\n  url: 'https:\n",
      "target_code": "\nconst tone_analyzer = watson.tone_analyzer({\n  username: tone_analyzer_credentials.username || '',\n  password: tone_analyzer_credentials.password || '',\n  url: 'https:\n",
      "predection": "tone_analyzer = watson.tone_analyzer( { username: tone_analyzer.username || '', password: tone_analyzer.password || '', url: 'https:",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "            } else {\n            \tvar split_string = (char_offset * shard_num).toString(16);\n            }\n",
      "target_code": "            } else {\n                split_string = (char_offset * shard_num).toString(16);\n            }\n",
      "predection": "} else { split_string = (char_offset * shard_num).toString(16); }",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "        options = method;\n        var sampler = new Sampler(this, options);\n        $(this).data(KEY, sampler);\n",
      "target_code": "        options = method;\n        sampler = new Sampler(this, options);\n        $(this).data(KEY, sampler);\n",
      "predection": "options = method; sampler = new Sampler(this, options); $(this).data(KEY, sampler);",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "      var hint, left, width, height, marginBottom, marginLeft, marginRight;\n      var spacing = this.getSpacing();\n\n      \n",
      "target_code": "      var hint, left, width, height, marginBottom, marginLeft, marginRight;\n\n      \n",
      "predection": "var hint, left, width, height, marginBottom, marginLeft, marginRight; spacing = this.getSpacing();",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "    \n    else if(metamodel && metamodel.hasOwnProperty(\"nodes\")){\n        var nodes = metamodel.nodes, node;\n        for(var nodeId in nodes){\n",
      "target_code": "    \n    if(metamodel && metamodel.hasOwnProperty(\"nodes\")){\n        var nodes = metamodel.nodes, node;\n        for(var nodeId in nodes){\n",
      "predection": "else if(metamodel && metamodel.hasOwnProperty(\"nodes\")) { nodes = metamodel.nodes; for(var nodeId in nodes) {",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "    if (!main) {\n        var main = iSlider.prototype;\n    }\n",
      "target_code": "    if (!main) {\n        main = iSlider.prototype;\n    }\n",
      "predection": "if (!main) { main = iSlider.prototype; }",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "\n                var coords = this.getInterpolatedCoords(factor2);\n    \n",
      "target_code": "\n                coords = this.getInterpolatedCoords(factor2);\n    \n",
      "predection": "coords = this.getInterpolatedCoords(factor2);",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\t} else {\n\t\t\t\t\t\tvar range = d.body.createTextRange();\n\t\t\t\t\t\trange.moveToElementText(elem);\n",
      "target_code": "\t\t\t\t\t} else {\n\t\t\t\t\t\trange = d.body.createTextRange();\n\t\t\t\t\t\trange.moveToElementText(elem);\n",
      "predection": "} else { range = d.body.createTextRange(); range.moveToElementText(elem);",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "            } else if (params.image) { \n                var texture = this._initTexture(params.preloadColor);\n                this._core.image = params.image;\n",
      "target_code": "            } else if (params.image) { \n                this._initTexture(params.preloadColor);\n                this._core.image = params.image;\n",
      "predection": "} else if (params.image) { texture = this._initTexture(params.preloadColor); this._core.image = params.image;",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "                        else {\n                            var $item = this.getItemToTheRight(anchor);\n                        }\n                    }\n",
      "target_code": "                        else {\n                            $item = this.getItemToTheRight(anchor);\n                        }\n                    }\n",
      "predection": "else { $item = this.getItemToTheRight(anchor); } }",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "        var invert = !baseInvert;\n        for(var i = 0; i < 2; i++) {\n            if(this.trippyRadii[i] == 0) {\n                continue;\n",
      "target_code": "        var invert = !baseInvert;\n        for(let i = 0; i < 2; i++) {\n            if(this.trippyRadii[i] === 0) {\n                continue;\n",
      "predection": "var invert =!baseInvert; for(i = 0; i  2; i++) { if(this.trippyRadii[i] === 0) { continue;",
      "error id": "no-redeclare",
      "correct": "False"
   },
   {
      "source_code": "    } else {\n      var expected = obj && ~obj.indexOf(val)\n    }\n",
      "target_code": "    } else {\n      expected = obj && ~obj.indexOf(val)\n    }\n",
      "predection": "} else { expected = obj && obj.indexOf(val) }",
      "error id": "no-redeclare",
      "correct": "True"
   },
   {
      "source_code": "        str = this._remainder + str;\n        \n        if(dataEndMatch = str.match(/\\r\\n.*?$/)){\n            \n",
      "target_code": "        str = this._remainder + str;\n        if((dataEndMatch = str.match(/\\r\\n.*?$/))){\n            \n",
      "predection": "str = this._remainder + str; if((dataEndMatch = str.match(/ \\ r \\ n.*?$/))) {",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "\n        while (match = tags.exec(text)) {\n            if (tagList.length === 0 || tagList.indexOf(match[1]) !== -1) {\n",
      "target_code": "\n        while ((match = tags.exec(text)) !== null) {\n            if (tagList.length === 0 || tagList.indexOf(match[1]) !== -1) {\n",
      "predection": "while ((match = tags.exec(text))) { if (tagList.length === 0 || tagList.indexOf(match[1])!== -1) {",
      "error id": "no-cond-assign",
      "correct": "False"
   },
   {
      "source_code": "  var elements = document.querySelectorAll('link');\n  for (let i = 0, el = null; el = elements[i]; i++) {\n    updateCss(el);\n",
      "target_code": "  var elements = document.querySelectorAll('link');\n  [].slice.call(elements).forEach(function(el) {\n    updateCss(el);\n",
      "predection": "var elements = document.querySelectorAll('link'); for (let i = 0, el = null; (el = elements[i]); i++) { updateCss(el);",
      "error id": "no-cond-assign",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twhile (matches = R_SNIPPET.exec(gist.files['suite.js'].content)) {\n\t\t\t\t\t\t\t_this.snippets.push(newSnippet(matches[1].replace(/\\n\\t\\t/g, '\\n').trim() + '\\n'));\n",
      "target_code": "\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twhile ((matches = R_SNIPPET.exec(gist.files['suite.js'].content))) {\n\t\t\t\t\t\t\t_this.snippets.push(newSnippet(matches[1].replace(/\\n\\t\\t/g, '\\n').trim() + '\\n'));\n",
      "predection": "} ; } while ((matches = R_SNIPPET.exec(gist.files['suite.js'].content))) { _this.snippets.push(newSnippet(matches[1].replace(/ \\ n \\ t \\ t/g,'\\ n').trim() +'\\ n'));",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "    \n    if (i = vnode.child) {\n      invokeRemoveHook(i._vnode, rm)\n",
      "target_code": "    \n    if (isDef(i = vnode.child)) {\n      invokeRemoveHook(i._vnode, rm)\n",
      "predection": "if ((i = vnode.child)) { invokeRemoveHook(i._vnode, rm)",
      "error id": "no-cond-assign",
      "correct": "False"
   },
   {
      "source_code": "        const enhancements = mutableArray();\n        while (tPath = tPath.parentPath) {\n          \n",
      "target_code": "        const enhancements = mutableArray();\n        while (tPath) {\n          \n",
      "predection": "const enhancements = mutableArray(); while ((tPath = tPath.parentPath)) {",
      "error id": "no-cond-assign",
      "correct": "False"
   },
   {
      "source_code": "    WebApi.prototype.getFunctionInputs = function (queryString, inputs) {\n        if (inputs = null) {\n            return queryString + \")\";\n",
      "target_code": "    WebApi.prototype.getFunctionInputs = function (queryString, inputs) {\n        if (inputs == null) {\n            return queryString + \")\";\n",
      "predection": "WebApi.prototype.getFunctionInputs = function (queryString, inputs) { if (inputs == null) { return queryString + \")\";",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "\n        while (parent = parent.parent) {\n          nestedIncludes = [_.extend({}, child, { include: nestedIncludes })];\n",
      "target_code": "\n        while ((parent = parent.parent)) { \n          nestedIncludes = [_.extend({}, child, { include: nestedIncludes })];\n",
      "predection": "while (parent == parent.parent) { nestedIncludes = [_.extend( { }, child, { include: nestedIncludes } )];",
      "error id": "no-cond-assign",
      "correct": "False"
   },
   {
      "source_code": "        } catch (e) {\n          if (e.code = 11) { this.errors.push(VideoJS.errorCodes.videoNotReady); }\n        }\n",
      "target_code": "        } catch (e) {\n          if (e.code == 11) { this.errors.push(VideoJS.errorCodes.videoNotReady); }\n        }\n",
      "predection": "} catch (e) { if (e.code == 11) { this.errors.push(VideoJS.errorCodes.videoNotReady); } }",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "    \n    if (myname = \"5_1_6\" && !(box.checked)) {\n        document.getElementById('5_1_11').checked = false;\n",
      "target_code": "    \n    if (mynameforrelation == \"5_1_6\" && !(box.checked)) {\n        document.getElementById('5_1_11').checked = false;\n",
      "predection": "if (myname == \"5_1_6\" &&!box.checked) { document.getElementById('5_1_11').checked = false;",
      "error id": "no-cond-assign",
      "correct": "False"
   },
   {
      "source_code": "            let data;\n            while(data = this.read()) {\n                if(pos + data.length > size) {\n",
      "target_code": "            let data;\n            while((data = this.read()) !== null) {\n                if(pos + data.length > size) {\n",
      "predection": "let data; while((data = this.read())) { if(pos + data.length > size) {",
      "error id": "no-cond-assign",
      "correct": "False"
   },
   {
      "source_code": "  var canPlayOgg = (new Audio).canPlayType('audio/ogg; codecs=\"vorbis\"');\n\n  if (this.app.preferedAudioFormat = \"mp3\") {\n\n    if (canPlayMp3) this.audioFormat = \"mp3\";\n",
      "target_code": "  var canPlayOgg = (new Audio).canPlayType('audio/ogg; codecs=\"vorbis\"');\n\n  if (this.app.preferedAudioFormat === \"mp3\") {\n\n    if (canPlayMp3) this.audioFormat = \"mp3\";\n",
      "predection": "var canPlayOgg = (new Audio).canPlayType('audio/ogg; codecs=\"vorbis\"'); if (this.app.preferedAudioFormat === \"mp3\") { if (canPlayMp3) this.audioFormat = \"mp3\";",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "        \n        if (error.status = 404 && category === 'releases/latest') {\n          return this.cache.set(\n",
      "target_code": "        \n        if (error.status === 404 && category === 'releases/latest') {\n          return this.cache.set(\n",
      "predection": "if (error.status === 404 && category ==='releases/latest') { return this.cache.set(",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "          var message = JSON.parse(event.data);\n          if (message.$class = 'org.acme.vehicle_network.UpdateOrderStatusEvent') {\n            if (message.orderStatus === 'VIN_ASSIGNED') {\n",
      "target_code": "          var message = JSON.parse(event.data);\n          if (message.$class === 'org.acme.vehicle_network.UpdateOrderStatusEvent') {\n            if (message.orderStatus === 'VIN_ASSIGNED') {\n",
      "predection": "var message = JSON.parse(event.data); if (message.$class === 'org.acme.vehicle_network.UpdateOrderStatusEvent') { if (message.orderStatus === 'VIN_ASSIGNED') {",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "\tcomponentWillUnmount: function() {\n\t\tvar editor; if (editor = this.getEditor()) {\n\t\t\tthis.unhookEditor(editor);\n",
      "target_code": "\tcomponentWillUnmount: function() {\n\t\tvar editor; if ((editor = this.getEditor())) {\n\t\t\tthis.unhookEditor(editor);\n",
      "predection": "componentWillUnmount: function() { var editor; if ((editor = this.getEditor())) { this.unhookEditor(editor);",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "      var instance = self.pluginManagers[i];\n      if(instance.server = server){\n        return(instance);\n",
      "target_code": "      var instance = self.pluginManagers[i];\n      if(instance.server == server){\n        return(instance);\n",
      "predection": "var instance = self.pluginManagers[i]; if(instance.server == server) { return(instance);",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "      filePath = `untitled.${outputType}`\n      if (projectPath = atom.project.getPaths()[0]) {\n        filePath = path.join(projectPath, filePath)\n",
      "target_code": "      filePath = `untitled.${outputType}`\n      projectPath = atom.project.getPaths()[0]\n      if (projectPath) {\n        filePath = path.join(projectPath, filePath)\n",
      "predection": "filePath = untitled.$ { outputType } projectPath = atom.project.getPaths()[0] if (projectPath) { filePath = path.join(projectPath, filePath)",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "        \n        if (match = this._variable.exec(input))\n          type = 'var', value = match[0];\n",
      "target_code": "        \n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n",
      "predection": "if ((match = this._variable.exec(input))) type = 'var', value = match[0];",
      "error id": "no-cond-assign",
      "correct": "False"
   },
   {
      "source_code": "            }\n            if(data.user.prefs = {\n                \"skin\" : \"\",\n",
      "target_code": "            }\n            if(data.user.prefs == {\n                \"skin\" : \"\",\n",
      "predection": "} if(data.user.prefs == { \"skin\" : \"\",",
      "error id": "no-cond-assign",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t}\n\n\t\t\tif( i = url.lastIndexOf('.') ) {\n\n\t\t\t\tfile.codec = url.substr( i+1 );\n",
      "target_code": "\t\t\t}\n\n\t\t\tif( (i = url.lastIndexOf('.')) > 0 ) {\n\n\t\t\t\tfile.codec = url.substr( i+1 );\n",
      "predection": "} if( (i = url.lastIndexOf('.'))!== null ) { file.codec = url.substr( i+1 );",
      "error id": "no-cond-assign",
      "correct": "False"
   },
   {
      "source_code": "    window.location.assign(\"/#/\");\n    if (!!ga) {\n      ga('send', 'pageview');\n",
      "target_code": "    window.location.assign(\"/#/\");\n    if (typeof ga !== 'undefined') {\n      ga('send', 'pageview');\n",
      "predection": "window.location.assign(\"/#/\"); if (ga) { ga('send', 'pageview');",
      "error id": "no-extra-boolean-cast",
      "correct": "False"
   },
   {
      "source_code": "                                return $cols.map(function (i, val) {\n                                    if (!!~ignoreCols.indexOf(i)) { return;}\n                                    return $(val).text();\n",
      "target_code": "                                return $cols.map(function (i, val) {\n                                    if (!!~ignoreCols.indexOf(i) || $(val).is(ignoreCSS)) { return;}\n                                    return $(val).text();\n",
      "predection": "return $cols.map(function (i, val) { if (!!ignoreCols.indexOf(i)) { return; } return $(val).text();",
      "error id": "no-extra-boolean-cast",
      "correct": "False"
   },
   {
      "source_code": "    function(err, componentsInfo){\n      if(!!err){ return callback(err); }\n\n      server = http.createServer(self.app);\n",
      "target_code": "    function(err, componentsInfo){\n      if(err){ return callback(err); }\n\n      server = http.createServer(self.app);\n",
      "predection": "function(err, componentsInfo) { if(err) { return callback(err); } server = http.createServer(self.app);",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "              \n              if (!!data.id) {\n                return vm.events.filter(function (e) { return e.id === data.id; }).length > 0;\n",
      "target_code": "              \n              if (!!data.id && !!vm.events) {\n                return vm.events.filter(function (e) { return e.id === data.id; }).length > 0;\n",
      "predection": "if (data.id) { return vm.events.filter(function (e) { return e.id === data.id; } ).length > 0;",
      "error id": "no-extra-boolean-cast",
      "correct": "False"
   },
   {
      "source_code": "  } else {\n    project = !!projectElem ? projectElem.textContent : '';\n    if (project !== '') {\n",
      "target_code": "  } else {\n    project = projectElem ? projectElem.textContent : '';\n    if (project !== '') {\n",
      "predection": "} else { project = projectElem? projectElem.textContent : ''; if (project!== '') {",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "\n      if (!!field.chunks) {\n        var _ret = function () {\n",
      "target_code": "\n      if (field.chunks) {\n        var _ret = function () {\n",
      "predection": "if (field.chunks) { var _ret = function () {",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "                run: function(extraImports, opt_callback) {\n                    if (!!extraImports) {\n                      extraImports = {};\n",
      "target_code": "                run: function(extraImports, opt_callback) {\n                    if (!extraImports) {\n                      extraImports = {};\n",
      "predection": "run: function(extraImports, opt_callback) { if (extraImports) { extraImports = { } ;",
      "error id": "no-extra-boolean-cast",
      "correct": "False"
   },
   {
      "source_code": "    \n    if (!!opts.subtext && !!!opts.attach && undefined !== opts.buttons) {\n        msg.text(opts.subtext);\n",
      "target_code": "    \n    if (opts.type === 'quick') {\n        msg.text(opts.subtext);\n",
      "predection": "if (opts.subtext &&!opts.attach && undefined!== opts.buttons) { msg.text(opts.subtext);",
      "error id": "no-extra-boolean-cast",
      "correct": "False"
   },
   {
      "source_code": "        set disabled (value) {\n            if (Boolean(value)) {\n                this.setAttribute('disabled', '');\n",
      "target_code": "        set disabled (value) {\n            if (value) {\n                this.setAttribute('disabled', '');\n",
      "predection": "set disabled (value) { if (value) { this.setAttribute('disabled', '');",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "    var oldText = document.getElementById(\"passtext\");\n    if (!!oldText) {\n      oldText.parentNode.removeChild(oldText);\n",
      "target_code": "    var oldText = document.getElementById(\"passtext\");\n    if (oldText) {\n      oldText.parentNode.removeChild(oldText);\n",
      "predection": "var oldText = document.getElementById(\"passtext\"); if (oldText) { oldText.parentNode.removeChild(oldText);",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "      <div style={[styles.css]}>\n        {!!this.state.primaryStream ?\n          (<VideoComponent\n",
      "target_code": "      <div style={[styles.css]}>\n        {this.state.primaryStream ?\n          (<VideoComponent\n",
      "predection": "div style= { [styles.css] } > { this.state.primaryStream? (VideoComponent",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "\n      if (!!geometryColorByOptions[selectedGeometryIndex].length) {\n        geometryColorBySelector.innerHTML = geometryColorByOptions[selectedGeometryIndex]\n",
      "target_code": "\n      if (!!geometryColorByOptions[selectedGeometryIndex] && !!geometryColorByOptions[selectedGeometryIndex].length) {\n        geometryColorBySelector.innerHTML = geometryColorByOptions[selectedGeometryIndex]\n",
      "predection": "if (geometryColorByOptions[selectedGeometryIndex].length) { geometryColorBySelector.innerHTML = geometryColorByOptions[selectedGeometryIndex]",
      "error id": "no-extra-boolean-cast",
      "correct": "False"
   },
   {
      "source_code": "        var current = iter.current().outputFiles[0];\n        output += !!current ? current.text : '';\n      }\n",
      "target_code": "        var current = iter.current().outputFiles[0];\n        output += current ? current.text : '';\n      }\n",
      "predection": "var current = iter.current().outputFiles[0]; output += current? current.text : ''; }",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "\tremakeInfo : function(cidlist){\n\t\tvar longColor = (!!this.owner.flags.irowake ? this.getLongColor(cidlist) : \"\");\n\n",
      "target_code": "\tremakeInfo : function(cidlist){\n\t\tvar longColor = (this.irowakeEnable() ? this.getLongColor(cidlist) : \"\");\n\n",
      "predection": "remakeInfo : function(cidlist) { var longColor = (this.owner.flags.irowake? this.getLongColor(cidlist) : \"\");",
      "error id": "no-extra-boolean-cast",
      "correct": "False"
   },
   {
      "source_code": "\n        if (!!arrayPromise.isGeometry) { \n            this._geometryPromise = arrayPromise.then((geometry) => {\n",
      "target_code": "\n        if (arrayPromise.isGeometry) { \n            this._geometryPromise = arrayPromise.then((geometry) => {\n",
      "predection": "if (arrayPromise.isGeometry) { this._geometryPromise = arrayPromise.then((geometry) => {",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "  let valueWrap = {};\n  if (!!value) {\n    valueWrap[propName] = value;\n",
      "target_code": "  let valueWrap = {};\n  if (typeof value !== 'undefined') {\n    valueWrap[propName] = value;\n",
      "predection": "let valueWrap = { } ; if (value) { valueWrap[propName] = value;",
      "error id": "no-extra-boolean-cast",
      "correct": "False"
   },
   {
      "source_code": "            quotedMediaParent.classList.remove(\"hidden\");\n        } else if (!!tweetObj.tweetQuoted) {\n            templateElem.querySelector(\"#twitter-quote-content\").classList.remove(\"hidden\");\n",
      "target_code": "            quotedMediaParent.classList.remove(\"hidden\");\n        } else if (tweetObj.tweetQuoted) {\n            templateElem.querySelector(\"#twitter-quote-content\").classList.remove(\"hidden\");\n",
      "predection": "quotedMediaParent.classList.remove(\"hidden\"); } else if (tweetObj.tweetQuoted) { templateElem.querySelector(\"#twitter-quote-content\").classList.remove(\"hidden\");",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "        throw new Error('Attribute description is missing');\n    }\n\n    if (!!!~Object.keys(this.input).indexOf('repository')) {\n        throw new Error('Attribute repository is missing');\n",
      "target_code": "        throw new Error('Attribute description is missing');\n    }\n\n    if (!this.input.repository) {\n        throw new Error('Attribute repository is missing');\n",
      "predection": "throw new Error('Attribute description is missing'); } if (!this.input.repository) { throw new Error('Attribute repository is missing');",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "    \n    if (!!this.props.changes.length) {\n      $('.profile-wrapper [data-toggle=\"tooltip\"]').tooltip()\n",
      "target_code": "    \n    if (this.props.changes.length) {\n      $('.profile-wrapper [data-toggle=\"tooltip\"]').tooltip()\n",
      "predection": "if (this.props.changes.length) { $('.profile-wrapper [data-toggle=\"tooltip\"]').tooltip()",
      "error id": "no-extra-boolean-cast",
      "correct": "True"
   },
   {
      "source_code": "            homematic.debug('set ' + config.name + ' ' + subtypeLock + ' LockTargetState ' + value);\n            ccu.setValue(config.iface, config.description.ADDRESS + ':1', 'STATE', !Boolean(value))\n                .then(() => {\n",
      "target_code": "            homematic.debug('set ' + config.name + ' ' + subtypeLock + ' LockTargetState ' + value);\n            ccu.setValue(config.iface, config.description.ADDRESS + ':1', 'STATE', !value)\n                .then(() => {\n",
      "predection": "homematic.debug('set'+ config.name +'' + subtypeLock +'LockTargetState'+ value); ccu.setValue(config.iface, config.description.ADDRESS + ':1', 'STATE').then(() => {",
      "error id": "no-extra-boolean-cast",
      "correct": "False"
   },
   {
      "source_code": "\n                        case 5:\n                        case 'end':\n                            return _context16.stop();\n                    }\n",
      "target_code": "\nimport * as util from './util';\n",
      "predection": "var _ActiveCallsPanel = _interopRequireDefault(require(\"../../components/ActiveCallsPanel\"));",
      "error id": "no-fallthrough",
      "correct": "False"
   },
   {
      "source_code": "\n                    case 20:\n                        customFlags = [];\n                        _context.next = 23;\n                        return prompt([{\n",
      "target_code": "\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n",
      "predection": "customFlags = []; _context.next = 23; return prompt([ {",
      "error id": "no-fallthrough",
      "correct": "False"
   },
   {
      "source_code": "      this.notId() ;\n    \n    case 'package': case 'private':\n      if ( this. tight  )\n",
      "target_code": "      this.notId() ;\n      break;\n    case 'package': case 'private':\n      if ( this. tight  )\n",
      "predection": "this.notId() ; break; case 'package': case 'private': if ( this. tight )",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "                    \n                    var fightCost = 10 * 3;\n                    maxLength = (maxLength - fightCost / movementCost) / 2;\n                case this.CRITICAL_PATH_TYPE_CAMP_TO_PASSAGE:\n                    \n",
      "target_code": "                    maxLength = (maxLength - fightCost / movementCost) / 2;\n                    deductScouts = false;\n                    break;\n                case this.CRITICAL_PATH_TYPE_CAMP_TO_PASSAGE:\n                    \n",
      "predection": "var fightCost = 10 * 3; maxLength = (maxLength - fightCost / movementCost) / 2; break; case this.CRITICAL_PATH_TYPE_CAMP_TO_PASSAGE:",
      "error id": "no-fallthrough",
      "correct": "False"
   },
   {
      "source_code": "\t\t\titem = null;\n\t\tdefault:\n\t\t\t\n",
      "target_code": "\t\t\titem = null;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t\n",
      "predection": "item = null; break; default:",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "                    }\n                default:\n                    return value;\n            }\n",
      "target_code": "                    }\n                    return value;\n                default:\n                    return value;\n            }\n",
      "predection": "} return null; default: return null; }",
      "error id": "no-fallthrough",
      "correct": "False"
   },
   {
      "source_code": "\n                    case 20:\n                        _iteratorNormalCompletion = true;\n                        _context.next = 11;\n                        break;\n",
      "target_code": "\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n",
      "predection": "var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj!== Symbol.prototype? \"symbol\" : typeof",
      "error id": "no-fallthrough",
      "correct": "False"
   },
   {
      "source_code": "            arr = new Float64Array(length);\n        default:\n            throw new Error('Cannot create pixel array for bit depth ' + image.bitDepth);\n",
      "target_code": "            arr = new Float64Array(length);\n            break;\n        default:\n            throw new Error('Cannot create pixel array for bit depth ' + image.bitDepth);\n",
      "predection": "arr = new Float64Array(length); break; default: throw new Error('Cannot create pixel array for bit depth'+ image.bitDepth);",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "          this.name = database;\n        case 'object':\n          callback = options;\n",
      "target_code": "          this.name = database;\n          break;\n        case 'object':\n          callback = options;\n",
      "predection": "this.name = database; break; case 'object': callback = options;",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "\n              case 1:\n              case 'end':\n                return _context7.stop();\n            }\n",
      "target_code": "\nvar _engine = require('./engine');\n",
      "predection": "Object.defineProperty(exports, \"__esModule\", {",
      "error id": "no-fallthrough",
      "correct": "False"
   },
   {
      "source_code": "                \n                \n                \n      case 'interval':\n        if (!container.player_map[e.player_slot]) {\n",
      "target_code": "        \n        \n        break;\n      case 'interval':\n        if (!container.player_map[e.player_slot]) {\n",
      "predection": "break; case 'interval': if (!container.player_map[e.player_slot]) {",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\t\t\tmessage.subject = n.firstChild.nodeValue;\n\t\t\t\t\t\tcase 'html':\n\t\t\t\t\t\t\tif (n.getAttribute('xmlns')==dojox.xmpp.xmpp.XHTML_IM_NS){\n",
      "target_code": "\t\t\t\t\t\t\tmessage.subject = n.firstChild.nodeValue;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'html':\n\t\t\t\t\t\t\tif (n.getAttribute('xmlns')==dojox.xmpp.xmpp.XHTML_IM_NS){\n",
      "predection": "message.subject = n.firstChild.nodeValue; break; case 'html': if (n.getAttribute('xmlns')==dojox.xmpp.xmpp.XHTML_IM_NS) {",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "                                uniform.setValue(helpVector3.x, helpVector3.y, helpVector3.z);\n                            case \"bindMatrix\":\n                                uniform.setValue(object.skeleton.bindMatrix.elements);\n",
      "target_code": "                                uniform.setValue(helpVector3.x, helpVector3.y, helpVector3.z);\n                                break;\n                            case \"bindMatrix\":\n                                uniform.setValue(object.skeleton.bindMatrix.elements);\n",
      "predection": "uniform.setValue(helpVector3.x, helpVector3.y, helpVector3.z); break; case \"bindMatrix\": uniform.setValue(object.skeleton.bindMatrix.elements);",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "    this.assert( !( this.tight && arguments_or_eval(head.name) )  );\n    \n  case 'MemberExpression':\n    return;\n",
      "target_code": "    this.assert( !( this.tight && arguments_or_eval(head.name) )  );\n    break;\n  case 'MemberExpression':\n    return;\n",
      "predection": "this.assert(!( this.tight && arguments_or_eval(head.name) ) ); break; case 'MemberExpression': return;",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\tthreeFormat = THREE.RGBAFormat;\n\t\t\tcase 13: \n\t\t\t\tvar dataLength = dxtSz * 8; \n",
      "target_code": "\t\t\t\tthreeFormat = THREE.RGBAFormat;\n\t\t\t\tbreak;\n\t\t\tcase 13: \n\t\t\t\tvar dataLength = dxtSz * 8; \n",
      "predection": "threeFormat = THREE.RGBAFormat; break; case 13: var dataLength = dxtSz * 8;",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "          }\n        case \"like\":\n        case \"not like\":\n",
      "target_code": "          }\n          break;\n        case \"like\":\n        case \"not like\":\n",
      "predection": "} break; case \"like\": case \"not like\":",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "                    open();\n                case 9: \n                    break;\n                case 46: \n",
      "target_code": "                    open();\n                    break;\n                case 9: \n                    break;\n                case 46: \n",
      "predection": "open(); break; case 9: break; case 46:",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "      const imageSrc = MEDIUM_IMG_CDN + Math.max(imageWidth * 2, 2000) + '/' + p.metadata\n        .id\n      p.text = '\\n![' + p.text + '](' + imageSrc + ')'\n    case 6:\n      markup = '> '\n",
      "target_code": "        .id\n      p.text = '\\n ![' + p.text + '](' + imageSrc + ')' + '\\n'\n      break\n    case 6:\n      markup = '> '\n",
      "predection": "const imageSrc = MEDIUM_IMG_CDN + Math.max(imageWidth * 2, 2000) + '/' + p.metadata.id p.text ='\\ n![' + p.text + '](' + imageSrc + ')' break case 6: markup = '>'+ imageSrc + ';",
      "error id": "no-fallthrough",
      "correct": "False"
   },
   {
      "source_code": "    case 'undefined': {\n      _accessor = rowData => rowData[key]\n    }\n    case 'string': {\n      _accessor = rowData => rowData[accessor]\n",
      "target_code": "      _accessor = rowData => rowData[key]\n      break\n    }\n    case 'string': {\n      _accessor = rowData => rowData[accessor]\n",
      "predection": "_accessor = rowData => rowData[key] break; } case'string': { _accessor = rowData => rowData[accessor]",
      "error id": "no-fallthrough",
      "correct": "False"
   },
   {
      "source_code": "        ctx.grp = method.args\n      case 'hav':\n        ctx.hav = method.args\n",
      "target_code": "        ctx.grp = method.args\n        break\n      case 'hav':\n        ctx.hav = method.args\n",
      "predection": "ctx.grp = method.args break case 'hav': ctx.hav = method.args",
      "error id": "no-fallthrough",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\t\treturn this.next(this);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tcase 'waitForFramePop':\n",
      "target_code": "\t\t\t\t\t\treturn this.next(this);\n\t\t\t\t\tcase 'waitForFramePop':\n",
      "predection": "return this.next(this); case 'waitForFramePop':",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "const resolveStage = () => {\n  return 'test';\n  if(!process.env['CIRCLE_BRANCH']) {\n    console.log(`Could not resolve CIRCLE_BRANCH. Not running on ci?`)\n",
      "target_code": "const resolveStage = () => {\n  if(!process.env['CIRCLE_BRANCH']) {\n    console.log(`Could not resolve CIRCLE_BRANCH. Not running on ci?`)\n",
      "predection": "const resolveStage = () => { if(!process.env['CIRCLE_BRANCH']) { console.log(Could not resolve CIRCLE_BRANCH. Not running on ci?)",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "          throw \"getValueFromWidget: \" + this._renderType + \" not supported!\";\n        break;\n      }\n",
      "target_code": "          throw \"getValueFromWidget: \" + this._renderType + \" not supported!\";\n      }\n",
      "predection": "throw \"getValueFromWidget: \" + this._renderType + \" not supported!\"; }",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\treturn TAPi18n.__('Nothing');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n",
      "target_code": "\t\t\t\t\treturn TAPi18n.__('Nothing');\n\t\t\t\tdefault:\n",
      "predection": "return TAPi18n.__('Nothing'); default:",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "                            throw new Error( 'stroked round lineJoin not implemented .. add arc/arcTo' );\n                            break;\n                        case 'miter':\n",
      "target_code": "                            throw new Error( 'stroked round lineJoin not implemented .. add arc/arcTo' );\n                            \n                        case 'miter':\n",
      "predection": "throw new Error('stroked round lineJoin not implemented.. add arc/arcTo' ); case'miter':",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "        }, options));\n    return { on: () => {} };\n}\n",
      "target_code": "        }, options));\n}\n",
      "predection": "}, options)); }",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\t\treturn value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'phonenumber_countrycode':\n",
      "target_code": "\t\t\t\t\t\treturn value;\n\t\t\t\t\tcase 'phonenumber_countrycode':\n",
      "predection": "return value; case 'phonenumber_countrycode':",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "                return \"BIShow.ResetView\";\r\n                break;\r\n        }\r\n",
      "target_code": "                return \"BIShow.ResetView\";\r\n            default:\r\n                return \"BIShow.WidgetView\";\r\n        }\r\n",
      "predection": "return \"BIShow.ResetView\"; }",
      "error id": "no-unreachable",
      "correct": "False"
   },
   {
      "source_code": "    console.log('\\n# fail\\n')\n    process.exit(1)\n    return\n  }\n",
      "target_code": "    console.log('\\n# fail\\n')\n    return\n  }\n",
      "predection": "console.log(' \\ n# fail \\ n') process.exit(1) }",
      "error id": "no-unreachable",
      "correct": "False"
   },
   {
      "source_code": "\n  return\n    platform === 'amp' ? (\n      <AmpChartbeatsBeacon {...commonProps} />\n    ) : (\n      <CanonicalChartbeatsBeacon {...commonProps} useCanonical={useCanonical} />\n",
      "target_code": "\n  return platform === 'amp' ? (\n    <AmpChartbeatsBeacon {...commonProps} />\n  ) : (\n    <CanonicalChartbeatsBeacon {...commonProps} useCanonical={useCanonical} />\n",
      "predection": "return platform === 'amp'? ( AmpChartbeatsBeacon {...commonProps } useCanonical= { useCanonical } /> ) : ( CanonicalChartbeatsBeacon {...commonProps } useCanonical= { useCanonical } />",
      "error id": "no-unreachable",
      "correct": "False"
   },
   {
      "source_code": "    const { props, _specs: specs } = this;\n    process.exit(0)\n    initSpecs('options');\n\n",
      "target_code": "    const { props, _specs: specs } = this;\n    initSpecs('options');\n\n",
      "predection": "const { props, _specs: specs } = this; initSpecs('options');",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "              return \"string\";\n              break;\n            case \"[object Number]\":\n",
      "target_code": "              return \"string\";\n            case \"[object Number]\":\n",
      "predection": "return \"string\"; case \"[object Number]\":",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "                    return(0);\n                    break;\n                }\n                case '/': {  \n",
      "target_code": "                    return(0);\n                }\n                case '/': {  \n",
      "predection": "return(0); } case '/': {",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "            throw \"Character not supported\";\n        break;\n    }\n",
      "target_code": "            throw \"Character not supported\";\n    }\n",
      "predection": "throw \"Character not supported\"; }",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "  State.sun.direction[0] += 0.001 \n\n  return\n  if (loaded) {\n    var elapsedTime = Date.now() - startTime\n",
      "target_code": "\n  State.sun.direction[0] += 0.001 \n\n  if (loaded) {\n    var elapsedTime = Date.now() - startTime\n",
      "predection": "State.sun.direction[0] += 0.001 if (loaded) { var elapsedTime = Date.now() - startTime",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "    warningsCount++;\n  };\n\n  var addError = function (network, message) {\n    addMessageToArray(network.errors, message);\n",
      "target_code": "    addMessageToArray(network.warnings, message);\n};\n\nvar addError = function (network, message) {\n    addMessageToArray(network.errors, message);\n",
      "predection": "warningsCount++; } var addError = function (network, message) { addMessageToArray(network.errors, message);",
      "error id": "no-unreachable",
      "correct": "False"
   },
   {
      "source_code": "\t\tgetjPath: function(rel) {\n      return [];\n      switch(rel) {\n      case 'info':\n",
      "target_code": "\t\tgetjPath: function(rel) {\n      \n      switch(rel) {\n      case 'info':\n",
      "predection": "getjPath: function(rel) { switch(rel) { case 'info':",
      "error id": "no-unreachable",
      "correct": "True"
   },
   {
      "source_code": "test('bound command', function() {\n  test('simple, unnamed bound command', function() {\n    return false;\n    var query = client.query({\n      text: 'select * where name = $1',\n",
      "target_code": "  test('simple, unnamed bound command', function() {\n    assert.ok(client.connection.emit('readyForQuery'));\n\n    var query = client.query({\n      text: 'select * where name = $1',\n",
      "predection": "test('bound command', function() { var query = client.query( { text:'select * where name = $1',",
      "error id": "no-unreachable",
      "correct": "False"
   },
   {
      "source_code": "\n  \n  this.callback(null, json, 2, 3, 4)\n}\n",
      "target_code": "\n  return `export default ${json}`\n  \n}\n",
      "predection": "this.callback(null, json, 2, 3, 4) }",
      "error id": "no-unreachable",
      "correct": "False"
   },
   {
      "source_code": "\n    return Ember.RSVP.Promise.reject('BOOM');\n\n    var controller = this;\n    var itemModel = this.get('itemModel');\n",
      "target_code": "\n  updateReverseRelationships: function () {\n\n    var controller = this;\n    var itemModel = this.get('itemModel');\n",
      "predection": "var controller = this; var itemModel = this.get('itemModel');",
      "error id": "no-unreachable",
      "correct": "False"
   },
   {
      "source_code": "function teleport( entity, destination){\n  if (typeof entity === 'String' || entity instanceof java.lang.String){\n    entity = utils.player(entity);\n",
      "target_code": "function teleport( entity, destination){\n  if (typeof entity === 'string' || entity instanceof java.lang.String){\n    entity = utils.player(entity);\n",
      "predection": "function teleport( entity, destination) { if (typeof entity ==='string' || entity instanceof java.lang.String) { entity = utils.player(entity);",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "    })\n\n    if (typeof syncGrid === 'Error') {\n      throw syncGrid;\n",
      "target_code": "    })\n\n    if (syncGrid instanceof Error) {\n      throw syncGrid;\n",
      "predection": "} ) if (syncGrid instanceof Error) { throw syncGrid;",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "    shareUrl.query.url = shariff.getURL();\n    if (typeof shariff.options.twitterVia !== null) {\n        shareUrl.query.via = shariff.options.twitterVia;\n",
      "target_code": "    shareUrl.query.url = shariff.getURL();\n    if (shariff.options.twitterVia !== null) {\n        shareUrl.query.via = shariff.options.twitterVia;\n",
      "predection": "shareUrl.query.url = shariff.getURL(); if (shariff.options.twitterVia) { shareUrl.query.via = shariff.options.twitterVia;",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "    \n    if (typeof syncAreaResult === 'Error') {\n    \tthrow syncAreaResult;\n",
      "target_code": "    \n    if (syncAreaResult instanceof Error) {\n    \tthrow syncAreaResult;\n",
      "predection": "if (syncAreaResult instanceof Error) { throw syncAreaResult;",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "        i.name = 'vote';\n        if (typeof id == 'integer')\n            i.id = id;\n        i.nav_id = NAV_SUFFIX + 'past-votes';\n",
      "target_code": "        i.name = 'vote';\n        if (typeof id == 'number') { i.id = id; };\n        i.nav_id = NAV_SUFFIX + 'past-votes';\n",
      "predection": "i.name = 'vote'; if (typeof id == 'number') i.id = id; i.nav_id = NAV_SUFFIX + 'past-votes';",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "\n            if (typeof options.button === 'array') {\n                options.button = options.button.concat(options.container);\n",
      "target_code": "\n            if (Array.isArray(options.button)) {\n                options.button = options.button.concat(options.container);\n",
      "predection": "if (options.button instanceof Array) { options.button = options.button.concat(options.container);",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "  return function(a, b) {\n    if (typeof a[key] === 'String') {\n      return a[key].localeCompare(b[key])\n",
      "target_code": "  return function(a, b) {\n    if (typeof a[key] === 'string') {\n      return a[key].localeCompare(b[key])\n",
      "predection": "return function(a, b) { if (typeof(a[key]) ==='string') { return a[key].localeCompare(b[key])",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "        for (var i = 0, n = info.length; i < n; i++)\n          if (typeof info[i] == 'array')\n            unpack(obj[i], info[i]);\n",
      "target_code": "        for (var i = 0, n = info.length; i < n; i++)\n          if (typeof info[i] !== 'string')\n            unpack(obj[i], info[i]);\n",
      "predection": "for (var i = 0, n = info.length; i  n; i++) if (typeof info[i] == 'object') unpack(obj[i], info[i]);",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "export default function retrieveGlobalObject() {\n  if (typeof window !== 'undefinde') {\n    return window;\n",
      "target_code": "export default function retrieveGlobalObject() {\n  if (typeof window !== 'undefined') {\n    return window;\n",
      "predection": "export default function retrieveGlobalObject() { if (typeof window!== 'undefined') { return window;",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "\t\tlet response = yield siadCall('/renter/contracts')\n\t\tif (typeof response.contracts.length === null) {\n\t\t\treturn\n",
      "target_code": "\t\tlet response = yield siadCall('/renter/contracts')\n\t\tif (!response.contracts) {\n\t\t\treturn\n",
      "predection": "let response = yield siadCall('/renter/contracts') if (response.contracts.length === null) { return",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "        continue;\n      else if(typeof transform == 'Object') {\n        if(transform.whitelist_nodes && transform.whitelist_nodes instanceof Array) {\n",
      "target_code": "        continue;\n      else if(typeof transform == 'object') {\n        if(transform.whitelist_nodes && transform.whitelist_nodes instanceof Array) {\n",
      "predection": "continue; else if(typeof transform == 'object') { if(transform.whitelist_nodes && transform.whitelist_nodes instanceof Array) {",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "\n    if (typeof getData.length === 1) {\n      getData(props).then(onSuccess, onError).end();\n",
      "target_code": "\n    if (getData.length === 1) {\n      getData(props).then(onSuccess, onError).end();\n",
      "predection": "if (getData.length === 1) { getData(props).then(onSuccess, onError).end();",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "const parseStatus = status => {\n    if (typeof status !== \"Number\")\n        throw new Error(\"ERROR: parseStatus accepts type <Number> only!\");\n\n",
      "target_code": "const parseStatus = status => {\n    if (typeof status !== \"number\") throw new Error(\"parseStatus accepts type <Number> only!\");\n\n",
      "predection": "const parseStatus = status => { if (typeof status!== \"number\") throw new Error(\"ERROR: parseStatus accepts type Number> only!\");",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "\n  if (typeof tinPolys === 'Error') {\n    done(tinPolys);\n",
      "target_code": "\n  if (tinPolys instanceof Error) {\n    done(tinPolys);\n",
      "predection": "if (tinPolys instanceof Error) { done(tinPolys);",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "      if (typeof name !== \"string\" || typeof name === \"\") {\n        return \"\";\n      }\n      if (typeof subName !== \"string\" || typeof subName === \"\") {\n        return \"\";\n      }\n\n",
      "target_code": "      if (typeof name !== \"string\" || name === \"\") {\n        return \"\";\n      }\n      if (typeof subName !== \"string\" || subName === \"\") {\n        return \"\";\n      }\n\n",
      "predection": "if (typeof name!== \"string\" || name === \"\") { return \"\"; } if (typeof subName!== \"string\" || subName === \"\") { return \"\"; }",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "  stripChars: function (str) {\n    if (typeof str === 'str') {\n      return str.replace(/[^\\x20-\\x7F]/g, '?'); \n",
      "target_code": "  stripChars: function (str) {\n    if (typeof str === 'string') {\n      return str.replace(/[^\\x20-\\x7F]/g, '?'); \n",
      "predection": "stripChars: function (str) { if (typeof str === 'object') { return str.replace(/[ ^ \\ x20- \\ x7F]/g, '?');",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "\nif (typeof globalThis !== 'udefined') globalObject = globalThis\nelse if (typeof window !== 'udefined') globalObject = window\nelse if (typeof global !== 'udefined') globalObject = global\nelse throw new Error('No global detected!')\n",
      "target_code": "\ngetGlobal().THREE = { ...THREE }\n",
      "predection": "if (typeof globalThis!== 'undefined') globalObject = globalThis else if (typeof window!== 'undefined') globalObject = window else if (typeof global!== 'undefined') globalObject = global else throw new Error('No global detected!')",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "                for (var i in this) {\n\n                    if (typeof this[i] === 'function ') {\n                        continue;\n",
      "target_code": "                for (var i in this) {\n\n                    if (typeof this[i] === 'function') {\n                        continue;\n",
      "predection": "for (var i in this) { if (typeof this[i] === 'function') { continue;",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "    write: function (pluginName, name, write) {\n      if (typeof buildMap[name] === 'text') {\n        var text = buildMap[name];\n",
      "target_code": "    write: function (pluginName, name, write) {\n      if (typeof buildMap[name] === 'string') {\n        var text = buildMap[name];\n",
      "predection": "write: function (pluginName, name, write) { if (typeof buildMap[name] ==='string') { var text = buildMap[name];",
      "error id": "valid-typeof",
      "correct": "True"
   },
   {
      "source_code": "            return Array.from(this._heritable);\n        }\n        if (this._parent &&  typeof this._parent.getHeritable === 'Function') {\n            return this._parent.getHeritable();\n",
      "target_code": "            return Array.from(this._heritable);\n        }\n        if (this._parent && _.isFunction(this._parent.getHeritable)) {\n            return this._parent.getHeritable();\n",
      "predection": "return Array.from(this._heritable); } if (this._parent && typeof this._parent.getHeritable === 'function') { return this._parent.getHeritable();",
      "error id": "valid-typeof",
      "correct": "False"
   },
   {
      "source_code": "  } catch (error) {\n    hasSupport = false\n  } finally {\n    return hasSupport\n  }\n",
      "target_code": "    hasSupport = false\n  }\n",
      "predection": "} catch (error) { return hasSupport }",
      "error id": "no-unsafe-finally",
      "correct": "False"
   },
   {
      "source_code": "        } finally {\n            if (_didIteratorError5) {\n                throw _iteratorError5;\n            }\n",
      "target_code": "        } finally {\n            if (_didIteratorError3) {\n                throw _iteratorError3;\n            }\n",
      "predection": "} finally { if (_didIteratorError4) { throw _iteratorError4; }",
      "error id": "no-unsafe-finally",
      "correct": "False"
   },
   {
      "source_code": "\t\tvalue = null;\n\t} finally {\n\t\treturn value !== null && value !== undefined;\n\t}\n",
      "target_code": "\t\tvalue = null;\n\t}\n",
      "predection": "value = null; }",
      "error id": "no-unsafe-finally",
      "correct": "True"
   },
   {
      "source_code": "                } finally {\n                    if (_didIteratorError22) {\n                        throw _iteratorError22;\n                    }\n",
      "target_code": "                } finally {\n                    if (_didIteratorError21) {\n                        throw _iteratorError21;\n                    }\n",
      "predection": "} finally { if (_didIteratorError21) { throw _iteratorError21; }",
      "error id": "no-unsafe-finally",
      "correct": "True"
   },
   {
      "source_code": "          } else {\n            return Promise.reject(\n              new RouterError(\n                'ajax_no_tokens', 'Can not get response token'));\n",
      "target_code": "          } else {\n            reject(new RouterError(\n                'ajax_no_tokens', 'Can not get response token'));\n",
      "predection": "} else { return Promise.reject( new RouterError( 'ajax_no_tokens', 'Can not get response token'));",
      "error id": "no-unsafe-finally",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\t\t\t\tthis._super = tmp;\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t}\n",
      "target_code": "\t\t\t\t\t\t\t\tthis._super = tmp;\n\t\t\t\t\t\t\t}\n",
      "predection": "this._super = tmp; }",
      "error id": "no-unsafe-finally",
      "correct": "True"
   },
   {
      "source_code": "    } catch (e) {\n      try { cleanupSubscription(subscription) }\n      finally { throw e }\n    }\n",
      "target_code": "    } catch (e) {\n      hostReportError(e);\n    }\n",
      "predection": "} catch (e) { try { cleanupSubscription(subscription) } finally { throw e } }",
      "error id": "no-unsafe-finally",
      "correct": "False"
   },
   {
      "source_code": "                    this._splitButtonActive = false;\n                },\n\n                _MSPointerDownSplitButtonHandler: function NavBarCommand_MSPointerDownSplitButtonHandler(ev) {\n                    this._splitButtonActive = true;\n",
      "target_code": "                    this._splitButtonActive = false;\n                },\n\n                _MSPointerDownSplitButtonHandler: function NavBarCommand_MSPointerDownSplitButtonHandler() {\n                    this._splitButtonActive = true;\n",
      "predection": "this._splitButtonActive = false; }, _MSPointerDownSplitButtonHandler: function NavBarCommand_MSPointerDownSplitButtonHandler() { this._splitButtonActive = true;",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "\t\n\tonposition: function(map, element) {\n\t\t\n\t}\n};\n",
      "target_code": "\t\n\tonposition: function(map, element) {\n\t\tthis.onreset(map, element);\n\t}\n};\n",
      "predection": "onposition: function() { } } ;",
      "error id": "no-unused-vars",
      "correct": "False"
   },
   {
      "source_code": "    }));\n  }\n  \n  async joinTeamProject(projectId, userId) {\n    console.log('\u00f0\u0178\u0161\u2019')\n  }\n  \n",
      "target_code": "    }));\n  }\n  \n  async joinTeamProject(projectId, userId) {\n    console.log('\u00f0\u0178\u0161\u2019', projectId, userId)\n  }\n  \n",
      "predection": "} )); } async joinTeamProject() { console.log('') }",
      "error id": "no-unused-vars",
      "correct": "False"
   },
   {
      "source_code": "var Provider = exports.Provider = function (options) {\n  var self = this;  \n  \n  \n",
      "target_code": "var Provider = exports.Provider = function (options) {\n  \n",
      "predection": "var Provider = exports.Provider = function (options) {",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "\n  authorize: function(jqXHR, requestOptions) {\n    var accessToken = this.get('session.secure.access_token');\n",
      "target_code": "\n  authorize: function(jqXHR) {\n    var accessToken = this.get('session.secure.access_token');\n",
      "predection": "authorize: function(jqXHR) { var accessToken = this.get('session.secure.access_token');",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "        option: { name: 'families', config: { alias: 'I', desc: 'Vertical bar \\'|\\' separated list of webscript families', type: String } },\n        when: function (readonlyProps) {\n          this.out.docs(\n",
      "target_code": "        option: { name: 'families', config: { alias: 'I', desc: 'Vertical bar \\'|\\' separated list of webscript families', type: String } },\n        when: () => {\n          this.out.docs(\n",
      "predection": "option: { name: 'families', config: { alias: 'I', desc: 'Vertical bar \\ '| \\'separated list of webscript families', type: String } }, when: function () { this.out.docs(",
      "error id": "no-unused-vars",
      "correct": "False"
   },
   {
      "source_code": "var path = require('path');\nvar mkdirp = require('mkdirp');\n\nexports = module.exports;\n",
      "target_code": "var path = require('path');\n\nexports = module.exports;\n",
      "predection": "var path = require('path'); exports = module.exports;",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "exports.decorateConfig = (config, t) => {\n\n\tlet primary, secondary, text;\n\n\tswitch (config.pokemon) {\n",
      "target_code": "exports.decorateConfig = (config, t) => {\n\n\tlet primary, secondary, tertiary;\n\n\tswitch (config.pokemon) {\n",
      "predection": "exports.decorateConfig = (config, t) => { let primary, secondary; switch (config.pokemon) {",
      "error id": "no-unused-vars",
      "correct": "False"
   },
   {
      "source_code": "import { MuiThemeProvider } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n",
      "target_code": "import { MuiThemeProvider } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n",
      "predection": "import { MuiThemeProvider } from '@material-ui/core/styles'; import PropTypes from 'prop-types';",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "    net = require('net'),\n    util = require('util'),\n    Packet = require('./packet'),\n",
      "target_code": "    net = require('net'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter,\n    Packet = require('./packet'),\n",
      "predection": "net = require('net'), Packet = require('./packet'),",
      "error id": "no-unused-vars",
      "correct": "False"
   },
   {
      "source_code": "\nconst _ = require('lodash');\nconst assert = require('assert');\nconst Promise = require('bluebird');\n",
      "target_code": "\nconst Promise = require('bluebird');\n",
      "predection": "const _ = require('lodash'); const Promise = require('bluebird');",
      "error id": "no-unused-vars",
      "correct": "False"
   },
   {
      "source_code": "\n\n\nvar assert = require('../../utils/assert.js');\nvar preq   = require('preq');\n",
      "target_code": "\n\n\nconst assert = require('../../utils/assert.js');\n",
      "predection": "var assert = require('../../utils/assert.js');",
      "error id": "no-unused-vars",
      "correct": "False"
   },
   {
      "source_code": "import { Client, Message } from 'discord.js';\nimport * as dotenv from 'dotenv';\n",
      "target_code": "import { Client } from 'discord.js';\nimport * as dotenv from 'dotenv';\n",
      "predection": "import { Client } from 'discord.js'; import * as dotenv from 'dotenv';",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "import {exec, execSync} from 'child_process';\nimport {version} from '../../package.json';\nimport fs from 'fs';\n",
      "target_code": "import {version} from '../../package.json';\nimport fs from 'fs';\n",
      "predection": "import { version } from '../../package.json'; import fs from 'fs';",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "    ),\n  action: _ => glamor.css(css['.psds-note__action']),\n  aside: _ => glamor.css(css['.psds-note__aside']),\n",
      "target_code": "    ),\n  aside: _ => glamor.css(css['.psds-note__aside']),\n",
      "predection": "), aside: _ => glamor.css(css['.psds-note__aside']),",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "\nconst IO = ({ output, input, debugMode, receiveInput }) => [\n    <b key=\"input-label\">Input</b>,\n",
      "target_code": "\nconst IO = ({ output, input, inDebugMode, receiveInput }) => [\n    <b key=\"input-label\">Input</b>,\n",
      "predection": "const IO = ( { output, input } ) => [ b key=\"input-label\">Input/b>,",
      "error id": "no-unused-vars",
      "correct": "False"
   },
   {
      "source_code": "\t\t\tvar message = _ctx$format2[0];\n\t\t\tvar errors2 = _ctx$format2[1];\n\n\n\t\t\treturn message.replace(String.fromCharCode(8296), '').replace(String.fromCharCode(8297), '');\n",
      "target_code": "\t\t\tvar message = _ctx$format2[0];\n\t\t\tvar errors = _ctx$format2[1];\n\n\n\t\t\tif (errors.length > 0) {\n",
      "predection": "var message = _ctx$format2[0]; return message.replace(String.fromCharCode(8296), '').replace(String.fromCharCode(8297), '');",
      "error id": "no-unused-vars",
      "correct": "False"
   },
   {
      "source_code": "var ViewSwitcher = require('ampersand-view-switcher');\nvar katex = require('katex');\nvar _ = require('underscore');\n",
      "target_code": "var ViewSwitcher = require('ampersand-view-switcher');\n\nvar _ = require('underscore');\n",
      "predection": "var ViewSwitcher = require('ampersand-view-switcher'); var _ = require('underscore');",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "            watchLog = [],\n            logIdx, logMsg, asyncTask;\n\n",
      "target_code": "            watchLog = [],\n            logIdx, asyncTask;\n\n",
      "predection": "watchLog = [], logIdx, asyncTask;",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "import Ember from 'ember';\nimport layout from '../templates/components/icon-facebook';\n",
      "target_code": "\nimport layout from '../templates/components/icon-facebook';\n",
      "predection": "import layout from '../templates/components/icon-facebook';",
      "error id": "no-unused-vars",
      "correct": "True"
   },
   {
      "source_code": "function process(context) {\n\tif(this.debugger) debugger;\n        for(var i=0; i<this.iterate.length; i++) { \n",
      "target_code": "function process(context) {\n        for(var i=0; i<this.iterate.length; i++) { \n",
      "predection": "function process(context) { for(var i=0; ithis.iterate.length; i++) {",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "                if (Object.keys(rendererOptions).length > 0) {\n                    debugger;\n                    var prom = [];\n",
      "target_code": "                if (Object.keys(rendererOptions).length > 0) {\n                    var prom = [];\n",
      "predection": "if (Object.keys(rendererOptions).length > 0) { var prom = [];",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "    updateRowDisplay: function(evt) {\n       debugger;\n        \n",
      "target_code": "    updateRowDisplay: function(evt) {\n       \n        \n",
      "predection": "updateRowDisplay: function(evt) {",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "            this._cachedPosition = position;\n\n            debugger\n            return [\n",
      "target_code": "            this._cachedPosition = position;\n\n            return [\n",
      "predection": "this._cachedPosition = position; return [",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "          log.push('File upload succeeded! ID: ' + data.file_upload._id);\n          debugger;\n          \n",
      "target_code": "          log.push('File upload succeeded! ID: ' + data.file_upload._id);\n\n          \n",
      "predection": "log.push('File upload succeeded! ID:'+ data.file_upload._id);",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "      resolve: function (source, args) {\n        debugger\n        let author = _.clone(args);\n",
      "target_code": "      resolve: function (source, args) {\n        let author = _.clone(args);\n",
      "predection": "resolve: function (source, args) { let author = _.clone(args);",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "    if (Array.isArray(input)) {\n        debugger\n        return json2md(input, \"\", \"img\");\n",
      "target_code": "    if (Array.isArray(input)) {\n        return json2md(input, \"\", \"img\");\n",
      "predection": "if (Array.isArray(input)) { return json2md(input, \"\", \"img\");",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "  \"ambari-bandwidth-pre\": function (bandwidth_string) {\n    debugger;\n    bandwidth_string = (jQuery(bandwidth_string).text()) ? jQuery(bandwidth_string).text() : bandwidth_string;\n",
      "target_code": "  \"ambari-bandwidth-pre\": function (bandwidth_string) {\n    bandwidth_string = (jQuery(bandwidth_string).text()) ? jQuery(bandwidth_string).text() : bandwidth_string;\n",
      "predection": "\"ambari-bandwidth-pre\": function (bandwidth_string) { bandwidth_string = (jQuery(bandwidth_string).text())? jQuery(bandwidth_string).text() : bandwidth_string;",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "      }\ndebugger;\n      if (self._state.requests[0].command.indexOf('RENAME') > -1) {\n",
      "target_code": "      }\n      if (self._state.requests[0].command.indexOf('RENAME') > -1) {\n",
      "predection": "} if (self._state.requests[0].command.indexOf('RENAME') > -1) {",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "        function compareToControlImage(image) {\n            debugger;\n            assert.isTrue(imagediff.equal(image, controlImage()), 'rendered and control images should be equal');\n",
      "target_code": "        function compareToControlImage(image) {\n            assert.isTrue(imagediff.equal(image, controlImage()), 'rendered and control images should be equal');\n",
      "predection": "function compareToControlImage(image) { assert.isTrue(imagediff.equal(image, controlImage()),'rendered and control images should be equal');",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "            }\n            debugger;\n            arr = new Float64Array(buffer);\n",
      "target_code": "            }\n            arr = new Float64Array(buffer);\n",
      "predection": "} arr = new Float64Array(buffer);",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "    normals       = GeometryHelper.computeNormals(vertices, indices);\n    debugger;\n\n    return new Geometry({\n",
      "target_code": "    normals       = GeometryHelper.computeNormals(vertices, indices);\n\n    return new Geometry({\n",
      "predection": "normals = GeometryHelper.computeNormals(vertices, indices); return new Geometry( {",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "        error(_, __, file, response) {\n            debugger;\n            this.get('uploading').removeObject(file);\n",
      "target_code": "        error(_, __, file, response) {\n            this.get('uploading').removeObject(file);\n",
      "predection": "error(_, __, file, response) { this.get('uploading').removeObject(file);",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "      })\n      debugger\n      cb(null, tree)\n",
      "target_code": "      })\n      cb(null, tree)\n",
      "predection": "} ) cb(null, tree)",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "  }\n  debugger;\n  if (hasTransformer) {\n",
      "target_code": "  }\n  if (hasTransformer) {\n",
      "predection": "} if (hasTransformer) {",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "    addResource: function(url, mediaHandler, excludedSites) {\n        debugger;\n        var success = false;\n",
      "target_code": "    addResource: function(url, mediaHandler, excludedSites) {\n        var success = false;\n",
      "predection": "addResource: function(url, mediaHandler, excludedSites) { var success = false;",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "      let _t = this\n      debugger\n      let node = event.item\n",
      "target_code": "      let _t = this\n      let node = event.item\n",
      "predection": "let _t = this let node = event.item",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "        return function updateFromReturn(response) {\n            debugger;\n            if (response !== \"deleteParameter\") {\n",
      "target_code": "        return function updateFromReturn(response) {\n            if (response !== \"deleteParameter\") {\n",
      "predection": "return function updateFromReturn(response) { if (response!== \"deleteParameter\") {",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "        dojo.forEach(options, function(option) {\n            debugger;\n            if (option.mobile != isMobile) return;            \n",
      "target_code": "        dojo.forEach(options, function(option) {\n            if (option.mobile != isMobile) return;            \n",
      "predection": "dojo.forEach(options, function(option) { if (option.mobile!= isMobile) return;",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "\n      debugger;\n      expect(prioritize(config)).to.eql([\n",
      "target_code": "\n      expect(prioritize(config)).to.eql([\n",
      "predection": "expect(prioritize(config)).to.eql([",
      "error id": "no-debugger",
      "correct": "True"
   },
   {
      "source_code": "\t\tif (aIndices.length === 1 || bIndices.length === 1\n\t\t\t&& !f instanceof morpheus.FisherExact) {\n\t\t\tf = morpheus.FoldChange;\n",
      "target_code": "\t\tif (aIndices.length === 1 || bIndices.length === 1\n\t\t\t&& !(f instanceof morpheus.FisherExact)) {\n\t\t\tf = morpheus.FoldChange;\n",
      "predection": "if (aIndices.length === 1 || bIndices.length === 1 &&!(f instanceof morpheus.FisherExact)) { f = morpheus.FoldChange;",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "        return function tooltip(chart) {\n            if (!chart instanceof Chartist.Line || !chart instanceof Chartist.Bar) {\n                return;\n",
      "target_code": "        return function tooltip(chart) {\n            if (!(chart instanceof Chartist.Line) || !(chart instanceof Chartist.Bar)) {\n                return;\n",
      "predection": "return function tooltip(chart) { if (!(chart instanceof Chartist.Line) ||!(chart instanceof Chartist.Bar)) { return;",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "\t\tappendTo: function(node) {\n\t\t\tif (! node instanceof DomObject) {\n\t\t\t\tnode = fromDom(node);\n",
      "target_code": "\t\tappendTo: function(node) {\n\t\t\tif (! (node instanceof DomObject)) {\n\t\t\t\tnode = fromDom(node);\n",
      "predection": "appendTo: function(node) { if (!(node instanceof DomObject)) { node = fromDom(node);",
      "error id": "no-unsafe-negation",
      "correct": "False"
   },
   {
      "source_code": "    Console.prototype.editBackspace = function() {\n        if (!this instanceof Console) return;\n\n",
      "target_code": "    Console.prototype.editBackspace = function() {\n        if (!(this instanceof Console)) return;\n\n",
      "predection": "Console.prototype.editBackspace = function() { if (!(this instanceof Console)) return;",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "  var selectedMetric = $(\"#chart-metrics-select\").find(\":selected\").val();\n  if (!selectedMetric || !selectedMetric in chartMetrics) {\n      alert(\"WARNING: no metric selected. Defaulting to 'carbon'\");\n",
      "target_code": "  var selectedMetric = $(\"#chart-metrics-select\").find(\":selected\").val();\n  if (!selectedMetric || !(selectedMetric in chartMetrics)) {\n      alert(\"WARNING: no metric selected. Defaulting to 'carbon'\");\n",
      "predection": "var selectedMetric = $(\"#chart-metrics-select\").find(\":selected\").val(); if (!(selectedMetric ||!(selectedMetric in chartMetrics)) { alert(\"WARNING: no metric selected. Defaulting to 'carbon'\");",
      "error id": "no-unsafe-negation",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\t\t\t$this.data('suggest', createSuggest(this, suggestion));\n\t\t\t\t\t\t} else if (data && !arg1 in data) {\n\t\t\t\t\t\t\t$this.data('suggest', $.extend(data, createSuggest(this, suggestion)));\n",
      "target_code": "\t\t\t\t\t\t\t$this.data('suggest', createSuggest(this, suggestion));\n\t\t\t\t\t\t} else if (data && !(arg1 in data)) {\n\t\t\t\t\t\t\t$this.data('suggest', $.extend(data, createSuggest(this, suggestion)));\n",
      "predection": "$this.data('suggest', createSuggest(this, suggestion)); } else if (!(arg1 in data)) { $this.data('suggest', $.extend(data, createSuggest(this, suggestion)));",
      "error id": "no-unsafe-negation",
      "correct": "False"
   },
   {
      "source_code": "\n            if(!files || !window.FormData || !'withCredentials' in new XMLHttpRequest()) {\n                form.parentNode.submit();\n",
      "target_code": "\n            if(!files || !window.FormData || !('withCredentials' in new XMLHttpRequest())) {\n                form.parentNode.submit();\n",
      "predection": "if(!files ||!window.FormData ||!('withCredentials' in new XMLHttpRequest())) { form.parentNode.submit();",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "    return function (obj) {\n      if (!obj instanceof Object) {\n        throw new Error(obj + ' should be an object');\n      }\n",
      "target_code": "    return function (obj) {\n      if (!_.isObject(obj)) {\n        throw new Error('LabelUtil expects an object');\n      }\n",
      "predection": "return function (obj) { if (!(obj instanceof Object)) { throw new Error(obj +'should be an object'); }",
      "error id": "no-unsafe-negation",
      "correct": "False"
   },
   {
      "source_code": "function getRelativeStep(link, type) {\n  if (!link instanceof Link) {\n    console.error('function getRelativeStep params error');\n",
      "target_code": "function getRelativeStep(link, type) {\n  if (!(link instanceof Link)) {\n    console.error('function getRelativeStep params error');\n",
      "predection": "function getRelativeStep(link, type) { if (!(link instanceof Link)) { console.error('function getRelativeStep params error');",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "  getRegionView: function(regionName) {\n    if (!regionName in this.regions) {\n      throw new Error('Undefined region `' + regionName + '` is specified');\n",
      "target_code": "  getRegionView: function(regionName) {\n    if (!(regionName in this.regions)) {\n      throw new Error('Undefined region `' + regionName + '` is specified');\n",
      "predection": "getRegionView: function(regionName) { if (!(regionName in this.regions)) { throw new Error('Undefined region'+ regionName +'is specified');",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "\n    if (!'PaymentRequest' in window) {\n      processPayment(this._cart)\n",
      "target_code": "\n    if (hasPaymentRequest()) {\n      processPayment(this._cart)\n",
      "predection": "if (!('PaymentRequest' in window)) { processPayment(this._cart)",
      "error id": "no-unsafe-negation",
      "correct": "False"
   },
   {
      "source_code": "      hack = \"br\"\n    else if (!lastChild instanceof TextViewDesc)\n      hack = \"text\"\n",
      "target_code": "      hack = \"br\"\n    else if (!(lastChild instanceof TextViewDesc))\n      hack = \"text\"\n",
      "predection": "hack = \"br\" else if (!(lastChild instanceof TextViewDesc)) hack = \"text\"",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "    \n    const entity = keys.map(k => normalized[k])[0];\n    delete entity.__v;\n    if (method === 'PUT' && !'_id' in entity) {\n      throw new Error('Tried to PUT but entity has no _id attribute');\n    }\n",
      "target_code": "    \n    const entity = keys.map(k => normalized[k])[0]\n    delete entity.__v\n    if (method === 'PUT' && !('_id' in entity)) {\n      throw new Error('Tried to PUT but entity has no _id attribute')\n    }\n",
      "predection": "const entity = keys.map(k => normalized[k])[0]; delete entity.__v; if (method === 'PUT' &&!('_id' in entity)) { throw new Error('Tried to PUT but entity has no _id attribute'); }",
      "error id": "no-unsafe-negation",
      "correct": "False"
   },
   {
      "source_code": "    var testElem = document.createElement('div');\n    if (!'onwheel' in testElem) {\n      \n",
      "target_code": "    var testElem = document.createElement('div');\n    if (!('onwheel' in testElem)) {\n      \n",
      "predection": "var testElem = document.createElement('div'); if (!('onwheel' in testElem)) {",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "\n        if (!this instanceof $.imgAreaSelect) {\n            options.onSelectChange(img, getSelection());\n",
      "target_code": "\n        if (!(this instanceof $.imgAreaSelect)) {\n            options.onSelectChange(img, getSelection());\n",
      "predection": "if (!(this instanceof $.imgAreaSelect)) { options.onSelectChange(img, getSelection());",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "      return this.getMarkByIds_raw(ids, slide).then(x=>{\n        if (!urlvar in getUrlVars()){\n          return x\n",
      "target_code": "      return this.getMarkByIds_raw(ids, slide).then(x=>{\n        if (!(urlvar in getUrlVars())){\n          return x\n",
      "predection": "return this.getMarkByIds_raw(ids, slide).then(x=> { if (!(urlvar in getUrlVars())) { return x",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "\n    if ( ! type in handlers[channel] )\n      handlers[channel][type] = [];\n",
      "target_code": "\n    if ( ! ( type in handlers[channel] ) )\n      handlers[channel][type] = [];\n",
      "predection": "if (! ( type in handlers[channel] ) ) handlers[channel][type] = [];",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\tif (result && typeof result.then === \"function\") {\n\t\t\t\t\tpipe(result, promise);\n\t\t\t\t} else if (!result instanceof Error) {\n\t\t\t\t\tchild.resolve(result);\n",
      "target_code": "\t\t\t\tif (result && typeof result.then === \"function\") {\n\t\t\t\t\tpipe(result, child);\n\t\t\t\t} else if (!(result instanceof Error)) {\n\t\t\t\t\tchild.resolve(result);\n",
      "predection": "if (result && typeof result.then === \"function\") { pipe(result, child); } else if (!(result instanceof Error)) { child.resolve(result);",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "        \n        if(typeof value === 'object' && !value instanceof Array) {\n          \n",
      "target_code": "        \n        if(typeof value === 'object' && !(value instanceof Array)) {\n          \n",
      "predection": "if(typeof value === 'object' &&!(value instanceof Array)) {",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "  if (err != null) {\n    if (!err instanceof Error) {\n      err = new Error(String(err))\n",
      "target_code": "  if (err != null) {\n    if (!(err instanceof Error)) {\n      err = new Error(String(err))\n",
      "predection": "if (err!= null) { if (!(err instanceof Error)) { err = new Error(String(err))",
      "error id": "no-unsafe-negation",
      "correct": "True"
   },
   {
      "source_code": "    case 1:\n      const tag = el.nodeName.toLowerCase();\n      return ('<' + tag).concat(\n        el.attributes.length ?\n",
      "target_code": "    case 1:\n      return ('<' + el.nodeName).concat(\n        el.attributes.length ?\n",
      "predection": "case 1: { const tag = el.nodeName.toLowerCase(); return ('' + tag).concat( el.attributes.length?",
      "error id": "no-case-declarations",
      "correct": "False"
   },
   {
      "source_code": "      ]\n    case SHOW_NEXT_SECTION:\n      let b = state.slice()\n      b[b.length - 1] += action.increment\n",
      "target_code": "      ]\n    case SHOW_NEXT_SECTION: {\n      const b = state.slice()\n      b[b.length - 1] += action.increment\n",
      "predection": "] case SHOW_NEXT_SECTION: { let b = state.slice() b[b.length - 1] += action.increment",
      "error id": "no-case-declarations",
      "correct": "False"
   },
   {
      "source_code": "\t\treturn state.set('showDownloadsSince', Date.now())\n\tcase constants.SET_SEARCH_TEXT:\n\t\tconst results = searchFiles(state.get('workingDirectoryFiles'), action.text, state.get('path'))\n\t\treturn state.set('searchResults', results)\n",
      "target_code": "\t\treturn state.set('showDownloadsSince', Date.now())\n\tcase constants.SET_SEARCH_TEXT: {\n\t\tconst results = searchFiles(state.get('workingDirectoryFiles'), action.text, state.get('path'))\n\t\treturn state.set('searchResults', results)\n",
      "predection": "return state.set('showDownloadsSince', Date.now()) case constants.SET_SEARCH_TEXT: { const results = searchFiles(state.get('workingDirectoryFiles'), action.text, state.get('path')) return state.set('searchResults', results)",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "      };\n\n    case INSERT_MEASURE:\n      const lastMeasure = state.measures[state.measures.length - 1];\n\n      return {\n",
      "target_code": "      };\n\n    case INSERT_MEASURE: {\n      const lastMeasure = state.measures[state.measures.length - 1];\n\n      return {\n",
      "predection": "} ; case INSERT_MEASURE: { const lastMeasure = state.measures[state.measures.length - 1]; return {",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "\n                let scPos = pos;\n                alignment.scLengthOnRef += c.len;\n",
      "target_code": "\n                scPos = pos;\n                alignment.scLengthOnRef += c.len;\n",
      "predection": "scPos = pos; alignment.scLengthOnRef += c.len;",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "\tswitch (action.type) {\n\tcase C.INCREMENT_COOKIE_DELETED_COUNTER:\n\t\tconst incrementBy = action.payload === undefined ? 1 : action.payload;\n\t\treturn state + incrementBy;\n",
      "target_code": "\tswitch (action.type) {\n\tcase C.INCREMENT_COOKIE_DELETED_COUNTER: {\n\t\tconst incrementBy = action.payload === undefined ? 1 : action.payload;\n\t\treturn state + incrementBy;\n",
      "predection": "switch (action.type) { case C.INCREMENT_COOKIE_DELETED_COUNTER: { const incrementBy = action.payload === undefined? 1 : action.payload; return state + incrementBy;",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "      break\n    default:\n      const villager = bot.openVillager(e)\n      villager.once('ready', () => {\n",
      "target_code": "      break\n    default: {\n      const villager = bot.openVillager(e)\n      villager.once('ready', () => {\n",
      "predection": "break default: { const villager = bot.openVillager(e) villager.once('ready', () => {",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\t\tlet bytes = Math.round(amount * 1e9);\n\t\t\t\t\t\tlet tokens = conversion.convertCurrencyToTokens(amount, 'GBYTE');\n\t\t\t\t\t\tif (tokens === 0)\n",
      "target_code": "\t\t\t\t\t\tlet bytes = Math.round(amount * 1e9);\n\t\t\t\t\t\ttokens = conversion.convertCurrencyToTokens(amount, 'GBYTE');\n\t\t\t\t\t\tif (tokens === 0)\n",
      "predection": "let bytes = Math.round(amount * 1e9); tokens = conversion.convertCurrencyToTokens(amount, 'GBYTE'); if (tokens === 0)",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "            case \"filter\":\n                let activeFilters = [];\n                if (e.target.dataset.value == \"ALL\") {\n",
      "target_code": "            case \"filter\":\n                var activeFilters = [];\n                if (e.target.dataset.value == \"ALL\") {\n",
      "predection": "case \"filter\": activeFilters = []; if (e.target.dataset.value == \"ALL\") {",
      "error id": "no-case-declarations",
      "correct": "False"
   },
   {
      "source_code": "  switch (action.type) {\n    case 'SET_LOCALE':\n      const apps = state.apps && state.apps.apps\n      useLang(apps, action.lang)\n",
      "target_code": "  switch (action.type) {\n    case 'SET_LOCALE': {\n      const apps = state.apps && state.apps.apps\n      useLang(apps, action.lang)\n",
      "predection": "switch (action.type) { case 'SET_LOCALE': { const apps = state.apps && state.apps.apps useLang(apps, action.lang)",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "\n    case DELETE_NOTE:\n      const measure = measures[measureIndex];\n      const note = measure.notes[noteIndex];\n",
      "target_code": "\n    case DELETE_NOTE: {\n      const measure = measures[measureIndex];\n      const note = measure.notes[noteIndex];\n",
      "predection": "case DELETE_NOTE: { const measure = measures[measureIndex]; const note = measure.notes[noteIndex];",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "            let tfsToFind = this.tfs;\n            let foundByTfs = results.profiles.filter(function (i) {\n               return i.URL === tfsToFind;\n            });\n",
      "target_code": "            let tfsToFind = this.tfs;\n            let foundByTfs = results.profiles.filter(function (i) {\n               return i.URL.toLowerCase() === tfsToFind.toLowerCase();\n            });\n",
      "predection": "let tfsToFind = this.tfs; let foundByTfs = results.profiles.filter(function (i) { return i.URL === tfsToFind; } );",
      "error id": "no-case-declarations",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\n\t\t\tlet splitDescription = marketData.description.split(CATEGORICAL_OUTCOMES_SEPARATOR);\n\t\t\tif (splitDescription.length < 2) {\n",
      "target_code": "\t\t\t\n\t\t\tsplitDescription = marketData.description.split(CATEGORICAL_OUTCOMES_SEPARATOR);\n\t\t\tif (splitDescription.length < 2) {\n",
      "predection": "splitDescription = marketData.description.split(CATEGORICAL_OUTCOMES_SEPARATOR); if (splitDescription.length  2) {",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "        break;\n      case 'string':\n        const newValue = FormioUtils.interpolate(action.text, {\n          data,\n",
      "target_code": "        break;\n      case 'string': {\n        const newValue = FormioUtils.interpolate(action.text, {\n          data,\n",
      "predection": "break; case'string': { const newValue = FormioUtils.interpolate(action.text, { data,",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "    }\n    case UPDATE_SEGMENTS:\n      const immediate = action.immediate || state.immediateRemoval\n      return {\n",
      "target_code": "    }\n    case UPDATE_SEGMENTS: {\n      const immediate = action.immediate || state.immediateRemoval\n      return {\n",
      "predection": "} case UPDATE_SEGMENTS: { const immediate = action.immediate || state.immediateRemoval return {",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "            case TABLE_HIGHLIGHT:\n                const {tbl_id, highlightedRow}= action.payload;\n                dispatchModifyCustomField(tbl_id, {highlightedRow});\n                break;\n",
      "target_code": "            case TABLE_HIGHLIGHT:\n            case TABLE_UPDATE:\n                dispatchModifyCustomField(tbl_id, {highlightedRow:action.payload.highlightedRow});\n                break;\n",
      "predection": "case TABLE_HIGHLIGHT: dispatchModifyCustomField(action.payload); const { tbl_id, highlightedRow } = action.payload; break;",
      "error id": "no-case-declarations",
      "correct": "False"
   },
   {
      "source_code": "  switch (tree.type) {\n    case LITERAL_PROPERTY_NAME:\n      let token = tree.literalToken;\n      if (token.isKeyword() || token.type === IDENTIFIER)\n",
      "target_code": "  switch (tree.type) {\n    case LITERAL_PROPERTY_NAME: {\n      let token = tree.literalToken;\n      if (token.isKeyword() || token.type === IDENTIFIER)\n",
      "predection": "switch (tree.type) { case LITERAL_PROPERTY_NAME: { let token = tree.literalToken; if (token.isKeyword() || token.type === IDENTIFIER)",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "\n      case Actions.REMOVE_PRODUCT_FROM_LIST:\n        idArray = [...state.items]\n        let index = idArray.indexOf(action.id);  \n        if(index != -1) {\n",
      "target_code": "\n      case Actions.REMOVE_PRODUCT_FROM_LIST: {\n        let idArray = [...state.items]\n        let index = idArray.indexOf(action.id);  \n        if(index != -1) {\n",
      "predection": "case Actions.REMOVE_PRODUCT_FROM_LIST: idArray = [...state.items] index = idArray.indexOf(action.id); if(index!= -1) {",
      "error id": "no-case-declarations",
      "correct": "False"
   },
   {
      "source_code": "          case 'oneToManyMorph':\n          case 'manyToManyMorph':\n            const transformToArrayID = (array) => {\n              if (_.isArray(array)) {\n",
      "target_code": "          case 'oneToManyMorph':\n          case 'manyToManyMorph': {\n            const transformToArrayID = (array) => {\n              if (_.isArray(array)) {\n",
      "predection": "case 'oneToManyMorph': case'manyToManyMorph': { const transformToArrayID = (array) => { if (_.isArray(array)) {",
      "error id": "no-case-declarations",
      "correct": "True"
   },
   {
      "source_code": "                case BATTLE_ACTION_TYPES.dmgDealt:\n                    let dmg = parseInt(entry.value);\n                    if (entry.concurrent_attack_count > 0) { \n                        actionData.echoDmg += dmg;\n",
      "target_code": "                case BATTLE_ACTION_TYPES.dmgDealt:\n                    var dmg = parseInt(entry.value);\n                    if (entry.concurrent_attack_count > 0) { \n                        actionData.echoDmg += dmg;\n",
      "predection": "case BATTLE_ACTION_TYPES.dmgDealt: dmg = parseInt(entry.value); if (entry.concurrent_attack_count > 0) { actionData.echoDmg += dmg;",
      "error id": "no-case-declarations",
      "correct": "False"
   },
   {
      "source_code": "    else {\n\tdata = data\n\twhile(data) {\n",
      "target_code": "    else {\n\tvar buf;\n\twhile(data) {\n",
      "predection": "else { while(data) {",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "                    } else {\n                        value[k] = value[k];\n                        delete value[k];\n",
      "target_code": "                    } else {\n                        value[v] = value[k];\n                        delete value[k];\n",
      "predection": "} else { delete value[k];",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "const mqtt = require('mqtt')\nopt.broker = opt.broker\nopt.subbroker = opt.subbroker || opt.broker\n",
      "target_code": "const mqtt = require('mqtt')\nopt.subbroker = opt.subbroker || opt.broker\n",
      "predection": "const mqtt = require('mqtt') opt.broker = opt.broker opt.subbroker = opt.subbroker || opt.broker",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "  }\n\n  options.loginURLForamter = options.loginURLForamter;\n  options.getUser = options.getUser;\n",
      "target_code": "  }\n\n  options.loginURLFormater = options.loginURLFormater || options.loginURLForamter;\n  options.getUser = options.getUser;\n",
      "predection": "} options.getUser = options.getUser;",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "\t\t};\n\n\t\tmongoose.Query.prototype.limit = function (limit) {\n\t\t\tlimit = limit;\n\t\t\treturn this;\n",
      "target_code": "\t\t};\n\n\t\tmongoose.Query.prototype.limit = function (input) {\n\t\t\tlimit = input;\n\t\t\treturn this;\n",
      "predection": "} ; mongoose.Query.prototype.limit = function () { return this;",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "\n\t\tmongoose.Query.prototype.skip = function (skip) {\n\t\t\tskip = skip;\n\t\t\treturn this;\n",
      "target_code": "\n\t\tmongoose.Query.prototype.skip = function (input) {\n\t\t\tskip = input;\n\t\t\treturn this;\n",
      "predection": "mongoose.Query.prototype.skip = function () { return this;",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "    \n    if (!this.vertexBuffer_) {\n        gl_ = gl_;\n    }\n",
      "target_code": "    \n    if (!this.vertexBuffer) {\n        gl = gl;\n    }\n",
      "predection": "if (!this.vertexBuffer_) { }",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "            xhr.headers = obj.headers;\n            xhr.mimeType = xhr.mimeType;\n            xhr.data = data;\n",
      "target_code": "            xhr.headers = obj.headers;\n            xhr.mimeType = obj.mimeType;\n            xhr.data = data;\n",
      "predection": "xhr.headers = obj.headers; xhr.data = data;",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "        sessionClient.user = client.user\n        sessionClient.beforeSend = sessionClient.beforeSend\n        sessionClient.logger(client._logger)\n",
      "target_code": "        sessionClient.user = client.user\n        sessionClient.logger(client._logger)\n",
      "predection": "sessionClient.user = client.user sessionClient.logger(client._logger)",
      "error id": "no-self-assign",
      "correct": "True"
   },
   {
      "source_code": "    if (obj.tense !== '--') {\n      obj.tense = obj.tense;\n    }\n",
      "target_code": "    if (obj.tense !== '--') {\n      res.tense = obj.tense;\n    }\n",
      "predection": "if (obj.tense!== '--') { return obj.tense; }",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "     if (getStore('token')){\n         userId =  userId\n     }\n",
      "target_code": "     if (getStore('token')){\n         userId =  userId()\n     }\n",
      "predection": "if (getStore('token')) { userId = token.userId }",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "de.biancoroyal.modbus.core.client.Stately = de.biancoroyal.modbus.core.client.Stately || require('stately.js') \nde.biancoroyal.modbus.core.client.stateLogEnabled = de.biancoroyal.modbus.core.client.stateLogEnabled \n\n",
      "target_code": "de.biancoroyal.modbus.core.client.Stately = de.biancoroyal.modbus.core.client.Stately || require('stately.js') \nde.biancoroyal.modbus.core.client.stateLogEnabled = de.biancoroyal.modbus.core.client.stateLogEnabled || false \n\n",
      "predection": "de.biancoroyal.modbus.core.client.Stately = de.biancoroyal.modbus.core.client.Stately || require('stately.js')",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "  }\n}\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\n",
      "target_code": "}\n\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\n",
      "predection": "} } CustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "\t\n\toptions.port = options.port;\n\toptions.ssl = options.ssl || false;\n",
      "target_code": "\t\n\t\n\toptions.ssl = options.ssl || false;\n",
      "predection": "options.ssl = options.ssl || false;",
      "error id": "no-self-assign",
      "correct": "True"
   },
   {
      "source_code": "\nwayfarer.path = wayfarer.path\nwayfarer.route = wayfarer.path\n",
      "target_code": "\nwayfarer.path = wayfarer.on\nwayfarer.route = wayfarer.on\n",
      "predection": "wayfarer.route = wayfarer.path",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "var window = require(__dirname + \"/../../lib/browser\").windowAugmentation(dom);\nvar document = window.document = window.document;\nvar location = window.location = window.location;\nvar navigator = window.navigator = { userAgent: \"node-js\" };\n",
      "target_code": "var window = require(__dirname + \"/../../lib/browser\").windowAugmentation(dom);\nvar document = window.document;\nvar location = window.location;\nvar navigator = window.navigator = { userAgent: \"node-js\" };\n",
      "predection": "var window = require(__dirname + \"/../../lib/browser\").windowAugmentation(dom); var navigator = window.navigator = { userAgent: \"node-js\" } ;",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "        parser.setAttribute(\"href\", url);\n        parser.href = parser.href;\n        var isCrossDomain = parser.host !== location.host;\n",
      "target_code": "        parser.setAttribute(\"href\", url);\n        parser.href = String(parser.href);\n        var isCrossDomain = parser.host !== location.host;\n",
      "predection": "parser.setAttribute(\"href\", url); var isCrossDomain = parser.host!== location.host;",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "        };\n\n        readFile = readFile;\n\n        exec = function (string) {\n",
      "target_code": "        };\n\n        readFile = requirejsEnvUtil.readFile;\n\n        exec = function (string) {\n",
      "predection": "} ; exec = function (string) {",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "function getRulesFromPlugins(type, req, res, plugins, callback) {\n  type = type;\n  loadPlugins(plugins, function(ports) {\n",
      "target_code": "function getRulesFromPlugins(type, req, res, plugins, callback) {\n  loadPlugins(plugins, function(ports) {\n",
      "predection": "function getRulesFromPlugins(type, req, res, plugins, callback) { loadPlugins(plugins, function(ports) {",
      "error id": "no-self-assign",
      "correct": "True"
   },
   {
      "source_code": "  if (v === 0) return v\n  if (css.search(/EM/i) > 0) {\n    v = v \n  } else\n",
      "target_code": "  if (v === 0) return v\n  if (css.search(/EM/i) > 0) { \n    \n  } else\n",
      "predection": "if (v === 0) return v if (css.search(/EM/i) > 0) { return v } else",
      "error id": "no-self-assign",
      "correct": "False"
   },
   {
      "source_code": "    generateInitialViewActivities();\n    process.exit();\n  });\n",
      "target_code": "    generateInitialViewActivities();\n    \n  });\n",
      "predection": "generateInitialViewActivities(); } );",
      "error id": "no-process-exit",
      "correct": "True"
   },
   {
      "source_code": "          grunt.log.error('Another server is already running on port', options.port);\n          process.exit(1);\n        }\n",
      "target_code": "          grunt.log.error('Another server is already running on port', options.port);\n          process.exit(1); \n        }\n",
      "predection": "grunt.log.error('Another server is already running on port', options.port); throw new Error('Another server is already running on port'); }",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "    send({ subject: 'close' });\n    process.exit();\n}\n",
      "target_code": "    send({ subject: 'close' });\n}\n",
      "predection": "send( { subject: 'close' } ); }",
      "error id": "no-process-exit",
      "correct": "True"
   },
   {
      "source_code": "\t\t\t\t\tbc.log(\"inputUnknownAction\", [\"action\", action]);\n\t\t\t\t\tprocess.exit(0);\n\n\t\t\t}\n",
      "target_code": "\t\t\t\t\tbc.log(\"inputUnknownAction\", [\"action\", action]);\n\t\t\t}\n",
      "predection": "bc.log(\"inputUnknownAction\", [\"action\", action]); }",
      "error id": "no-process-exit",
      "correct": "True"
   },
   {
      "source_code": "        process.stdout.write(`v${VERSION}\\n`);\n        process.on('exit', () => process.exit(0));\n        return;\n",
      "target_code": "        process.stdout.write(`v${VERSION}\\n`);\n        return;\n",
      "predection": "process.stdout.write(v$ { VERSION } \\ n); return;",
      "error id": "no-process-exit",
      "correct": "True"
   },
   {
      "source_code": "    console.log('\u00e2\u0153\u00a8 ping!', new Date());\n    process.exit(0);\n  });\n",
      "target_code": "    console.log('\u00e2\u0153\u00a8 ping!', new Date());\n  });\n",
      "predection": "console.log('\u00e2  ping!', new Date()); } );",
      "error id": "no-process-exit",
      "correct": "True"
   },
   {
      "source_code": "  if (!args.force && helpers.model.modelFileExists(modelPath)) {\n    helpers.model.notifyAboutExistingFile(modelPath);\n    process.exit(1);\n  }\n",
      "target_code": "  if (!args.force && helpers.model.modelFileExists(modelPath)) {\n    helpers.view.notifyAboutExistingFile(modelPath);\n    process.exit(1);\n  }\n",
      "predection": "if (!args.force && helpers.model.modelFileExists(modelPath)) { helpers.model.notifyAboutExistingFile(modelPath); }",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "          if (!KEEP_OPEN) {\n            process.exit(1)\n          }\n",
      "target_code": "          if (!KEEP_OPEN) {\n            error(`Error writing file - ${outputName} : ${err}`)\n          }\n",
      "predection": "if (!KEEP_OPEN) { process.exitCode = 1 }",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "    if (level == 'error') {\n        process.exit(winston.config.syslog.levels[level]);\n    }\n",
      "target_code": "    if (level == 'error') {\n        process.exit(-1);\n    }\n",
      "predection": "if (level == 'error') { process.exit(winston.config.syslog.levels[level]); }",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "        self.logger.error(msg.error);\n        process.exit(0);\n      }\n",
      "target_code": "        self.logger.error(msg.error);\n      }\n",
      "predection": "self.logger.error(msg.error); process.exit(0); }",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "    await msg.edit(':wave: Restarting. Bye!');\n    process.exit(42);\n};\n",
      "target_code": "    await msg.edit(':wave: Restarting. Bye!');\n    bot.shutdown(true);\n};\n",
      "predection": "await msg.edit(':wave: Restarting. Bye!'); } ;",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "  } else {\n    console.error(red('The template file name must be template.[yml|yaml].'));\n    process.exit(-1);\n  }\n",
      "target_code": "  } else {\n    throw new Error(red('The template file name must be template.[yml|yaml].'));\n  }\n",
      "predection": "} else { throw new Error(red('The template file name must be template.[yml|yaml].')); }",
      "error id": "no-process-exit",
      "correct": "True"
   },
   {
      "source_code": "      .result(workUID, cli.network, cli.save, cli.watch)\n      .catch(() => process.exit(1)));\n\n",
      "target_code": "      .result(workUID, cli.network, cli.save, cli.watch)\n      .catch(handleError('server')));\n\n",
      "predection": ".result(workUID, cli.network, cli.save, cli.watch).catch(exit);",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "show(repo, pr, githubToken)\r\n    .catch(x => { console.error(x); process.exit(1); });\n",
      "target_code": "show(repo, pr, githubToken)\r\n    .catch(x => { console.error(x); });\n",
      "predection": "show(repo, pr, githubToken).catch(x => { console.error(x); } );",
      "error id": "no-process-exit",
      "correct": "True"
   },
   {
      "source_code": "                  { error: err });\n        process.exit(1);\n    }\n",
      "target_code": "                  { error: err });\n        return cleanUp(batchId);\n    }\n",
      "predection": "{ error: err } ); }",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "    wrench.copyDirSyncRecursive(path.resolve(projectPath, 'www/res'), path.resolve(appPath, 'assets/res'), function() {});\n    process.exit();\n  });\n",
      "target_code": "    wrench.copyDirSyncRecursive(path.resolve(projectPath, 'www/res'), path.resolve(appPath, 'assets/res'), function() {});\n  });\n",
      "predection": "wrench.copyDirSyncRecursive(path.resolve(projectPath, 'www/res'), path.resolve(appPath, 'assets/res'), function() { } ); } );",
      "error id": "no-process-exit",
      "correct": "True"
   },
   {
      "source_code": "}\n\nif (shouldBuildDll) {\n  process.exit(1);\n}\n",
      "target_code": "  process.exit(1);\n}\n",
      "predection": "} if (shouldBuildDll) { process.exitCode = 1; }",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "      app.run();\n      process.on('SIGINT', () => process.exit(0));\n    } catch (err) {\n",
      "target_code": "      app.run();\n      process.on('SIGINT', () => app.onClose());\n    } catch (err) {\n",
      "predection": "app.run(); } catch (err) {",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "    console.error(`You've already uploaded this HIT to ${opts.endpoint}`)\n    process.exit()\n  } catch(e) {\n\n  }\n",
      "target_code": "    console.error(`You've already uploaded this HIT to ${opts.endpoint}`)\n  }\n",
      "predection": "console.error(You've already uploaded this HIT to $ { opts.endpoint } ) } catch(e) { }",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "\n    process.exit(1);\n  });\n",
      "target_code": "\nrunCLI();\n",
      "predection": "throw new Error(); } );",
      "error id": "no-process-exit",
      "correct": "False"
   },
   {
      "source_code": "\n                function check_and_republish() {\n                    self._worker_pool.acquire((err, channel) => {\n                        channel.checkQueue(message.properties.replyTo, (err, ok) => {\n                            if (err) {\n",
      "target_code": "\nfunction remit (options) {\n",
      "predection": "function check_and_republish() { self._worker_pool.acquire((err, channel) => { channel.checkQueue(message.properties.replyTo, (err, ok) => { if (err) {",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "\n        function initItems(){\n          menuNotReady();\n",
      "target_code": "\n        var initItems = function(){\n          menuNotReady();\n",
      "predection": "var initItems = function() { menuNotReady();",
      "error id": "no-inner-declarations",
      "correct": "True"
   },
   {
      "source_code": "    if (typeof pattern == \"string\") {\n      function cased(str) {return caseInsensitive ? str.toLowerCase() : str;}\n      if (cased(this.string).indexOf(cased(pattern), this.pos) == this.pos) {\n",
      "target_code": "    if (typeof pattern == \"string\") {\n      var cased = function(str) {return caseInsensitive ? str.toLowerCase() : str;};\n      if (cased(this.string).indexOf(cased(pattern), this.pos) == this.pos) {\n",
      "predection": "if (typeof pattern == \"string\") { if (cased(this.string).indexOf(cased(pattern), this.pos) == this.pos) {",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\n\t\t\tif (options.closeByDocument == true) {\n\t\t\t\tfunction onDocumentClick(e) {\n\t\t\t\t\tif ($(e.target).is('.avgrund-overlay, .avgrund-close')) {\n",
      "target_code": "\t\t\t\n\t\t\tfunction onDocumentClick(e) {\n\t\t\t\tif (options.closeByDocument == true) {\n\t\t\t\t\tif ($(e.target).is('.avgrund-overlay, .avgrund-close')) {\n",
      "predection": "if (options.closeByDocument == true) { const onDocumentClick = (e) => { if ($(e.target).is('.avgrund-overlay,.avgrund-close')) {",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "\n            function _svcMgmtRoleCreateInternal() {\n              svcopts.Location = location;\n",
      "target_code": "\n            var _svcMgmtRoleCreateInternal = function () {\n              svcopts.Location = location;\n",
      "predection": "var _svcMgmtRoleCreateInternal = function() { svcopts.Location = location;",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "    var waiting = 1;\n    function finish() {\n      if (--waiting === 0) self.destroy();\n    }\n    this._opposite.once('end', finish);\n",
      "target_code": "    var waiting = 1;\n    this._opposite.once('end', finish);\n",
      "predection": "var waiting = 1; function finish() { if (--waiting === 0) self.destroy(); } this._opposite.once('end', finish);",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "\t\tassert.deepEqual(a, b, msg);\n\t} catch(e) {\n\t\tfunction getId(n){return n && n.attribs.id; }\n\t\te.actual = JSON.stringify(a.map(getId), 0, 2);\n",
      "target_code": "\t\tassert.deepEqual(a, b, msg);\n\t} catch(e){\n\t\te.actual = JSON.stringify(a.map(getId), 0, 2);\n",
      "predection": "assert.deepEqual(a, b, msg); } catch(e) { e.actual = JSON.stringify(a.map(getId), 0, 2);",
      "error id": "no-inner-declarations",
      "correct": "True"
   },
   {
      "source_code": "\n\t\tfunction write(values) {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tvar ok = stream.write(values, 'utf8');\n\t\t\t\tif (ok) {\n",
      "target_code": "\nmodule.exports.data = function (obj) {\n",
      "predection": "function write(values) { return new Promise(function(resolve, reject) { var ok = stream.write(values, 'utf8'); if (ok) {",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "if (__SOCKET__) {\n  function initSocket() {\n    const socket = io('', {path: '/' + __API_PREFIX__ + '/ws', transports: ['polling']});\n",
      "target_code": "if (__SOCKET__) {\n  global.socket = (function initSocket() {\n    const socket = io('', {path: '/' + __API_PREFIX__ + '/ws', transports: ['polling']});\n",
      "predection": "if (__SOCKET__) { const socket = io('', { path: '/' + __API_PREFIX__ + '/ws', transports: ['polling'] } );",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "    var constructor = this.constructor\n    function F(args) {\n      return constructor.apply(this, args)\n",
      "target_code": "    var constructor = this.constructor\n    var F = function(args) {\n      return constructor.apply(this, args)\n",
      "predection": "var constructor = this.constructor var F = function(args) { return constructor.apply(this, args)",
      "error id": "no-inner-declarations",
      "correct": "True"
   },
   {
      "source_code": "  if (!computeStyle(node.parentNode).whiteSpace.startsWith('pre')) {\n    function replacer(collapse, match) {\n      match = match.replace(/[^\\u00a0]/g, '');    \n",
      "target_code": "  if (!computeStyle(node.parentNode).whiteSpace.startsWith('pre')) {\n    \n    let replacer = function(collapse, match) {\n      match = match.replace(/[^\\u00a0]/g, '');    \n",
      "predection": "if (!computeStyle(node.parentNode).whiteSpace.startsWith('pre')) { var replacer = function(collapse, match) { match = match.replace(/[ ^ \\ u00a0]/g, '');",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "\n  function getCookie(cookie, cname) {\n    cookie = cookie || \"\"\n",
      "target_code": "\n  $tw.Bob.getCookie = function(cookie, cname) {\n    cookie = cookie || \"\"\n",
      "predection": "var getCookie = function(cookie, cname) { cookie = cookie || \"\"",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "\n      function checkForContext(model) {\n        if(context) {\n          if(typeof context === 'string' && typeKey === context) {\n            \n",
      "target_code": "\n    function checkForContext(model) {\n      if(context) {\n        if(typeof context === 'string' && typeKey === context) {\n          \n",
      "predection": "function checkForContext(model) { if(context) { if(typeof context ==='string' && typeKey === context) {",
      "error id": "no-inner-declarations",
      "correct": "True"
   },
   {
      "source_code": "        var self = this\n        function checkDelete (d) {\n          if (d.length == null) {\n",
      "target_code": "        var self = this\n        var checkDelete = function checkDelete (d) {\n          if (d.length == null) {\n",
      "predection": "var self = this var checkDelete = function (d) { if (d.length == null) {",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "    const transformer = compose.createTransform(comalArgs);\n\n    function transform(file, opts, cb) {\n      compose.execFile(transformer, file, opts, cb);\n",
      "target_code": "    const transformer = compose.createTransform(comalArgs);\n\n    const transform = function transform(file, opts, cb) {\n      compose.execFile(transformer, file, opts, cb);\n",
      "predection": "const transformer = compose.createTransform(comalArgs); const transform = function(file, opts, cb) { compose.execFile(transformer, file, opts, cb);",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "\n      function tabRestored() {\n        clearTimeout(timeoutID);\n",
      "target_code": "\n      var tabRestored = function() {\n        clearTimeout(timeoutID);\n",
      "predection": "var tabRestored = function() { clearTimeout(timeoutID);",
      "error id": "no-inner-declarations",
      "correct": "True"
   },
   {
      "source_code": "\n    async function finished () {\n      await client.destroy()\n      const IDsString = JSON.stringify(messageIDs)\n      console.log(IDsString)\n",
      "target_code": "\nasync function finished (messageIDs) {\n  await client.destroy()\n  const IDsString = JSON.stringify(messageIDs)\n  console.log(IDsString)\n",
      "predection": "async function finished () { await client.destroy() const IDsString = JSON.stringify(messageIDs) console.log(IDsString)",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "\n    function measure(viewport) {\n      const rect = coverEl.getBoundingClientRect();\n",
      "target_code": "\n    subscribe(function _checkIfCoverPropertiesShouldBeUpdated(client) {\n      const rect = coverEl.getBoundingClientRect();\n",
      "predection": "var measure = function(viewport) { const rect = coverEl.getBoundingClientRect();",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "      if (typeof config.facetsCustomizer === 'function') {\n        function add(property, label) {\n          derivedFacets.push({value: property, label: label ? label : localize(property)});\n",
      "target_code": "      if (typeof config.facetsCustomizer === 'function') {\n        var add = function(property, label) {\n          derivedFacets.push({value: property, label: label ? label : localize(property)});\n",
      "predection": "if (typeof config.facetsCustomizer === 'function') { derivedFacets.push( { value: property, label: label? label : localize(property) } );",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "\n      function removeReveal() {\n        helper.removeClass(snackBarToRemove, \"reveal\");\n",
      "target_code": "\n      var _removeReveal = function() {\n        helper.removeClass(snackBarToRemove, \"reveal\");\n",
      "predection": "var removeReveal = function() { helper.removeClass(snackBarToRemove, \"reveal\");",
      "error id": "no-inner-declarations",
      "correct": "False"
   },
   {
      "source_code": "   var result = 1 ;\n   for(i=number; i>1; i++){\n     result *= i;\n",
      "target_code": "   var result = 1 ;\n   for(i=number; i>1; i--){\n     result *= i;\n",
      "predection": "var result = 1 ; for(var i=number; i>1; i++) { result *= i;",
      "error id": "for-direction",
      "correct": "False"
   },
   {
      "source_code": "\t\t\tlet nodeError = 0\n\t\t\tfor (let k = inputErrors.length - 1; k <= 0; k--) {\n\t\t\t\tlet weight = nextLayer[k][j]\n",
      "target_code": "\t\t\tlet nodeError = 0\n\t\t\tfor (let k = nextLayer.length - 1; k >= 0; k--) {\n\t\t\t\tlet weight = nextLayer[k][j]\n",
      "predection": "let nodeError = 0 for (let k = inputErrors.length - 1; k >= 0; k--) { let weight = nextLayer[k][j]",
      "error id": "for-direction",
      "correct": "False"
   },
   {
      "source_code": "              children = wysihtml5.dom.unwrap(content.firstChild);\n              for (var c = 0, cmax = children.length; c > cmax; c++) {\n                fragment.appendChild(children[c]);\n",
      "target_code": "              children = wysihtml5.dom.unwrap(content.firstChild);\n              for (var c = 0, cmax = children.length; c < cmax; c++) {\n                fragment.appendChild(children[c]);\n",
      "predection": "children = wysihtml5.dom.unwrap(content.firstChild); for (var c = 0, cmax = children.length; c > cmax; c++) { fragment.appendChild(children[c]);",
      "error id": "for-direction",
      "correct": "False"
   },
   {
      "source_code": "  let blocklist = [];\n\n  for (let i = start; i >= end; i++) {\n    blocklist.push(i);\n",
      "target_code": "  let blocklist = [];\n\n  for (let i = start; i >= end; i--) {\n    blocklist.push(i);\n",
      "predection": "let blocklist = []; for (let i = start; i >= end; i++) { blocklist.push(i);",
      "error id": "for-direction",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t\t\t\n\t\t\t\t\tfor (var j = i - 1; j >= 0; j++) {\n\t\t\t\t\t\tif (matches(text, j, '-->')) {\n",
      "target_code": "\t\t\t\t\t\n\t\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\tif (matches(text, j, '-->')) {\n",
      "predection": "for (var j = i - 1; j >= 0; j--) { if (matches(text, j, '-->')) {",
      "error id": "for-direction",
      "correct": "True"
   },
   {
      "source_code": "\tassert.ok( isNaN( Math.sign('--3') ) , \"If x is NaN<'--3'>, the result is NaN.\");\n\tassert.ok( Math.sign(-0) === -0 , \"If x is -0, the result is -0.\");\n\tassert.ok( Math.sign(+0) === +0 , \"If x is +0, the result is +0.\");\n",
      "target_code": "\tassert.ok( isNaN( Math.sign('--3') ) , \"If x is NaN<'--3'>, the result is NaN.\");\n\tassert.ok( isNegativeZero( Math.sign(-0) ) , \"If x is -0, the result is -0.\");\n\tassert.ok( Math.sign(+0) === +0 , \"If x is +0, the result is +0.\");\n",
      "predection": "assert.ok( isNaN( Math.sign('--3') ), \"If x is NaN'--3'>, the result is NaN.\"); assert.ok( Math.sign(-0) === 0, \"If x is -0, the result is -0.\"); assert.ok( Math.sign(+0) === +0, \"If x is +0, the result is +0.\");",
      "error id": "no-compare-neg-zero",
      "correct": "False"
   },
   {
      "source_code": "        }\n\n        if (!object) { return String(object === -0 ? \"-0\" : object); }\n        if (samsam.isElement(object)) { return ascii.element(object); }\n",
      "target_code": "        }\n\n        if (!object) { return String((1/object) === -Infinity ? \"-0\" : object); }\n        if (samsam.isElement(object)) { return ascii.element(object); }\n",
      "predection": "} if (!object) { return String(object === 0? \"-0\" : object); } if (samsam.isElement(object)) { return ascii.element(object); }",
      "error id": "no-compare-neg-zero",
      "correct": "False"
   },
   {
      "source_code": "    ['minuit', 'midi', 'du matin', 'de l\u00e2\u20ac\u2122apr\u00c3\u00a8s-midi', 'du soir', 'du matin']\n  ],\n  [\n    ['min.', 'midi', 'mat.', 'ap.m.', 'soir', 'nuit'], ,\n    ['minuit', 'midi', 'matin', 'apr\u00c3\u00a8s-midi', 'soir', 'nuit']\n",
      "target_code": "    ['minuit', 'midi', 'du matin', 'de l\u00e2\u20ac\u2122apr\u00c3\u00a8s-midi', 'du soir', 'du matin']\n  ],\n  [\n    ['min.', 'midi', 'mat.', 'ap.m.', 'soir', 'nuit'], u,\n    ['minuit', 'midi', 'matin', 'apr\u00c3\u00a8s-midi', 'soir', 'nuit']\n",
      "predection": "['minuit','midi', 'du matin', 'de l\u00e2\u20acTMapr s-midi', 'du soir', 'du matin'] ], [ ['min.','midi','mat.', 'ap.m.','soir', 'nuit'], u, ['minuit','midi','matin', 'apr s-midi','soir', 'nuit']",
      "error id": "no-sparse-arrays",
      "correct": "True"
   },
   {
      "source_code": "\nvar particleShader = [\n, 'precision mediump float;'\n, 'uniform sampler2D texture;'\n, 'uniform vec2 resolution;'\n",
      "target_code": "\nvar particleShader = [\n  'uniform sampler2D texture;'\n, 'uniform vec2 resolution;'\n",
      "predection": "var particleShader = [ 'uniform sampler2D texture;', 'uniform vec2 resolution;'",
      "error id": "no-sparse-arrays",
      "correct": "True"
   },
   {
      "source_code": "            options: {\n                startkey: ['Requested',,],\n                endkey: ['Requested',maxValue,maxValue]\n            },\n",
      "target_code": "            options: {\n                startkey: ['Requested', null, null],\n                endkey: ['Requested', maxValue, maxValue]\n            },\n",
      "predection": "options: { startkey: ['Requested', null, null], endkey: ['Requested', null, null, null] },",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "\n  grunt.registerTask('test', [, 'karma:single' ]);\n  grunt.registerTask('build', [ 'concat' ]);\n",
      "target_code": "\n  grunt.registerTask('build', [ 'concat' ]);\n",
      "predection": "grunt.registerTask('test', [ 'karma:single' ]); grunt.registerTask('build', [ 'concat' ]);",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "\n    tag = (re_tagName.exec(content) || [, \"\"])[1].toLowerCase();\n    if (tag == \"\") { \n        return _return(\"#text\", [doc.createTextNode(content)]);\n    }\n",
      "target_code": "\n    var \n",
      "predection": "tag = (re_tagName.exec(content) || [undefined, \"\"])[1].toLowerCase(); if (tag === \"\") { return _return(\"#text\", [doc.createTextNode(content)]); }",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "        ]\n        , invalid: [\n            '1,234',\n          , 'kr.  -10123'\n",
      "target_code": "        ]\n        , invalid: [\n            '1,234'\n          , 'kr.  -10123'\n",
      "predection": "], invalid: [ '1,234', 'kr. -10123'",
      "error id": "no-sparse-arrays",
      "correct": "True"
   },
   {
      "source_code": "\nexport default [\n  [\n",
      "target_code": "\nexport default [\n  [['\u00e5\u02c6\u00e5\u00a4\u0153', '\u00e6\u00b8\u2026\u00e6\u2122\u00a8', '\u00e6\u0153\u00e6\u2014\u00a9', '\u00e4\u00b8\u00ad\u00e5\u02c6', '\u00e4\u00b8\u2039\u00e6\u2122', '\u00e5\u00a4\u0153\u00e6\u2122\u0161', '\u00e5\u2021\u0152\u00e6\u2122\u00a8'], u, u], u,\n  [\n",
      "predection": "export default [ [['', '', '', '', '', '', '', '', ''], u, u], u, [",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "  themes: ['@docusaurus/theme-live-codeblock'],\n  plugins: [\n    ,\n    [\n",
      "target_code": "  themes: ['@docusaurus/theme-live-codeblock'],\n  plugins: [\n    [\n",
      "predection": "themes: ['@docusaurus/theme-live-codeblock'], plugins: [ [",
      "error id": "no-sparse-arrays",
      "correct": "True"
   },
   {
      "source_code": "gisportal.utils.getURLParameter = function(name) {\n   return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,\"\"])[1].replace(/\\+/g, '%20'))||null;\n};\n",
      "target_code": "gisportal.utils.getURLParameter = function(name) {\n   return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[\"\",\"\"])[1].replace(/\\+/g, '%20'))||null;\n};\n",
      "predection": "gisportal.utils.getURLParameter = function(name) { return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([ ^ &;]+?)(&|#|;|$)').exec(location.search)||[,\"\"])[1].replace(/ \\ +/g, '%20'))||null; } ;",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "  }\n\n  let currencySettings = [,];\n\n  if (currentCurrency) {\n",
      "target_code": "  }\n\n  let currencySettings = [undefined, undefined];\n\n  if (currentCurrency) {\n",
      "predection": "} let currencySettings = []; if (currentCurrency) {",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "\t\t\t} else if (pathParts[1] == \"members\") {\n\t\t\t\tevent = ['_trackEvent', 'CubesViewer', 'Dimension', cubeOperation[2], , true];\n\t\t\t}\n\t\t}\n\n",
      "target_code": "\t\t\t} else if (pathParts[1] == \"members\") {\n\t\t\t\tevent = ['dimension', pathParts[2]];\n",
      "predection": "} else if (pathParts[1] == \"members\") { event = ['_trackEvent', 'CubesViewer', 'Dimension', cubeOperation[2], 'true']; } }",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "test(\"Simple comparisons\", function () {\n  var queries = [\n    [{firstName: \"Francis\"}, \"can check for equality\"],,\n    [{lastName: /^a.+e/i}, \"can check against regex with literal\"],\n",
      "target_code": "test(\"Simple comparisons\", function () {\n  var queries = [\n    [{firstName: \"Francis\"}, \"can check for equality with $eq\"],\n    [{lastName: /^a.+e/i}, \"can check against regex with literal\"],\n",
      "predection": "test(\"Simple comparisons\", function () { var queries = [ [ { firstName: \"Francis\" }, \"can check for equality\"], [ { lastName: / ^ a.+e/i }, \"can check against regex with literal\"],",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "\n ([\n\n function(module, exports, __webpack_require__) {\n",
      "target_code": "\n ({\n\n 0:\n function(module, exports, __webpack_require__) {\n",
      "predection": "( { 0: ([ function(module, exports, __webpack_require__) {",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "define(['modules/default/defaultview', 'src/util/util', 'lib/loadingplot/libs/jquery.mousewheel.min', 'lib/loadingplot/svg', 'lib/loadingplot/point', , 'lib/loadingplot/springs'], function(Default, Util) {\n\t\n",
      "target_code": "define(['modules/default/defaultview', 'src/util/util', 'lib/loadingplot/libs/jquery.mousewheel.min', 'lib/loadingplot/svg', 'lib/loadingplot/point', 'lib/loadingplot/springs'], function(Default, Util) {\n\t\n",
      "predection": "define(['modules/default/defaultview','src/util/util', 'lib/loadingplot/libs/jquery.mousewheel.min', 'lib/loadingplot/svg', 'lib/loadingplot/point', 'lib/loadingplot/springs'], function(Default) {",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "    t.ok(results, 'results should be defined');\n    t.deepEqual(results, [1, , 3, undefined], 'results should be [1, , 3, undefined]');\n    t.ok(error instanceof Error, 'error should be instance of an Error');\n",
      "target_code": "    t.ok(results, 'results should be defined');\n    t.deepEqual(results, [1, undefined, 3, undefined], 'results should be [1, undefined, 3, undefined]');\n    t.ok(error instanceof Error, 'error should be instance of an Error');\n",
      "predection": "t.ok(results,'results should be defined'); t.deepEqual(results, [1,, 3, undefined],'results should be [1,, 3, undefined]'); t.ok(error instanceof Error, 'error should be instance of an Error');",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "      children: [],\n      transform: [\n        ,\n        {\n",
      "target_code": "      children: [],\n      transform: [\n        {\n",
      "predection": "children: [], transform: [ {",
      "error id": "no-sparse-arrays",
      "correct": "True"
   },
   {
      "source_code": "});\n\nvar testFiles = [\n  \n  \n  \n",
      "target_code": "});\n\nvar testFiles = [\n  \n    '/test/functional/logger_tests.js'\n\n",
      "predection": "} ); var testFiles = [",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "        && cells[+1][+1].sign == sign)\n      return [ cells[-1][-1], cells[0][0], , cells[+1][+1] ];\n    if (i == -j && cells[-1][+1].sign == sign && cells[0][0].sign == sign\n",
      "target_code": "        && cells[+1][+1].sign == sign)\n      return [ cells[-1][-1], cells[0][0], cells[+1][+1] ];\n    if (i == -j && cells[-1][+1].sign == sign && cells[0][0].sign == sign\n",
      "predection": "&& cells[+1][+1].sign == sign) return [ cells[-1][-1], cells[0][0],, cells[+1][+1] ]; if (i == -j && cells[-1][+1].sign == sign && cells[0][0].sign == sign)",
      "error id": "no-sparse-arrays",
      "correct": "False"
   },
   {
      "source_code": "    _.each(\n      ['find', 'findOne', 'insert', 'update', , 'upsert',\n       'remove', '_ensureIndex', '_dropIndex', '_createCappedCollection',\n",
      "target_code": "    _.each(\n      ['find', 'findOne', 'insert', 'update', 'upsert',\n       'remove', '_ensureIndex', '_dropIndex', '_createCappedCollection',\n",
      "predection": "_.each( ['find', 'findOne', 'insert', 'update', 'upsert','remove', '_ensureIndex', '_dropIndex', '_createCappedCollection',",
      "error id": "no-sparse-arrays",
      "correct": "True"
   },
   {
      "source_code": "export default [\n  [\n    ['pono\u00c4\u2021', 'podne', 'ujutro', 'popodne', 'nave\u00c4er', 'no\u00c4\u2021u'], ,\n    ['pono\u00c4\u2021', 'podne', 'ujutro', 'poslije podne', 'nave\u00c4er', 'no\u00c4\u2021u']\n",
      "target_code": "export default [\n  [\n    ['pono\u00c4\u2021', 'podne', 'ujutro', 'popodne', 'nave\u00c4er', 'no\u00c4\u2021u'], u,\n    ['pono\u00c4\u2021', 'podne', 'ujutro', 'poslije podne', 'nave\u00c4er', 'no\u00c4\u2021u']\n",
      "predection": "export default [ [ ['pono', 'podne', 'ujutro', 'popodne', 'naveer', 'nou'], u, ['pono', 'podne', 'ujutro', 'poslije podne', 'naveer', 'nou']",
      "error id": "no-sparse-arrays",
      "correct": "True"
   },
   {
      "source_code": "function SSHyClient() {}\n\nSSHyClient = {\n    \n",
      "target_code": "SSHyClient = {\n    \n",
      "predection": "function SSHyClient() { } ; SSHyClient = {",
      "error id": "no-func-assign",
      "correct": "False"
   },
   {
      "source_code": "function _helperRemapAsyncToGenerator() {\n  const data = _interopRequireDefault(require(\"@babel/helper-remap-async-to-generator\"));\n\n  _helperRemapAsyncToGenerator = function () {\n    return data;\n",
      "target_code": "function _helperRemapAsyncToGenerator() {\n  var data = _interopRequireDefault(require(\"@babel/helper-remap-async-to-generator\"));\n\n  _helperRemapAsyncToGenerator = function _helperRemapAsyncToGenerator() {\n    return data;\n",
      "predection": "function _helperRemapAsyncToGenerator() { var data = _interopRequireDefault(require(\"@babel/helper-remap-async-to-generator\")); _helperRemapAsyncToGenerator = function _helperRemapAsyncToGenerator() { return data;",
      "error id": "no-func-assign",
      "correct": "True"
   },
   {
      "source_code": "\t};\r\n\tJSX = new Rexjs(JSX);\r\n\r\n",
      "target_code": "\t};\r\n\tJSXTemplate = new Rexjs(JSXTemplate);\r\n\r\n",
      "predection": "} ; var JSX = new Rexjs(JSX);",
      "error id": "no-func-assign",
      "correct": "False"
   },
   {
      "source_code": "}\n\n_.extend(Verb.prototype, Task.prototype);\nVerb = Template.extend(Verb.prototype);\n\n",
      "target_code": "}\n\nextend(Verb.prototype, Task.prototype);\nTemplate.extend(Verb.prototype);\n\n",
      "predection": "} _.extend(Verb.prototype, Task.prototype); Template.extend(Verb.prototype);",
      "error id": "no-func-assign",
      "correct": "False"
   },
   {
      "source_code": "    }\n    testNoTemplate = __decorate([\n        component(\"test-no-template\")\n    ], testNoTemplate);\n    return testNoTemplate;\n",
      "target_code": "    }\n    return testNoTemplate;\n",
      "predection": "} return testNoTemplate;",
      "error id": "no-func-assign",
      "correct": "True"
   },
   {
      "source_code": "                            if (error) log.error(error);\n                            read++;\n                            archive.append(data, {name: removeFilePath(currentPath)});\n",
      "target_code": "                            if (error) log.error(error);\n                            archive.append(data, {name: removeFilePath(currentPath)});\n",
      "predection": "if (error) log.error(error); archive.append(data, { name: removeFilePath(currentPath) } );",
      "error id": "no-func-assign",
      "correct": "True"
   },
   {
      "source_code": "function _helperSplitExportDeclaration() {\n  const data = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\n  _helperSplitExportDeclaration = function () {\n    return data;\n",
      "target_code": "function _helperSplitExportDeclaration() {\n  var data = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\n  _helperSplitExportDeclaration = function _helperSplitExportDeclaration() {\n    return data;\n",
      "predection": "function _helperSplitExportDeclaration() { var data = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\")); _helperSplitExportDeclaration = function _helperSplitExportDeclaration() { return data;",
      "error id": "no-func-assign",
      "correct": "True"
   },
   {
      "source_code": "        .catch(notify.error);\n      }\n      simulatePipeline = debounce(simulatePipeline, 200);\n\n",
      "target_code": "        .catch(notify.error);\n      }, 200);\n\n",
      "predection": ".catch(notify.error); } ; simulatePipeline = debounce(simulatePipeline, 200);",
      "error id": "no-func-assign",
      "correct": "False"
   },
   {
      "source_code": "  }]);\n  ValidationMessage = pureRender(ValidationMessage) || ValidationMessage;\n  return ValidationMessage;\n",
      "target_code": "  }]);\n  return ValidationMessage;\n",
      "predection": "} ]); ValidationMessage = pureRender(ValidationMessage) || ValidationMessage; return ValidationMessage;",
      "error id": "no-func-assign",
      "correct": "False"
   },
   {
      "source_code": "function _pluginSyntaxJsx() {\n  const data = _interopRequireDefault(require(\"@babel/plugin-syntax-jsx\"));\n\n  _pluginSyntaxJsx = function () {\n    return data;\n",
      "target_code": "function _pluginSyntaxJsx() {\n  var data = _interopRequireDefault(require(\"@babel/plugin-syntax-jsx\"));\n\n  _pluginSyntaxJsx = function _pluginSyntaxJsx() {\n    return data;\n",
      "predection": "function _pluginSyntaxJsx() { var data = _interopRequireDefault(require(\"@babel/plugin-syntax-jsx\")); _pluginSyntaxJsx = function _pluginSyntaxJsx() { return data;",
      "error id": "no-func-assign",
      "correct": "True"
   },
   {
      "source_code": "function _helperModuleTransforms() {\n  const data = require(\"@babel/helper-module-transforms\");\n\n  _helperModuleTransforms = function () {\n    return data;\n",
      "target_code": "function _helperModuleTransforms() {\n  var data = require(\"@babel/helper-module-transforms\");\n\n  _helperModuleTransforms = function _helperModuleTransforms() {\n    return data;\n",
      "predection": "function _helperModuleTransforms() { var data = require(\"@babel/helper-module-transforms\"); _helperModuleTransforms = function _helperModuleTransforms() { return data;",
      "error id": "no-func-assign",
      "correct": "True"
   },
   {
      "source_code": "if (typeof window !== \"undefined\" && window.Handlebars) {\n  HandlebarsBinding = HandlebarsBinding(window.Handlebars);\n}\n",
      "target_code": "if (typeof window !== \"undefined\" && window.Handlebars) {\n  HandlebarsBinding(window.Handlebars);\n}\n",
      "predection": "if (typeof window!== \"undefined\" && window.Handlebars) { this.handlebars = HandlebarsBinding(window.Handlebars); }",
      "error id": "no-func-assign",
      "correct": "False"
   },
   {
      "source_code": "    }\n\n    model = assign(model, {\n        addRequestInterceptor(interceptor) {\n",
      "target_code": "    }\n\n    var model = assign(modelFunc, {\n        addRequestInterceptor(interceptor) {\n",
      "predection": "} model = model.assign( { addRequestInterceptor(interceptor) {",
      "error id": "no-func-assign",
      "correct": "False"
   },
   {
      "source_code": "    }, function(err){\n      openFile = function(filename, callback){\n        logWarn('cli', 'openFile doesn\\'t work. See reason on server start');\n",
      "target_code": "    }, function(err){\n      openFile = function(){\n        logWarn('cli', 'openFile doesn\\'t work. See reason on server start');\n",
      "predection": "}, function(err) { var openFile = function(filename, callback) { logWarn('cli', 'openFile doesn \\ 't work. See reason on server start');",
      "error id": "no-func-assign",
      "correct": "False"
   },
   {
      "source_code": "function _helperPluginUtils() {\n  const data = require(\"@babel/helper-plugin-utils\");\n\n  _helperPluginUtils = function () {\n    return data;\n",
      "target_code": "function _helperPluginUtils() {\n  var data = require(\"@babel/helper-plugin-utils\");\n\n  _helperPluginUtils = function _helperPluginUtils() {\n    return data;\n",
      "predection": "function _helperPluginUtils() { var data = require(\"@babel/helper-plugin-utils\"); _helperPluginUtils = function _helperPluginUtils() { return data;",
      "error id": "no-func-assign",
      "correct": "True"
   },
   {
      "source_code": "    if (!name) return children;\n    if (!style) style = () => ({});\n\n",
      "target_code": "    if (!name) return children;\n\n",
      "predection": "if (!name) return children; if (!style) return () => ( { } );",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "        if (argv.package) {\n            buildCommand += \" -0size\";\n        }\n",
      "target_code": "        if (argv.package) {\n            buildCommand += \" -Osize\";\n        }\n",
      "predection": "if (argv.package) { buildCommand += \" -0size\"; }",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "  if (typeof BUNDLE_VERSION != \"undefined\") {\n    bundle_version = BUNDLE_VERSION;\n  }\n",
      "target_code": "  if (typeof BUNDLE_VERSION != \"undefined\") {\n    bundleVersion = BUNDLE_VERSION;\n  }\n",
      "predection": "if (typeof BUNDLE_VERSION!= \"undefined\") { return BUNDLE_VERSION; }",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "    fs.appendFileSync(filename, csvLines.join('\\n'), 'utf8');\n    store = {};\n  }\n",
      "target_code": "    fs.appendFileSync(filename, csvLines.join('\\n'), 'utf8');\n    store = {};\n    console.log(`${collection}: storing ${csvLines.length} entries`);\n  }\n",
      "predection": "fs.appendFileSync(filename, csvLines.join(' \\ n'), 'utf8'); }",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "function buildSQLPoolMutation() {\n  const string = ``;\n  string += `${tab}${tab}${tab}${tab}return pool.connect()\\n`\n  string += `${tab}${tab}${tab}${tab}${tab}.then(client => {\\n`\n",
      "target_code": "function buildSQLPoolMutation() {\n  let string = ``;\n  string += `${tab}${tab}${tab}${tab}return pool.connect()\\n`\n  string += `${tab}${tab}${tab}${tab}${tab}.then(client => {\\n`\n",
      "predection": "function buildSQLPoolMutation() { let string = ; string += $ { tab } $ { tab } $ { tab } $ { tab } $ { tab } $ { tab } return pool.connect() \\ n string += $ { tab } $ { tab } $ { tab } $ { tab } $ { tab }.then(client => { \\ n",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "    \n    matchedModules.sort((a, b) => a.importPath.length - b.importPath.length)\n    matchedModules = uniq(matchedModules, (m) => m.lookupPath + '/' + m.lookupPath);\n    matched_modules.sort((a, b) => a.displayName.localCompare(b.displayName));\n  }\n",
      "target_code": "    \n    matchedModules.sort((a, b) => a.importPath.length - b.importPath.length);\n    matchedModules = uniq(matchedModules, (m) => m.lookupPath + '/' + m.lookupPath);\n    matchedModules.sort((a, b) => a.displayName.localCompare(b.displayName));\n  }\n",
      "predection": "matchedModules.sort((a, b) => a.importPath.length - b.importPath.length) matchedModules = uniq(matchedModules, (m) => m.lookupPath + '/' + m.lookupPath); matched_modules.sort((a, b) => a.displayName.localCompare(b.displayName)); }",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "        const h = {};\n        for (const i = 0, len = keys.length; i < len; ++i)\n            h[keys[i]] = i;\n",
      "target_code": "        const h = {};\n        for (let i = 0, len = keys.length; i < len; ++i)\n            h[keys[i]] = i;\n",
      "predection": "const h = { } ; for (let i = 0, len = keys.length; i  len; ++i) h[keys[i]] = i;",
      "error id": "no-const-assign",
      "correct": "True"
   },
   {
      "source_code": "\n      for (const i = 0; i < length; i++) {\n        value = list[i];\n",
      "target_code": "\n      for (let i = 0; i < length; i++) {\n        value = list[i];\n",
      "predection": "for (let i = 0; i  length; i++) { value = list[i];",
      "error id": "no-const-assign",
      "correct": "True"
   },
   {
      "source_code": "assertEquals(\"012\", s);\n\nassertThrows(function() { for(const x in [1,2,3]) { x++ } }, SyntaxError);\n\n\n",
      "target_code": "assertEquals(\"012\", s);\n\nassertThrows(\"'use strict'; for (const x in [1,2,3]) { x++ }\", SyntaxError);\n\n\n",
      "predection": "assertEquals(\"012\", s); assertThrows(function() { for(let x in [1,2,3]) { x++ } }, SyntaxError);",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "      try {\r\n        account = JSON.parse(currentUser);\r\n        \n",
      "target_code": "      try {\r\n        const account = JSON.parse(currentUser);\r\n        \n",
      "predection": "try { let account = JSON.parse(currentUser);",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "\n        result = resultsModel.getResult(editor.getPath());\n        expect(result.matches.length).toBe(1);\n        expect(resultsModel.getPathCount()).toBe(1);\n        expect(resultsModel.getMatchCount()).toBe(1);\n",
      "target_code": "\n      result = resultsModel.getResult(editor.getPath());\n      expect(result.matches.length).toBe(1);\n      expect(resultsModel.getPathCount()).toBe(1);\n      expect(resultsModel.getMatchCount()).toBe(1);\n",
      "predection": "result = resultsModel.getResult(editor.getPath()); expect(result.matches.length).toBe(1); expect(resultsModel.getPathCount()).toBe(1); expect(resultsModel.getMatchCount()).toBe(1);",
      "error id": "no-const-assign",
      "correct": "True"
   },
   {
      "source_code": "            if (target && target.endsWith('/')) {\n              target = target.replace(/\\/$/, '');\n            }\n",
      "target_code": "            if (target && target.endsWith('/')) {\n              distTarget = target.replace(/\\/$/, '');\n            }\n",
      "predection": "if (target && target.endsWith('/')) { target = target.replace(/ \\ /$/, ''); }",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "    logger = require('./lib/logger').logger,\n    logger = require('./lib/logger').logger,\n    Raven = require('raven'),\n    webpackDevMiddleware = require(\"webpack-dev-middleware\");\n",
      "target_code": "    logger = require('./lib/logger').logger,\n    webpackDevMiddleware = require(\"webpack-dev-middleware\");\n",
      "predection": "logger = require('./lib/logger').logger, webpackDevMiddleware = require(\"webpack-dev-middleware\");",
      "error id": "no-const-assign",
      "correct": "True"
   },
   {
      "source_code": "    async run(message, args) {\n        const argu = args.argument\n        if (argu = 'N\n            return message.channel.send('Please provide something for Bonzi to say!');\n",
      "target_code": "    async run(message, args) {\n        var argu = args.argument\n        if (argu = 'N\n            return message.channel.send('Please provide something for Bonzi to say!');\n",
      "predection": "async run(message, args) { let argu = args.argument if (argu = 'N return message.channel.send('Please provide something for Bonzi to say!');",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "const dbDump = function(env, done) {\n  path = env !== 'prod' ? 'dev' : env;\n  const date = moment();\n",
      "target_code": "const dbDump = function(env, done) {\n  const envPath = env !== 'prod' ? 'dev' : env;\n  const date = moment();\n",
      "predection": "const dbDump = function(env, done) { let path = env!== 'prod'? 'dev' : env; const date = moment();",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "  let indent = '';\n  for (const i=1; i < indentNum; i++) {\n    indent += '  ';\n",
      "target_code": "  let indent = '';\n  for (let i = 1; i < indentNum; i += 1) {\n    indent += '  ';\n",
      "predection": "let indent = ''; for (let i=1; i  indentNum; i++) { indent +='';",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "export default class TitleBar extends Component {\n  render() {\n    const { color, icon, title, handleClose } = this.props;\n    if (!color) color = \"blue\";\n    let closeButton = false;\n",
      "target_code": "  render() {\n    const { icon, title, handleClose } = this.props;\n    let { color } = this.props;\n    if (!color) color = \"blue\";\n    let closeButton = false;\n",
      "predection": "export default class TitleBar extends Component { render() { let { color, icon, title, handleClose } = this.props; if (!color) color = \"blue\"; let closeButton = false;",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "\t\t\tif (!urlParser.parse(url).host) {\n\t\t\t\turl = url.resolve(domain, url);\n\t\t\t}\n\t\t\t\n\t\t\tconst title = strip(entities.decodeHTML(post.title));\n",
      "target_code": "\t\t\tif (!urlParser.parse(url).host) {\n\t\t\t\turl = url.resolve(domain, url);\n\t\t\t}\n",
      "predection": "if (!urlParser.parse(url).host) { url = url.resolve(domain, url); } const title = strip(entities.decodeHTML(post.title));",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "    if (hasLineHeadChar) {\n      lines = _.map(lines, function (line) {\n        return line.replace(lineHeadCharRegex, '');\n      });\n",
      "target_code": "    if (hasLineHeadChar) {\n      lines = _.map(lines, function (line) {\n        return line.trim().replace(lineHeadCharRegex, '');\n      });\n",
      "predection": "if (hasLineHeadChar) { lines = _.map(lines, function (line) { return line.replace(lineHeadCharRegex, ''); } );",
      "error id": "no-const-assign",
      "correct": "False"
   },
   {
      "source_code": "  exports.removeEmpty(value)\n  for (const i = 0;i < list.length;i++) {\n    if (list[i][key] === keyValue) {\n",
      "target_code": "  exports.removeEmpty(value)\n  for (let i = 0;i < list.length;i++) {\n    if (list[i][key] === keyValue) {\n",
      "predection": "exports.removeEmpty(value) for (let i = 0;i  list.length;i++) { if (list[i][key] === keyValue) {",
      "error id": "no-const-assign",
      "correct": "True"
   },
   {
      "source_code": "    for (module_name in modules) {\n        module = modules[module_name];\n        for (var i = 0; i < module.ogates.length; i++) {\n",
      "target_code": "    for (module_name in modules) {\n        var module = modules[module_name];\n        for (var i = 0; i < module.ogates.length; i++) {\n",
      "predection": "for (var module in modules) { var module = modules[module_name]; for (var i = 0; i  module.ogates.length; i++) {",
      "error id": "no-global-assign",
      "correct": "False"
   },
   {
      "source_code": "\n\nDISPATCHER_PROPERTIES = [\n    \"position\",\n",
      "target_code": "\nDISPATCHER_PROPERTIES = [\n    \"position\",\n",
      "predection": "const DISPATCHER_PROPERTIES = [ \"position\",",
      "error id": "no-global-assign",
      "correct": "False"
   },
   {
      "source_code": "if (typeof console === \"undefined\") { console = { log: print }; }\n\nfunction Foo() {\n}\n",
      "target_code": "function Foo() {\n}\n",
      "predection": "function Foo() { }",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "const config = require('../config.json');\nPromise = require(\"bluebird\").Promise;\n\n",
      "target_code": "const config = require('../config.json');\nconst bluebirdPromise = require(\"bluebird\").Promise;\n\n",
      "predection": "const config = require('../config.json');",
      "error id": "no-global-assign",
      "correct": "False"
   },
   {
      "source_code": "var config = require('./webpack.config');\n\n__dirname = config.__dirname;\n\nconfig.entry = {\n",
      "target_code": "var config = require('./webpack.config');\n\nconfig.entry = {\n",
      "predection": "var config = require('./webpack.config'); config.entry = {",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "if (typeof console === \"undefined\") { console = { log: print }; }\n\nconsole.log (\"hello world\");\n",
      "target_code": "console.log (\"hello world\");\n",
      "predection": "console.log (\"hello world\");",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "addEventListener(\"message\", dispatcher.dispatchMessage.bind(dispatcher), false);\nconsole = new WebInspector.WorkerConsole();\n",
      "target_code": "addEventListener(\"message\", dispatcher.dispatchMessage.bind(dispatcher), false);\n",
      "predection": "addEventListener(\"message\", dispatcher.dispatchMessage.bind(dispatcher), false);",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "      var extensions = [];\n      for (var i = 0, mpdule; module = this.modules[i]; i++) {\n        if (SETTINGS[module.option]) extensions.push(module.module);\n",
      "target_code": "      var extensions = [];\n      for (var i = 0, module; module = this.modules[i]; i++) {\n        if (SETTINGS[module.option]) extensions.push(module.module);\n",
      "predection": "var extensions = []; for (var i = 0, mpdule; i  this.modules.length; i++) { if (SETTINGS[module.option]) extensions.push(module.module);",
      "error id": "no-global-assign",
      "correct": "False"
   },
   {
      "source_code": "                    WMPJSInterface.Preloader.remove(100);\r\n\t\t\t\t\t\r\n\t\t\t\t\tJSON = eval (responseJSON);\r\n\t\t\t\t\tresponse = Boolean(Number(String(JSON.status)));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (response == 0) {\r\n",
      "target_code": "                    WMPJSInterface.Preloader.remove(100);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar JSON = eval (responseJSON);\r\n\t\t\t\t\tvar response = Boolean(Number(String(JSON.status)));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (response == 0) {\r\n",
      "predection": "WMPJSInterface.Preloader.remove(100); var JSON = eval (responseJSON); var response = Boolean(Number(String(JSON.status))); if (response == 0) {",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "    var char = data.charAt(i);\n    if (lastChar == '\\\\' && !escape) {\n      escape = true;\n    } else {\n",
      "target_code": "    var char = data.charAt(i);\n    if (lastChar === '\\\\' && !escape) {\n      escape = true;\n    } else {\n",
      "predection": "var char = data.charAt(i); if (lastChar ==='\\ \\'&&!escape) { escape = true; } else {",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "const fs = require('fs-extra');\nPromise = require('bluebird').Promise;\nconst npmHandler = require('./npm');\n",
      "target_code": "const fs = require('fs-extra');\nconst bluebirdPromise = require('bluebird').Promise;\nconst npmHandler = require('./npm');\n",
      "predection": "const fs = require('fs-extra'); const bluebirdPromise = require('bluebird').Promise; const npmHandler = require('./npm');",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "\nrequire = require('./esm')('./bin/appServer');\n",
      "target_code": "\nrequire('./esm')('./bin/appServer');\n",
      "predection": "var require = require('./esm')('./bin/appServer');",
      "error id": "no-global-assign",
      "correct": "False"
   },
   {
      "source_code": "\nif (typeof(gj) === 'undefined') {\n    gj = {};\n}\nif (typeof(gj.tree) === 'undefined') {\n",
      "target_code": "\nif (typeof(gj.tree) === 'undefined') {\n",
      "predection": "if (typeof(gj.tree) === 'undefined') {",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "priv = new WeakMap();\n\nsetImmediate = global.setImmediate || process.nextTick;\n\n",
      "target_code": "priv = new WeakMap();\n\nvar setImmediate = global.setImmediate || process.nextTick;\n\n",
      "predection": "priv = new WeakMap();",
      "error id": "no-global-assign",
      "correct": "False"
   },
   {
      "source_code": "let request = require(\"request\");\nPromise = require(\"bluebird\");\nPromise.promisifyAll(request);\n",
      "target_code": "let request = require(\"request\");\nconst Promise = require(\"bluebird\");\nPromise.promisifyAll(request);\n",
      "predection": "let request = require(\"request\"); let Promise = require(\"bluebird\"); Promise.promisifyAll(request);",
      "error id": "no-global-assign",
      "correct": "False"
   },
   {
      "source_code": "'use strict';\nrequire = require('module')._load('./AgentLoader');\n\n",
      "target_code": "'use strict';\n\n",
      "predection": "'use strict';",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "        setTimeout = window.setTimeout,\n        setInterval = window.setInterval,\n        $window = $(window),\n        parent = ch.util.inherits(Carousel, ch.Widget);\n",
      "target_code": "        setTimeout = window.setTimeout,\n        setInterval = window.setInterval,\n        parent = ch.util.inherits(Carousel, ch.Widget);\n",
      "predection": "setTimeout = window.setTimeout, parent = ch.util.inherits(Carousel, ch.Widget);",
      "error id": "no-global-assign",
      "correct": "False"
   },
   {
      "source_code": "if (typeof console === \"undefined\") { console = { log: print }; }\n\nvar x = \"hello world\";\n\n",
      "target_code": "var x = \"hello world\";\n\n",
      "predection": "var x = \"hello world\";",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "\nvar Component = require(\"montage/ui/component\").Component,\n    CascadingList = require(\"ui/controls/cascading-list.reel\").CascadingList;\n    Promise = require(\"montage/core/promise\").Promise;\n\n",
      "target_code": "\nvar Component = require(\"montage/ui/component\").Component;\n\n",
      "predection": "var Component = require(\"montage/ui/component\").Component, CascadingList = require(\"ui/controls/cascading-list.reel\").CascadingList;",
      "error id": "no-global-assign",
      "correct": "False"
   },
   {
      "source_code": "        before(function(done){\n          clearInterval = sinon.stub();\n          setInterval = sinon.stub();\n          mockedCdn.getFile = sinon.stub();\n",
      "target_code": "        before(function(done){\n          mockedCdn.getFile = sinon.stub();\n",
      "predection": "before(function(done) { mockedCdn.getFile = sinon.stub();",
      "error id": "no-global-assign",
      "correct": "True"
   },
   {
      "source_code": "\n    if (workday.end_afternoon == NaN){\n      diff = Time.interval(workday.begin_morning, workday.end_morning)\n",
      "target_code": "\n    if (!(workday.end_afternoon instanceof Time)){\n      diff = Time.interval(workday.begin_morning, workday.end_morning)\n",
      "predection": "if (isNaN(workday.end_afternoon)) { diff = Time.interval(workday.begin_morning, workday.end_morning)",
      "error id": "use-isnan",
      "correct": "False"
   },
   {
      "source_code": "                _value = parseInt(_value, 10);\n\n                if (_value === NaN) {\n                    _value = null;\n",
      "target_code": "                _value = parseInt(_value, 10);\n\n                if (!_.isNumber(_value) || _.isNaN(_value)) {\n                    _value = null;\n",
      "predection": "_value = parseInt(_value, 10); if (isNaN(_value)) { _value = null;",
      "error id": "use-isnan",
      "correct": "False"
   },
   {
      "source_code": "      if (part[name] === 'undefined') part[name] = undefined;\n      if (part[name] === NaN) part[name] = undefined;\n      handleChange(_.assign({}, item, part));\n",
      "target_code": "      if (part[name] === 'undefined') part[name] = undefined;\n      if (isNaN(part[name])) part[name] = undefined;\n      handleChange(_.assign({}, item, part));\n",
      "predection": "if (part[name] === 'undefined') part[name] = undefined; if (isNaN(part[name])) part[name] = undefined; handleChange(_.assign( { }, item, part));",
      "error id": "use-isnan",
      "correct": "True"
   },
   {
      "source_code": "\n                if(ASN_int != NaN && ASN_int > 0 && ASN_int < 4294967295){\n                    getData(ASN_int)\n",
      "target_code": "\n                if(!ASN_int.isNaN() && ASN_int > 0 && ASN_int < 4294967295){\n                    getData(ASN_int)\n",
      "predection": "if(ASN_int!== undefined && ASN_int > 0 && ASN_int  4294967295) { getData(ASN_int)",
      "error id": "use-isnan",
      "correct": "False"
   },
   {
      "source_code": "    case type.NUMBER_TYPE:\n        return new boolean.Boolean(input.value !== 0 && input.value !== NaN);\n    case type.STRING_TYPE:\n",
      "target_code": "    case type.NUMBER_TYPE:\n        return new boolean.Boolean(input.value !== 0 && input.value !== number.NaN.value);\n    case type.STRING_TYPE:\n",
      "predection": "case type.NUMBER_TYPE: return new boolean.Boolean(input.value!== 0 && isNaN(input.value)); case type.STRING_TYPE:",
      "error id": "use-isnan",
      "correct": "False"
   },
   {
      "source_code": "function testcase() {\n  if(Math.fround(NaN) === NaN) {\n  \treturn true;\n",
      "target_code": "function testcase() {\n  if(Number.isNaN(Math.fround(NaN))) {\n  \treturn true;\n",
      "predection": "function testcase() { if(Number.isNaN(Math.fround(NaN))) { return true;",
      "error id": "use-isnan",
      "correct": "True"
   },
   {
      "source_code": "          const id = parseInt(parts[3]);\n          if (id !== NaN && id >= 0 && id < data.length) {\n            return data[id];\n",
      "target_code": "          const id = parseInt(parts[3]);\n          if (!isNaN(id) && id >= 0 && id < data.length) {\n            return data[id];\n",
      "predection": "const id = parseInt(parts[3]); if (!isNaN(id) && id >= 0 && id  data.length) { return data[id];",
      "error id": "use-isnan",
      "correct": "True"
   },
   {
      "source_code": "var randomCounter = false;\nif (counter == NaN) {\n    counter = Math.floor(Math.random() * 10000);\n",
      "target_code": "var randomCounter = false;\nif (isNaN(counter)) {\n    counter = Math.floor(Math.random() * 10000);\n",
      "predection": "var randomCounter = false; if (isNaN(counter)) { counter = Math.floor(Math.random() * 10000);",
      "error id": "use-isnan",
      "correct": "True"
   },
   {
      "source_code": "        if(checkReleaseRequest){\n            url: global.keys.analyticsUrl+\"/app/isReleased\"\n        }else{\n",
      "target_code": "        if(checkReleaseRequest){\n            url= global.keys.analyticsUrl+\"/app/isReleased\";\n        }else{\n",
      "predection": "if(checkReleaseRequest) { global.keys.analyticsUrl+\"/app/isReleased\"; } else {",
      "error id": "no-unused-labels",
      "correct": "False"
   },
   {
      "source_code": "        let len = 0;\n\n        loop1:\n        do {\n",
      "target_code": "        let len = 0;\n\n        do {\n",
      "predection": "let len = 0; do {",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "      }\n      _token_stack:\n      var lex = function () {\n",
      "target_code": "      }\n      var lex = function () {\n",
      "predection": "} var lex = function () {",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "      result.screenOrientationAngle = screen.orientation.angle ? screen.orientation.angle : '';\n      screenOrientationType: screen.orientation.type ? screen.orientation.type : '';\n    }\n",
      "target_code": "      result.screenOrientationAngle = screen.orientation.angle ? screen.orientation.angle : '';\n      result.screenOrientationType = screen.orientation.type ? screen.orientation.type : '';\n    }\n",
      "predection": "result.screenOrientationAngle = screen.orientation.angle? screen.orientation.angle : ''; }",
      "error id": "no-unused-labels",
      "correct": "False"
   },
   {
      "source_code": "    expect_stdout: \"-1 -10\"\n    node_version: \">=6\"\n}\n",
      "target_code": "    expect_stdout: \"-1 -10\"\n}\n",
      "predection": "expect_stdout: \"-1 -10\" }",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "  })\nhttps:\n  return new ApolloClient({\n",
      "target_code": "  })\n\n  return new ApolloClient({\n",
      "predection": "} ) return new ApolloClient( {",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "        const json = documents.map(doc => doc.toJSON())\n        trace: name, console.dir({ json, errors }, { depth: null }) || ''\n        expect(json).toMatchObject(tgt)\n",
      "target_code": "        const json = documents.map(doc => doc.toJSON())\n        const docErrors = documents.map(doc => doc.errors.map(err => err.message))\n        trace: name, '\\n' + JSON.stringify(json, null, '  '), { errors: docErrors }\n        expect(json).toMatchObject(tgt)\n",
      "predection": "const json = documents.map(doc => doc.toJSON()) expect(json).toMatchObject(tgt)",
      "error id": "no-unused-labels",
      "correct": "False"
   },
   {
      "source_code": "  var IOSDRIVER_VERSION = '0.6.5';\nhttp:\n  var SELENIUM_DOWNLOAD_URL = [\n",
      "target_code": "  var IOSDRIVER_VERSION = '0.6.5';\n  var SELENIUM_DOWNLOAD_URL = [\n",
      "predection": "var IOSDRIVER_VERSION = '0.6.5'; var SELENIUM_DOWNLOAD_URL = [",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "    entries = [];\n    command: '';\n    cursor: 0;\n    this.trigger();\n",
      "target_code": "    entries = [];\n    resetEntry();\n    this.trigger();\n",
      "predection": "entries = []; command: ''; this.trigger();",
      "error id": "no-unused-labels",
      "correct": "False"
   },
   {
      "source_code": "    expect_stdout: \"6\"\n    node_version: \">=6\"\n}\n",
      "target_code": "    expect_stdout: \"6\"\n}\n",
      "predection": "expect_stdout: \"6\" }",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "    expect_stdout: \"PASS\"\n    node_version: \">=6\"\n}\n",
      "target_code": "    expect_stdout: \"PASS\"\n}\n",
      "predection": "expect_stdout: \"PASS\" }",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "      condition: schema => schema.type === 'object',\n      value: (schema, idl) => { type: getObjectType(schema, idl) },\n    },\n",
      "target_code": "      condition: schema => schema.type === 'object',\n      value: (schema, idl) => ({ type: getObjectType(schema, idl) }),\n    },\n",
      "predection": "condition: schema => schema.type === 'object', value: (schema, idl) => { getObjectType(schema, idl) }, },",
      "error id": "no-unused-labels",
      "correct": "False"
   },
   {
      "source_code": "          } else {\n            err: 'Missing User or Token.'\n          }\n",
      "target_code": "          } else {\n            res.end(JSON.stringify({\n              err: 'Missing User or Token.'\n            }))\n          }\n",
      "predection": "} else { err = 'Missing User or Token.' }",
      "error id": "no-unused-labels",
      "correct": "False"
   },
   {
      "source_code": "{\n  GOPATH: undefined\n}\n",
      "target_code": "module.exports = {\n  GOPATH: 'C:/Users/Fabo/Documents/Entwicklung/Go'\n}\n",
      "predection": "{ var GOPATH = { } ; GOPATH = { } ; }",
      "error id": "no-unused-labels",
      "correct": "False"
   },
   {
      "source_code": "javascript:(function(){\n\n",
      "target_code": "(function(){\n\n",
      "predection": "javascript:(function() {",
      "error id": "no-unused-labels",
      "correct": "False"
   },
   {
      "source_code": "      if (this.type === 1 && typeof data !== 'object') {\n        data : {\n          _event : data\n        }\n",
      "target_code": "      if (this.type === 1 && typeof data !== 'object') {\n        this.data = {\n          _event : data\n        }\n",
      "predection": "if (this.type === 1 && typeof data!== 'object') { data = { event : data }",
      "error id": "no-unused-labels",
      "correct": "False"
   },
   {
      "source_code": "\t\tvar combos = {};\n\t\t\tcmd: 'phantomjs',\n\t\tgrunt.util.spawn({\n",
      "target_code": "\t\tvar combos = {};\n\t\tgrunt.util.spawn({\n",
      "predection": "var combos = { } ; grunt.util.spawn( {",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "\n    http:\n    ret.priority = (raw_packet[offset] & 0xE0) >> 5;\n",
      "target_code": "\n    \n    ret.priority = (raw_packet[offset] & 0xE0) >> 5;\n",
      "predection": "ret.priority = (raw_packet[offset] & 0xE0) >> 5;",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "        writing() {\n            app: {\n                var userProps = this.props;\n\n",
      "target_code": "        writing() {\n            var userProps = this.props;\n\n",
      "predection": "writing() { var userProps = this.props;",
      "error id": "no-unused-labels",
      "correct": "True"
   },
   {
      "source_code": "\t\turl,\n\t\t* file() {\n\t\t\tthrow new Error('File error');\n",
      "target_code": "\t\turl,\n\t\t\n\t\t*file() {\n\t\t\tthrow new Error('File error');\n",
      "predection": "url, * file() { throw new Error('File error');",
      "error id": "require-yield",
      "correct": "False"
   },
   {
      "source_code": "\n    app.use(function *(ctx, next){\n      \n",
      "target_code": "\n    app.use(function(ctx, next){\n      \n",
      "predection": "app.use(function(ctx, next) {",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "\t\tif(!!path) {\n\t\t\trouter.addRoute(2000, 'formManagerForms', '/' + path + '/:col/:form', false, function*(next) {\n\t\t\t\tvar col = this.params.col;\n",
      "target_code": "\t\tif(!!path) {\n\t\t\trouter.addRoute(2000, 'formManagerForms', '/' + path + '/:col/:form', false, function*(next) { \n\t\t\t\tvar col = this.params.col;\n",
      "predection": "if(!!path) { router.addRoute(2000, 'formManagerForms', '/' + path + '/:col/:form', false, function*(next) { var col = this.params.col;",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "\n  animateOrphans: task(function * (removedSprites, transition, duration) {\n    this._newOrphanTransitions.push({ removedSprites, transition, duration });\n",
      "target_code": "\n  animateOrphans(removedSprites, transition, duration) {\n    this._newOrphanTransitions.push({ removedSprites, transition, duration });\n",
      "predection": "animateOrphans: task(function* (removedSprites, transition, duration) { yield this._newOrphanTransitions.push( { removedSprites, transition, duration } );",
      "error id": "require-yield",
      "correct": "False"
   },
   {
      "source_code": "    const p = plan();\n    p.test('should not run', function * (t) {\n      t.fail();\n",
      "target_code": "    const p = plan();\n\n    p.test('should not run', (t) => {\n      t.fail();\n",
      "predection": "const p = plan(); p.test('should not run', (t) => { t.fail();",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "\t\t\tret.getValue = function *() { return Value.undef; };\n\t\t\tret.setValue = function *(to) { return ret.value = to; };\n\t\t}\n",
      "target_code": "\t\t\tret.getValue = function *() { return Value.undef; };\n\t\t\tret.setValue = function *(to, s) { return yield * thiz.put(name, to, s); };\n\t\t}\n",
      "predection": "ret.getValue = function *() { return Value.undef; } ; ret.setValue = function *(to) { return ret.value = to; } ; }",
      "error id": "require-yield",
      "correct": "False"
   },
   {
      "source_code": "\n            this.watch([\"app",
      "target_code": "\n            this.watch([\"src",
      "predection": "this.watch([\"app/*.config\", \"app/*.json\", \"app/*.js\"], function*(filePath) {",
      "error id": "require-yield",
      "correct": "False"
   },
   {
      "source_code": "      '/:category/:title',\n      function *(category, title) {\n        this.status = 500;\n",
      "target_code": "      '/:category/:title',\n      function *(next) {\n        this.status = 500;\n",
      "predection": "'/:category/:title', function *(next) { this.status = 500;",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "export default zora()\n  .test('filter directive should be able to register listener', function * (t) {\n    let counter = 0;\n",
      "target_code": "export default zora()\n  .test('filter directive should be able to register listener', (t) => {\n    let counter = 0;\n",
      "predection": "export default zora().test('filter directive should be able to register listener', (t) => { let counter = 0;",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "          }\n        }].map(function* (a) {\n        return a.action(ctx);\n      });\n",
      "target_code": "          }\n        }].map(function* (a) {\n        return yield a.action(ctx);\n      });\n",
      "predection": "} } ].map(function* (a) { return yield a.action(ctx); } );",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "  throw errors.NotImplementedError();\n};\n\ncontrollers.refresh = function *() {\n  throw errors.NotImplementedError();\n};\n\n",
      "target_code": "  throw errors.NotImplementedError();\n};\n\ncontrollers.refresh = function *() {\n  return yield this.execute('location.reload()');\n};\n\n",
      "predection": "throw errors.NotImplementedError(); } ; controllers.refresh = function () { throw errors.NotImplementedError(); } ;",
      "error id": "require-yield",
      "correct": "False"
   },
   {
      "source_code": "import * as uiActions from './actions';\n\nfunction* saveViewType(action) {\n  settings.viewType = action.payload.viewType;\n",
      "target_code": "import * as uiActions from './actions';\n\nfunction saveViewType(action) {\n  settings.viewType = action.payload.viewType;\n",
      "predection": "import * as uiActions from './actions'; function* saveViewType(action) { settings.viewType = action.payload.viewType;",
      "error id": "require-yield",
      "correct": "False"
   },
   {
      "source_code": "const router = require('koa-router')(); \n\n\nrouter.get('/', function* getRoot() {\n    \n",
      "target_code": "const router = require('koa-router')(); \n\n\nrouter.get('/', function getRoot() {\n    \n",
      "predection": "const router = require('koa-router')(); router.get('/', function* getRoot() {",
      "error id": "require-yield",
      "correct": "False"
   },
   {
      "source_code": "    var RES_MESSAGE = /  --> GET \\/ \\d+ \\d+ms/;\n\n    beforeEach(function *() {\n      app.use(koaBunyanLogger(ringLogger));\n",
      "target_code": "    var RES_MESSAGE = /  --> GET \\/ \\d+ \\d+ms/;\n\n    beforeEach(function () {\n      app.use(koaBunyanLogger(ringLogger));\n",
      "predection": "var RES_MESSAGE = / --> GET \\ / \\ d+ \\ d+ms/; beforeEach(function () { app.use(koaBunyanLogger(ringLogger));",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "var c = function() {\n  return cc.go(function*() {\n    return b();\n  });\n",
      "target_code": "var c = function() {\n  return cc.go(function*() {\n    return yield b();\n  });\n",
      "predection": "var c = function() { return yield cc.go(function*() { return yield b(); } );",
      "error id": "require-yield",
      "correct": "False"
   },
   {
      "source_code": "        \"actions\": [{\n            \"action\": function* (ctx) {\n              return ctx.scope.get(\"foo\")(ctx, [\"bar\"]);\n            }\n",
      "target_code": "        \"actions\": [{\n            \"action\": function* (ctx) {\n              return yield ctx.scope.get(\"foo\")(ctx, [\"bar\"]);\n            }\n",
      "predection": "\"actions\": [ { \"action\": function* (ctx) { return yield ctx.scope.get(\"foo\")(ctx, [\"bar\"]); }",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "    \n    this._sendSaga = function* sendSaga({ data, sessionId }) {\n      self._send(data, sessionId);\n    }\n",
      "target_code": "    \n    this._sendSaga = function* sendSaga({ data, sessionId }) {\n      yield self._send(data, sessionId);\n    }\n",
      "predection": "this._sendSaga = function* sendSaga( { data, sessionId } ) { yield self._send(data, sessionId); }",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "\t\tassert.strictEqual('2015-12-29 01:11:01', d1.dateAdd('m', -1).date2Str());\n\t});\n\tit(`dateAdd\u00e5\u2018\u00a8`, function*() {\n\t\tassert.strictEqual('2016-01-05 01:11:01', d1.dateAdd('w', 1).date2Str());\n",
      "target_code": "\t\tassert.strictEqual('2015-12-29 01:11:01', d1.dateAdd('m', -1).date2Str());\n\t});\n\tit(`dateAdd\u00e5\u2018\u00a8`, function() {\n\t\tassert.strictEqual('2016-01-05 01:11:01', d1.dateAdd('w', 1).date2Str());\n",
      "predection": "assert.strictEqual('2015-12-29 01:11:01', d1.dateAdd('m', -1).date2Str()); } ); it(dateAdd\u2018, function() { assert.strictEqual('2016-01-05 01:11:01', d1.dateAdd('w', 1).date2Str());",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "\n        it(\"should be dimension scales info \", function*() {\n            const group  = file.openGroup('pmc/refinement');\n",
      "target_code": "\n        it(\"should be dimension scales info \", function(done) {\n            const group  = file.openGroup('pmc/refinement');\n",
      "predection": "it(\"should be dimension scales info \", function(done) { const group = file.openGroup('pmc/refinement');",
      "error id": "require-yield",
      "correct": "True"
   },
   {
      "source_code": "    started = true;\n  });\n\n  a.after(function*() {\n    assert.equal(started, true);\n",
      "target_code": "    started = true;\n  });\n\n  after(function* () {\n    assert.equal(started, true);\n",
      "predection": "started = true; } ); a.after(function*() { assert.equal(started, true);",
      "error id": "require-yield",
      "correct": "False"
   },
   {
      "source_code": "            } \n            return;\n        },\n",
      "target_code": "            } \n            return undefined;\n        },\n",
      "predection": "} return undefined; },",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "    }\n    get superinterfaces() {\n      let interfaces = this[_cls][dart.implements];\n      if (interfaces == null) {\n        return dart.list([], mirrors.ClassMirror);\n",
      "target_code": "    }\n    get superinterfaces() {\n      let interfaceThunk = this[_cls][dart.implements];\n      if (interfaceThunk == null) {\n        return dart.list([], mirrors.ClassMirror);\n",
      "predection": "} get superinterfaces() { let interfaces = this[_cls][dart.implements]; if (interfaces == null) { return dart.list([], mirrors.ClassMirror);",
      "error id": "getter-return",
      "correct": "False"
   },
   {
      "source_code": "\n    get indices() {} \n\n",
      "target_code": "\n    get indices() { return null; } \n\n",
      "predection": "get indices() { return null; }",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "    return settings.getSync(\"video\")\r\n  }\r\n\r\n  get videoLoop() {\r\n    settings.getSync(\"video.loop\")\r\n  }\r\n\r\n",
      "target_code": "    return settings.getSync(\"video\")\r\n  }\r\n\r\n  get videoLoop() {\r\n    return settings.getSync(\"video.loop\")\r\n  }\r\n\r\n",
      "predection": "return settings.getSync(\"video\") } get videoLoop() { return settings.getSync(\"video.loop\") }",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "        get: function() {\n            return;\n        }\n",
      "target_code": "        get: function() {\n            return undefined;\n        }\n",
      "predection": "get: function() { return undefined; }",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "  get typingCount() {}\n  get nsfw() {}\n  createCollector() {}\n",
      "target_code": "  get typingCount() {}\n  createCollector() {}\n",
      "predection": "get typingCount() { } get nsfw() { return null; } createCollector() { }",
      "error id": "getter-return",
      "correct": "False"
   },
   {
      "source_code": "  \n  get lastScroll() {},\n};\n",
      "target_code": "  draw: function (callback) {},\n  resume: function () {},\n};\n",
      "predection": "get lastScroll() { return null; } } ;",
      "error id": "getter-return",
      "correct": "False"
   },
   {
      "source_code": "    this.paperOptions.behavior.recognizer.getType();\n  }\n\n  get protocol() {\n    this.paperOptions.recognitonParams.server.scheme;\n  }\n\n",
      "target_code": "    this.paperOptions.behavior.recognizer.getType();\n  }\n\n  get protocol() {\n    return this.paperOptions.recognitonParams.server.scheme;\n  }\n\n",
      "predection": "this.paperOptions.behavior.recognizer.getType(); } get protocol() { return this.paperOptions.recognitonParams.server.scheme; }",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "\n  get [Symbol.iterator]() {\n    this.__data__[Symbol.iterator]();\n  }\n};\n",
      "target_code": "\n  get [Symbol.iterator]() {\n    return this.__data__[Symbol.iterator]();\n  }\n};\n",
      "predection": "get [Symbol.iterator]() { return this.__data__[Symbol.iterator](); } } ;",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "  get end() {\n    return\n      this.when.end_time ||\n      this.when.end_date ||\n",
      "target_code": "  get end() {\n    return this.when.end_time ||\n      this.when.end_date ||\n",
      "predection": "get end() { return this.when.end_time || this.when.end_date ||",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "  }\n\n  get value() {\n    const value = this.getAttribute('value');\n",
      "target_code": "  }\n\n  nuGetValue() {\n    const value = this.getAttribute('value');\n",
      "predection": "} get value() { const value = this.getAttribute('value');",
      "error id": "getter-return",
      "correct": "False"
   },
   {
      "source_code": "\n    get value() {\n        this.options.value;\n    }\n",
      "target_code": "\n    get value() {\n        return this.options.value;\n    }\n",
      "predection": "get value() { return this.options.value; }",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "  \n  get namedop() {\n    var captures;\n",
      "target_code": "  \n  namedop: function() {\n    var captures;\n",
      "predection": "namedop: function() { var captures;",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "    }\n  }\n\n  get min() {\n    this._inputs[0].min;\n  }\n\n",
      "target_code": "    }\n  }\n\n  get min() {\n    return this._min;\n  }\n\n",
      "predection": "} } get min() { return this._inputs[0].min; }",
      "error id": "getter-return",
      "correct": "False"
   },
   {
      "source_code": "    \n    get: function () {\n\n        this.p2px(this.data.position[1]);\n\n",
      "target_code": "    \n    get: function () {\n\n        return this.p2px(this.data.position[1]);\n\n",
      "predection": "get: function () { return this.p2px(this.data.position[1]);",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "Object.defineProperty(WebAudioSound.prototype, 'seek', {\n    get: function () {\n    },\n",
      "target_code": "Object.defineProperty(WebAudioSound.prototype, 'seek', {\n    get: function () {\n        return this.getCurrentTime();\n    },\n",
      "predection": "Object.defineProperty(WebAudioSound.prototype,'seek', { get: function () { return 0; },",
      "error id": "getter-return",
      "correct": "False"
   },
   {
      "source_code": "          if (!_DV) {\n              return;\n          }\n",
      "target_code": "          if (!_DV) {\n              return undefined;\n          }\n",
      "predection": "if (!_DV) { return undefined; }",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "  get isList() { return true }\n  get attrs() { new Attribute({default: \"1\"}) }\n}\n",
      "target_code": "  get isList() { return true }\n  get attrs() { return {order: new Attribute({default: \"1\"})} }\n}\n",
      "predection": "get isList() { return true } get attrs() { return new Attribute( { default: \"1\" } ) } }",
      "error id": "getter-return",
      "correct": "False"
   },
   {
      "source_code": "          if (!_page) {\n            return;\n          }\n",
      "target_code": "          if (!_page) {\n            return undefined;\n          }\n",
      "predection": "if (!_page) { return undefined; }",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "    var type = this.get('content-type');\n    if (!type) return;\n\n",
      "target_code": "    var type = this.get('content-type');\n    if (!type) return '';\n\n",
      "predection": "var type = this.get('content-type'); if (!type) return '';",
      "error id": "getter-return",
      "correct": "True"
   },
   {
      "source_code": "\n  ELB(options) {\n    if (options._apiVersion) {\n",
      "target_code": "\n  route53(options) {\n    if (options._apiVersion) {\n",
      "predection": "module.exports = ELB(options) { if (options._apiVersion) {",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n    componentDidMount() {\n        window.addEventListener(\"dragover\", this.prevent);\n        window.addEventListener(\"drop\", this.prevent);\n    }\n",
      "target_code": "\n    prevent(e) {\n        e.preventDefault();\n    }\n",
      "predection": "componentDidMount() { window.addEventListener(\"dragover\", this.prevent); window.addEventListener(\"drop\", this.prevent); }",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n  init(bodyA, axisA, anchorA, bodyB, axisB, anchorB) {\n  }\n\n",
      "target_code": "\nexport default class SCNPhysicsHingeJoint extends SCNPhysicsBehavior {\n  \n\n",
      "predection": "this.bodyA = new BodyA(bodyA, axisA, anchorA, bodyB, axisB, anchorB) }",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n  init(innerRadius, outerRadius, height) {\n  }\n",
      "target_code": "\n    this.heightSegmentCount = 0\n\n  }\n",
      "predection": "this.innerRadius = outerRadius; }",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n    reposition(id) {\n        const flickityIndex = this._getFlickityIndex(id);\n",
      "target_code": "\n    reloadCells(id) {\n        const flickityIndex = this._getFlickityIndex(id);\n",
      "predection": "reposition(id) { const flickityIndex = this._getFlickityIndex(id);",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n  getEntityIcon() {\n    return 'fa:building';\n  }\n",
      "target_code": "    \n    return `/identity/${encodeURIComponent(_entity._embedded.identity.username)}/identity-contract/${entityIdentifier}/detail`;\n  }\n",
      "predection": "getButtonId() { return 'fa:building'; }",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n  ended() {\n    this.trigger(Events.CONTAINER_ENDED, this, this.name)\n",
      "target_code": "\n  onEnded() {\n    this.trigger(Events.CONTAINER_ENDED, this, this.name)\n",
      "predection": "this.trigger(Events.CONTAINER_ENDED, this, this.name)",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n  init(radius) {\n  }\n",
      "target_code": "\n    this.segmentCount = 0\n  }\n",
      "predection": "module.exports = function(radius) { }",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n    static registerDeployer(name, processor) {\n        if(!this.processors) {\n",
      "target_code": "\n    static registerProcessor(name, processor) {\n        if(!this.processors) {\n",
      "predection": "static registerProcessor(name, processor) { if(!this.processors) {",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n    async indexOf(graphicLayerName) {\n        try {\n",
      "target_code": "\n    async indexOf(graphicsOverlay) {\n        try {\n",
      "predection": "export default async indexOf(graphicLayerName) { try {",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "\n  getActions () {\n    return this.events;\n",
      "target_code": "\n  getEvents () {\n    return this.events;\n",
      "predection": "getEvents () { return this.events;",
      "error id": "no-dupe-class-members",
      "correct": "True"
   },
   {
      "source_code": "\n  init(node) {\n  }\n",
      "target_code": "\n    this._node = null\n  }\n",
      "predection": "module.exports = function(node) { return node; }",
      "error id": "no-dupe-class-members",
      "correct": "False"
   },
   {
      "source_code": "    } catch (err) {\n      err = get(err, 'data.message') || err.toString();\n      throw new Error('EsService get indices: ' + err);\n    }\n",
      "target_code": "    } catch (err) {\n      throw new Error(this.sentinlHelper.apiErrMsg(err, 'EsService get all indexes'));\n    }\n",
      "predection": "} catch (err) { throw new Error('EsService get indices:'+ err); }",
      "error id": "no-ex-assign",
      "correct": "False"
   },
   {
      "source_code": "      if (!err) {\n        err = Boom.badImplementation()\n      }\n",
      "target_code": "      if (!err) {\n        err = Boom.badImplementation() \n      }\n",
      "predection": "if (!err) { err = Boom.badImplementation() }",
      "error id": "no-ex-assign",
      "correct": "True"
   },
   {
      "source_code": "    error.message = 'Cookie code evaluation failed: ' + error.message;\n    error = new errors.ParserError(error, options, response);\n\n    return callback(error, response, body);\n  }\n",
      "target_code": "    error.message = 'Cookie code evaluation failed: ' + error.message;\n    return callback(new errors.ParserError(error, options, response));\n  }\n",
      "predection": "error.message = 'Cookie code evaluation failed:'+ error.message; return callback(new errors.ParserError(error, options, response)); }",
      "error id": "no-ex-assign",
      "correct": "True"
   },
   {
      "source_code": "    } catch (err) {\n      err = this.createError(err);\n      throw err;\n    }\n",
      "target_code": "    } catch (err) {\n      throw Runner.createError(err);\n    }\n",
      "predection": "} catch (err) { err = this.createError(err); throw err; }",
      "error id": "no-ex-assign",
      "correct": "False"
   },
   {
      "source_code": "\n  constructor(startState, fallThroughState, states, exceptionBlocks) {\n    this.location = null;\n\n",
      "target_code": "\n  constructor(startState, fallThroughState, states, exceptionBlocks) {\n    super(null);\n\n",
      "predection": "constructor(startState, fallThroughState, states, exceptionBlocks) { super(); this.location = null;",
      "error id": "constructor-super",
      "correct": "False"
   },
   {
      "source_code": "export default class Navbar extends React.Component {\n\n  constructor() {\n    this.state = getStateFromStores();\n  }\n\n",
      "target_code": "export default class Navbar extends React.Component {\n\n",
      "predection": "export default class Navbar extends React.Component { constructor() { super(); this.state = getStateFromStores(); }",
      "error id": "constructor-super",
      "correct": "False"
   },
   {
      "source_code": "class Watch extends events.EventEmitter {\n  constructor(filename, mtime, size) {\n    this.filename = filename;\n",
      "target_code": "class Watch extends events.EventEmitter {\n  constructor(filename, mtime, size) {\n    super();\n    this.filename = filename;\n",
      "predection": "class Watch extends events.EventEmitter { constructor(filename, mtime, size) { super(); this.filename = filename;",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "export default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        this.adapter = adapter\n",
      "target_code": "export default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        super()\n        this.adapter = adapter\n",
      "predection": "export default class ASTQQueryExec extends ASTQQueryTrace { constructor (adapter, params, funcs, trace) { super() this.adapter = adapter",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "class QuestionnaireItemSystemFocus extends QuestionnaireItemSystem {\n\n    constructor() {\n        QuestionnaireItemSystem.call(this, null, \"Focus\", false);\n\n        this.answer = [];\n",
      "target_code": "class QuestionnaireItemSystemFocus extends QuestionnaireItemSystem {\n\n    constructor() {\n        super(null, \"Focus\", false);\n\n        this.answer = [];\n",
      "predection": "class QuestionnaireItemSystemFocus extends QuestionnaireItemSystem { constructor() { super(); this.answer = [];",
      "error id": "constructor-super",
      "correct": "False"
   },
   {
      "source_code": "class SyncProcess extends EventEmitter { \n  constructor(params = {}) {\n    this.id = Math.floor(Math.random() * 1000000);\n",
      "target_code": "class SyncProcess extends EventEmitter { \n  constructor(params = {}) {\n    super();\n\n    this.id = Math.floor(Math.random() * 1000000);\n",
      "predection": "class SyncProcess extends EventEmitter { constructor(params = { } ) { super(); this.id = Math.floor(Math.random() * 1000000);",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "class SimpleAdder extends SimpleAdderBase {\n\tconstructor() {\n\t\tthis._v = 0;\n",
      "target_code": "class SimpleAdder extends SimpleAdderBase {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._v = 0;\n",
      "predection": "class SimpleAdder extends SimpleAdderBase { constructor() { super(); this._v = 0;",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "\n    constructor(map, layer, dataSet, options) {\n        if (!BaseLayer) {\n",
      "target_code": "\n    constructor(map, layer, dataSet, options) {\n        super(map, dataSet, options);\n        if (!BaseLayer) {\n",
      "predection": "constructor(map, layer, dataSet, options) { super(); if (!BaseLayer) {",
      "error id": "constructor-super",
      "correct": "False"
   },
   {
      "source_code": "class P extends React.Component {\n    constructor() {\n        this.state = {\n",
      "target_code": "class P extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n",
      "predection": "class P extends React.Component { constructor() { super(); this.state = {",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "\n\tconstructor ( target, store, fields, sortable=[], options={}, filtered=false ) {\n\t\tlet sortOrder;\n\n",
      "target_code": "\n\tconstructor ( target, store, fields, sortable=[], options={}, filtered=false ) {\n\t\tsuper();\n\n",
      "predection": "constructor ( target, store, fields, sortable=[], options= { }, filtered=false ) { super(); let sortOrder;",
      "error id": "constructor-super",
      "correct": "False"
   },
   {
      "source_code": "class ValidationError extends Error {\n  constructor(tree, message) {\n    this.tree = tree;\n",
      "target_code": "class ValidationError extends Error {\n  constructor(tree, message) {\n    super();\n    this.tree = tree;\n",
      "predection": "class ValidationError extends Error { constructor(tree, message) { super(); this.tree = tree;",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "\nclass ScrollTo extends Component {\n  \n  constructor() {\n    this.handleClick = this.handleClick.bind(this);\n",
      "target_code": "\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n",
      "predection": "class ScrollTo extends Component { constructor() { super(); this.handleClick = this.handleClick.bind(this);",
      "error id": "constructor-super",
      "correct": "False"
   },
   {
      "source_code": "class Mysql extends Datasource {\n  constructor(options) {\n    this.options = options;\n",
      "target_code": "class Mysql extends Datasource {\n  constructor(options) {\n    super(options);\n\n    this.options = options;\n",
      "predection": "class Mysql extends Datasource { constructor(options) { super(); this.options = options;",
      "error id": "constructor-super",
      "correct": "False"
   },
   {
      "source_code": "\n    constructor(eventType, userCallback = null) {\n        this.eventType = eventType;\n",
      "target_code": "\n    constructor(eventType, userCallback = null) {\n        super();\n        this.eventType = eventType;\n",
      "predection": "constructor(eventType, userCallback = null) { super(); this.eventType = eventType;",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "export default class XhrManager extends Observable {\n\n  constructor() {\n    this.sessionManager = ContainerJS.Inject;\n",
      "target_code": "export default class XhrManager extends Observable {\n\n  constructor() {\n    super();\n    this.sessionManager = ContainerJS.Inject;\n",
      "predection": "export default class XhrManager extends Observable { constructor() { super(); this.sessionManager = ContainerJS.Inject;",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "\t\n\tconstructor(){\n\t\tthis.name = 'pdf'\n",
      "target_code": "\t\n\tconstructor(){\n\t\tsuper()\n\t\tthis.name = 'pdf'\n",
      "predection": "constructor() { super() this.name = 'pdf'",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "\n  constructor(method, columns, as = null, isDistinct = false) {\n    if ( isString(columns) ) columns = columns.split(/\\s*,\\s*/)\n    \n",
      "target_code": "\n  constructor(method, columns, as = null, isDistinct = false) {\n    super()\n    \n",
      "predection": "constructor(method, columns, as = null, isDistinct = false) { super(); if ( isString(columns) ) columns = columns.split(/ \\ s*, \\ s*/)",
      "error id": "constructor-super",
      "correct": "False"
   },
   {
      "source_code": "        this.variation = variation;\n        super();\n        this.vastUtil = new VASTUtil();\n",
      "target_code": "        this.variation = variation;\n        this.vastUtil = new VASTUtil();\n",
      "predection": "this.variation = variation; this.vastUtil = new VASTUtil();",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "class ViewToggler extends (require('events').EventEmitter) {\n  constructor() {\n    this.container = null;\n",
      "target_code": "class ViewToggler extends (require('events').EventEmitter) {\n  constructor() {\n    super();\n    this.container = null;\n",
      "predection": "class ViewToggler extends (require('events').EventEmitter) { constructor() { super(); this.container = null;",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "export class TransientRegistration extends Registration {\n  constructor(key){\n    this.key = key;\n",
      "target_code": "export class TransientRegistration extends Registration {\n  constructor(key){\n    super();\n    this.key = key;\n",
      "predection": "export class TransientRegistration extends Registration { constructor(key) { super(); this.key = key;",
      "error id": "constructor-super",
      "correct": "True"
   },
   {
      "source_code": "\nvar KEY_OPTION = new Symbol(\"option\");\n\n",
      "target_code": "\nvar KEY_OPTION = Symbol(\"option\");\n\n",
      "predection": "var KEY_OPTION = Symbol(\"option\");",
      "error id": "no-new-symbol",
      "correct": "True"
   },
   {
      "source_code": "const { Notification } = require(\"../build/lib/notification\");\nconst { } = require(\"..\")\nconst { wait } = require(\"../build/lib/promises\");\n\nasync function main() {\n",
      "target_code": "const { Notification } = require(\"../build/lib/notification\");\nconst { wait } = require(\"alcalzone-shared/async\");\n\nasync function main() {\n",
      "predection": "const { Notification } = require(\"../build/lib/notification\"); const { wait } = require(\"../build/lib/promises\"); async function main() {",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "\n      spyOn(PipelineConfigService, 'deletePipeline').and.callFake(function(applicationName, {}, pipelineName) {\n        submittedPipeline = pipelineName;\n",
      "target_code": "\n      spyOn(PipelineConfigService, 'deletePipeline').and.callFake(function(applicationName, _, pipelineName) {\n        submittedPipeline = pipelineName;\n",
      "predection": "spyOn(PipelineConfigService, 'deletePipeline').and.callFake(function(applicationName, pipeName) { submittedPipeline = pipelineName;",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "export default ({}) => {\n  \n",
      "target_code": "export default () => {\n  \n",
      "predection": "export default () => {",
      "error id": "no-empty-pattern",
      "correct": "True"
   },
   {
      "source_code": "    };\n\n    return {} = {act, use};\n};\n",
      "target_code": "    };\n\n    return {act, use};\n};\n",
      "predection": "} ; return { act, use } ; } ;",
      "error id": "no-empty-pattern",
      "correct": "True"
   },
   {
      "source_code": "    render() {\n        const {} = this.props;\n        return (\n",
      "target_code": "    render() {\n        return (\n",
      "predection": "render() { return (",
      "error id": "no-empty-pattern",
      "correct": "True"
   },
   {
      "source_code": "        let nativeFunc = new NativeFunc(type.origin, \"operator cast\", TypeRef.wrap(type), [], true);\n        nativeFunc.implementation = ([], node) => {\n            let result = new EPtr(new EBuffer(type.size), 0);\n",
      "target_code": "        let nativeFunc = new NativeFunc(type.origin, \"operator cast\", TypeRef.wrap(type), [], true);\n        nativeFunc.implementation = (node) => {\n            let result = new EPtr(new EBuffer(type.size), 0);\n",
      "predection": "let nativeFunc = new NativeFunc(type.origin, \"operator cast\", TypeRef.wrap(type), [], true); nativeFunc.implementation = ([], node) => { let result = new EPtr(new EBuffer(type.size), 0);",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "import LoginScreen from './login-screen';\n\nconst mapStateToProps = ({}) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n",
      "target_code": "import LoginScreen from './login-screen';\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n",
      "predection": "import LoginScreen from './login-screen'; const mapStateToProps = () => ( { } ); const mapDispatchToProps = (dispatch) => ( {",
      "error id": "no-empty-pattern",
      "correct": "True"
   },
   {
      "source_code": "\nconst Searchbox = ({ }) => (\n\t\t<form role=\"search\" className=\"au-search au-streatch_row\">\n",
      "target_code": "\nconst Searchbox = ({ placeholder }) => (\n\t\t<form role=\"search\" className=\"au-search au-streatch_row\">\n",
      "predection": "const Searchbox = () => ( form role=\"search\" className=\"au-search au-streatch_row\">",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "        },\n        resolve: ({}, { role }) => {\n            const result = getUsers();\n",
      "target_code": "        },\n        resolve: (_srource, { role }) => {\n            const result = getUsers();\n",
      "predection": "}, resolve: function() { const result = getUsers();",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "\nexport default ({banUser, comment: {}}) => (\n  <button \n",
      "target_code": "\nexport default ({banUser}) => (\n  <button \n",
      "predection": "export default ( { comment: { comment } ) => ( button",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "\n    ...componentLoadingMap\n  }\n  return function Toggle({ }) {\n\n",
      "target_code": "import React from 'react'\n\n",
      "predection": "...componentLoadingMap } return function Toggle() {",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "\nconst ReverseArrows = ({}) => (\n  <ReverseArrowsContainer\n",
      "target_code": "\nconst ReverseArrows = () => (\n  <ReverseArrowsContainer\n",
      "predection": "const ReverseArrows = () => ( ReverseArrowsContainer",
      "error id": "no-empty-pattern",
      "correct": "True"
   },
   {
      "source_code": "}\n\n\nexport async function getByUser(parentValue, {}, { auth }) {\n  if(auth.user && auth.user.id) {\n",
      "target_code": "\n\nexport async function create(parentValue, { clientId, name, email, mobile, experience, resume, salaryCurrent = '', salaryExpected = '' }, { auth }) {\n  if(auth.user && auth.user.id) {\n",
      "predection": "export async function create(parentValue, { name, email, mobile }, { auth } ) { if(auth.user && auth.user.id) {",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "  const logic2 = kea({\n    actions: ({}) => ({\n      doSomething: true\n",
      "target_code": "  const logic2 = kea({\n    actions: () => ({\n      doSomething: true\n",
      "predection": "const logic2 = kea( { actions: () => ( { doSomething: true",
      "error id": "no-empty-pattern",
      "correct": "True"
   },
   {
      "source_code": "}\n\n\nexport async function getByUser(parentValue, {}, { auth }) {\n  if(auth.user && auth.user.id) {\n",
      "target_code": "\n\nexport async function create(parentValue, { name, description = '' }, { auth }) {\n  if(auth.user && auth.user.id) {\n",
      "predection": "export async function create(parentValue, { name, email, mobile }, { auth } ) { if(auth.user && auth.user.id) {",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "\nmodule.exports = ({}) => {\n  \n",
      "target_code": "\nmodule.exports = ({network}) => {\n  \n",
      "predection": "module.exports = {",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "  Query: {\n    boardAllQuery: async (_, {}) => {\n      const boards = await Board.find()\n",
      "target_code": "  Query: {\n    boardAllQuery: async () => {\n      const boards = await Board.find()\n",
      "predection": "Query: { boardAllQuery: async (_) => { const boards = await Board.find()",
      "error id": "no-empty-pattern",
      "correct": "False"
   },
   {
      "source_code": "\n    let {} = this.props;\n    const drawPoints = pointFeatures && pointFeatures.length > 0;\n",
      "target_code": "\n    const drawPoints = pointFeatures && pointFeatures.length > 0;\n",
      "predection": "const drawPoints = pointFeatures && pointFeatures.length > 0;",
      "error id": "no-empty-pattern",
      "correct": "True"
   },
   {
      "source_code": "\nStatistics = connect((state) => {\n  return {\n",
      "target_code": "\nconst mapStateToProps = (state) => {\n  return {\n",
      "predection": "const mapStateToProps = (state) => { return {",
      "error id": "no-class-assign",
      "correct": "True"
   },
   {
      "source_code": "\nPreviewDocument = connect(mapStateToProps, { fetchDocument, fetchEntityTags, queryEntities })(PreviewDocument);\nPreviewDocument = withRouter(PreviewDocument);\n",
      "target_code": "\nPreviewDocument = connect(mapStateToProps, {})(PreviewDocument);\nPreviewDocument = withRouter(PreviewDocument);\n",
      "predection": "PreviewDocument = connect(mapStateToProps, { } )(PreviewDocument); PreviewDocument = withRouter(PreviewDocument);",
      "error id": "no-class-assign",
      "correct": "True"
   },
   {
      "source_code": "    Query.Field = Field;\n})(Query = exports.Query || (exports.Query = {}));\n\n",
      "target_code": "    Query.Field = Field;\n})(Query = exports.Query || (exports.Query = {}));\nexports.Query = Query;\n\n",
      "predection": "Query.Field = Field; } )(Query || (exports.Query = { } ));",
      "error id": "no-class-assign",
      "correct": "False"
   },
   {
      "source_code": "\nEntityViews = connect(mapStateToProps)(EntityViews);\nEntityViews = withRouter(EntityViews);\nexport default EntityViews;\n",
      "target_code": "\nexport default connectedWIthRouter({ mapStateToProps })(EntityViews);\n",
      "predection": "EntityViews = connect(mapStateToProps)(EntityViews); export default EntityViews;",
      "error id": "no-class-assign",
      "correct": "False"
   },
   {
      "source_code": "\nContact = connect(mapStateToProps)(Contact);\nContact = reduxForm({\n\tform: 'contactForm',\n  \tfields: ['firstName', 'lastName', 'email'] \n",
      "target_code": "\nmodule.exports = connect(mapStateToProps)(Contact);\n",
      "predection": "Contact = connect(mapStateToProps)(Contact); Contact = reduxForm( { form: 'contactForm', fields: ['firstName', 'lastName', 'email']",
      "error id": "no-class-assign",
      "correct": "False"
   },
   {
      "source_code": "}\n\nHelpButton = connect()(HelpButton)\n\nexport default class Right extends Component {\n",
      "target_code": "}\n\nconst HelpButtonConnect = connect()(HelpButton)\n\nexport default class Right extends Component {\n",
      "predection": "} export default class Right extends Component {",
      "error id": "no-class-assign",
      "correct": "False"
   },
   {
      "source_code": "DocumentContextLoader = connect(mapStateToProps, { fetchDocument, fetchEntityTags, queryEntities })(DocumentContextLoader);\nDocumentContextLoader = withRouter(DocumentContextLoader);\nexport default DocumentContextLoader;\n",
      "target_code": "DocumentContextLoader = connect(mapStateToProps, { fetchDocument, fetchEntityTags, queryEntities })(DocumentContextLoader);\nexport default DocumentContextLoader;\n",
      "predection": "DocumentContextLoader = connect(mapStateToProps, { } )(DocumentContextLoader); export default DocumentContextLoader;",
      "error id": "no-class-assign",
      "correct": "False"
   },
   {
      "source_code": "};\n\nUpload = getGrid(Upload);\n\nimport FormControl from './FormControl';\n",
      "target_code": "};\n\nimport FormControl from './FormControl';\n",
      "predection": "} ; import FormControl from './FormControl';",
      "error id": "no-class-assign",
      "correct": "True"
   },
   {
      "source_code": "\nCollectionViewsMenu = connect(mapStateToProps, {fetchCollectionXrefIndex})(CollectionViewsMenu);\nCollectionViewsMenu = injectIntl(CollectionViewsMenu);\n",
      "target_code": "\nCollectionViewsMenu = injectIntl(CollectionViewsMenu);\n",
      "predection": "CollectionViews = connect(mapStateToProps)(CollectionViews); CollectionViews = injectIntl(CollectionViews);",
      "error id": "no-class-assign",
      "correct": "False"
   },
   {
      "source_code": "\nViewItem = injectIntl(ViewItem);\nViewItem = withRouter(ViewItem);\n",
      "target_code": "\nViewItem = withRouter(ViewItem);\n",
      "predection": "var ViewItem = injectIntl(ViewItem); ViewItem = withRouter(ViewItem);",
      "error id": "no-class-assign",
      "correct": "False"
   },
   {
      "source_code": "\nTerms = require('./match')(Terms);\nTerms = require('./match/not')(Terms);\nTerms = require('./methods/tag')(Terms);\nTerms = require('./methods/loops')(Terms);\n",
      "target_code": "\nrequire('./match')(Terms);\nrequire('./match/not')(Terms);\nrequire('./methods/tag')(Terms);\nrequire('./methods/loops')(Terms);\n",
      "predection": "require('./match')(Terms); require('./match/not')(Terms); require('./methods/tag')(Terms); require('./methods/loops')(Terms);",
      "error id": "no-class-assign",
      "correct": "True"
   },
   {
      "source_code": "AlertsPane = injectIntl(AlertsPane);\nAlertsPane = withRouter(AlertsPane);\nexport default connect(mapStateToProps, {fetchAlerts, addAlert, deleteAlert})(AlertsPane);\n",
      "target_code": "AlertsPane = injectIntl(AlertsPane);\nexport default connect(mapStateToProps, {fetchAlerts, addAlert, deleteAlert})(AlertsPane);\n",
      "predection": "AlertsPane = injectIntl(AlertsPane); export default connect(mapStateToProps, { fetchAlerts, addAlert, deleteAlert } )(AlertsPane);",
      "error id": "no-class-assign",
      "correct": "True"
   }
]